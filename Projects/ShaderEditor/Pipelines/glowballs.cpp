// This is generated file
// Origin file: 'ShaderEditor/Pipelines/Glowballs.ppln'
#include "all_pipelines.h"
// C++ shader
#ifdef GRAPHICS_API_SOFT
namespace SWShaderLang {
namespace {

#	define INOUT
#	define IN
#	define OUT

	struct Ray
	{
		Float3 origin;
		Float3 dir;
	
		Ray () {}
		Ray (Ray &&) = default;
		Ray (const Ray &) = default;
		explicit Ray(const Float3 &origin, const Float3 &dir) : origin{origin}, dir{dir} {}
	
		Ray& operator = (Ray &&) = default;
		Ray& operator = (const Ray &) = default;
		Bool operator == (const Ray &right) const {
			return	all( origin == right.origin ) &&
					all( dir == right.dir );
		}
		Bool operator != (const Ray &right) const { return !(*this == right); }
	
	};
	
	struct Box
	{
		Float3 pos;
		Float3 size;
	
		Box () {}
		Box (Box &&) = default;
		Box (const Box &) = default;
		explicit Box(const Float3 &pos, const Float3 &size) : pos{pos}, size{size} {}
	
		Box& operator = (Box &&) = default;
		Box& operator = (const Box &) = default;
		Bool operator == (const Box &right) const {
			return	all( pos == right.pos ) &&
					all( size == right.size );
		}
		Bool operator != (const Box &right) const { return !(*this == right); }
	
	};
	
	struct HitTest
	{
		Bool hit;
		Float dist;
		Float3 normal;
		Float4 col;
		Float ref;
	
		HitTest () {}
		HitTest (HitTest &&) = default;
		HitTest (const HitTest &) = default;
		explicit HitTest(const Bool &hit, const Float &dist, const Float3 &normal, const Float4 &col, const Float &ref) : hit{hit}, dist{dist}, normal{normal}, col{col}, ref{ref} {}
	
		HitTest& operator = (HitTest &&) = default;
		HitTest& operator = (const HitTest &) = default;
		Bool operator == (const HitTest &right) const {
			return	all( hit == right.hit ) &&
					all( dist == right.dist ) &&
					all( normal == right.normal ) &&
					all( col == right.col ) &&
					all( ref == right.ref );
		}
		Bool operator != (const HitTest &right) const { return !(*this == right); }
	
	};
	
	struct Camera
	{
		Float3 pos;
		Ray ray;
	
		Camera () {}
		Camera (Camera &&) = default;
		Camera (const Camera &) = default;
		explicit Camera(const Float3 &pos, const Ray &ray) : pos{pos}, ray{ray} {}
	
		Camera& operator = (Camera &&) = default;
		Camera& operator = (const Camera &) = default;
		Bool operator == (const Camera &right) const {
			return	all( pos == right.pos ) &&
					all( ray == right.ray );
		}
		Bool operator != (const Camera &right) const { return !(*this == right); }
	
	};
	
	struct Sphere
	{
		Float3 pos;
		Float radius;
	
		Sphere () {}
		Sphere (Sphere &&) = default;
		Sphere (const Sphere &) = default;
		explicit Sphere(const Float3 &pos, const Float &radius) : pos{pos}, radius{radius} {}
	
		Sphere& operator = (Sphere &&) = default;
		Sphere& operator = (const Sphere &) = default;
		Bool operator == (const Sphere &right) const {
			return	all( pos == right.pos ) &&
					all( radius == right.radius );
		}
		Bool operator != (const Sphere &right) const { return !(*this == right); }
	
	};
	
	struct ShadertoyUB
	{
		Float3 iResolution;
		Float iTime;
		Float iTimeDelta;
		Int iFrame;
		Float2 _padding0;
		SArr<Float4,4> iChannelTime;
		SArr<Float4,4> iChannelResolution;
		Float4 iMouse;
		Float4 iDate;
		Float iSampleRate;
		Float _padding1;
		Float _padding2;
		Float _padding3;
		SArr<Float4,4> iCameraFrustum;
		Float4 iCameraPos;
	
		ShadertoyUB () {}
		ShadertoyUB (ShadertoyUB &&) = default;
		ShadertoyUB (const ShadertoyUB &) = default;
		explicit ShadertoyUB(const Float3 &iResolution, const Float &iTime, const Float &iTimeDelta, const Int &iFrame, const Float2 &_padding0, const SArr<Float4,4> &iChannelTime, const SArr<Float4,4> &iChannelResolution, const Float4 &iMouse, const Float4 &iDate, const Float &iSampleRate, const Float &_padding1, const Float &_padding2, const Float &_padding3, const SArr<Float4,4> &iCameraFrustum, const Float4 &iCameraPos) : iResolution{iResolution}, iTime{iTime}, iTimeDelta{iTimeDelta}, iFrame{iFrame}, _padding0{_padding0}, iChannelTime{iChannelTime}, iChannelResolution{iChannelResolution}, iMouse{iMouse}, iDate{iDate}, iSampleRate{iSampleRate}, _padding1{_padding1}, _padding2{_padding2}, _padding3{_padding3}, iCameraFrustum{iCameraFrustum}, iCameraPos{iCameraPos} {}
	
		ShadertoyUB& operator = (ShadertoyUB &&) = default;
		ShadertoyUB& operator = (const ShadertoyUB &) = default;
		Bool operator == (const ShadertoyUB &right) const {
			return	all( iResolution == right.iResolution ) &&
					all( iTime == right.iTime ) &&
					all( iTimeDelta == right.iTimeDelta ) &&
					all( iFrame == right.iFrame ) &&
					all( _padding0 == right._padding0 ) &&
					all( iChannelTime == right.iChannelTime ) &&
					all( iChannelResolution == right.iChannelResolution ) &&
					all( iMouse == right.iMouse ) &&
					all( iDate == right.iDate ) &&
					all( iSampleRate == right.iSampleRate ) &&
					all( _padding1 == right._padding1 ) &&
					all( _padding2 == right._padding2 ) &&
					all( _padding3 == right._padding3 ) &&
					all( iCameraFrustum == right.iCameraFrustum ) &&
					all( iCameraPos == right.iCameraPos );
		}
		Bool operator != (const ShadertoyUB &right) const { return !(*this == right); }
	
	};
	
	
	//---------------------------------
	
	static Float4 traceScene (IN Camera cam, IN Float2 seed, IN Float lastB);
	static HitTest intersectBox (IN Ray r, IN Box b3);
	static HitTest intersectSphere (IN Ray r1, IN Sphere s);
	static Float nrand (IN Float2 n);
	static Camera setupCam (IN Float3 pos, IN Float3 target, IN Float fov, IN Float2 uv);
	static void mainImage (OUT Float4 &fragColor, IN Float2 fragCoord);
	static HitTest minT (IN HitTest a2, IN HitTest b2, IN HitTest c1, IN HitTest d, IN HitTest e);
	static HitTest minT (IN HitTest a, IN HitTest b);
	static HitTest minT (IN HitTest a1, IN HitTest b1, IN HitTest c);
	
	//---------------------------------
	
	static void sw_glowballs_comp (const Impl::SWShaderHelper &_helper_)
	{
		// prepare externals
		Impl::Texture2D< vec4 >  iChannel0;    _helper_.GetTexture( 0, iChannel0 );
		Impl::Image2D< vec4, Impl::EStorageAccess::WriteOnly >  un_DstImage;    _helper_.GetImage( 1, un_DstImage );
		Impl::UniformBuffer< ShadertoyUB >  external_0;    _helper_.GetUniformBuffer( 2, external_0 );
		auto& gl_GlobalInvocationID = _helper_.GetComputeShaderState().inGlobalInvocationID;
		Float t;
		Float divergence;
	
		// shader
		{
			Float2 coord = (Float2(gl_GlobalInvocationID.xy) + Float(0.5f));
			;
			Float4 color;
			
			// mainImage(vf4;vf2;
			Float2 xV_fragCoord = coord;
			Bool xV_exit = Bool(false);
			do {
				t = external_0->iTime;
				Float2 xV_uv1 = (xV_fragCoord.xy / external_0->iResolution.xy);
				;
				Float4 xV_l1 = texture(iChannel0, xV_uv1);
				;
				xV_uv1 = ((xV_uv1 * Float(2.0f)) - Float(1.0f));
				(xV_uv1.y /= (external_0->iResolution.x / external_0->iResolution.y));
				
				// setupCam(vf3;vf3;f1;vf2;
				Float3 xU_pos = Float3(0.0f, 3.0f, -8.0f);
				Float3 xU_target = Float3(4.0f, 5.0f, 4.0f);
				Float xU_fov = Float(1.0f);
				Float2 xU_uv = xV_uv1;
				Camera xU_return = Camera( );
				Bool xU_exit = Bool(false);
				do {
					Float2 xU_mouse = (external_0->iMouse.xy / external_0->iResolution.xy);
					;
					xU_mouse = ((xU_mouse * Float(2.0f)) - Float(0.5f));
					(xU_pos -= xU_target);
					xU_pos.xz = ((glm::cos((xU_mouse.x * Float(0.5f))) * xU_pos.xz) + (glm::sin((xU_mouse.x * Float(0.5f))) * Float2(-(xU_pos.z), xU_pos.x)));
					xU_pos.xy = ((glm::cos((xU_mouse.y * Float(0.5f))) * xU_pos.xy) + (glm::sin((xU_mouse.y * Float(0.5f))) * Float2(-(xU_pos.y), xU_pos.x)));
					(xU_pos += xU_target);
					Camera xU_cam1;
					xU_cam1.pos = xU_pos;
					Ray xU_ray;
					xU_ray.origin = xU_pos;
					(xU_uv *= xU_fov);
					Float3 xU_cw = normalize((xU_target - xU_pos));
					;
					Float3 xU_cp = Float3(0.0f, 1.0f, 0.0f);
					;
					Float3 xU_cu = normalize(cross(xU_cw, xU_cp));
					;
					Float3 xU_cv = normalize(cross(xU_cu, xU_cw));
					;
					xU_ray.dir = normalize((((xU_uv.x * xU_cu) + (xU_uv.y * xU_cv)) + (Float(0.5f) * xU_cw)));
					xU_cam1.ray = xU_ray;
					divergence = (xU_fov / external_0->iResolution.x);
					divergence = (divergence + (length(xU_uv) * Float(0.01f)));
					{
						xU_return = xU_cam1;
						xU_exit = true;
						break;
					};
				
				} while(false);
				// end setupCam(vf3;vf3;f1;vf2;;
				Camera xV_cam2 = xU_return;
				;
				Float xV_lastB1 = glm::max(xV_l1.x, glm::max(xV_l1.y, xV_l1.z));
				;
				xV_lastB1 = glm::pow(xV_lastB1, Float(0.25f));
				
				// traceScene(struct-Camera-vf3-struct-Ray-vf3-vf311;vf2;f1;
				Camera xV_xVB_cam = xV_cam2;
				Float2 xV_xVB_seed = (xV_uv1 + external_0->iTime);
				Float xV_xVB_lastB = glm::max(Float(0.30000001f), (Float(1.0f) - xV_lastB1));
				Float4 xV_xVB_return = Float4(0);
				Bool xV_xVB_exit = Bool(false);
				do {
					Float3 xV_xVB_startPos = xV_xVB_cam.pos;
					;
					Float4 xV_xVB_result = Float4(0.0f);
					;
					Int xV_xVB_maxI = Int((Float(30.0f) * xV_xVB_lastB));
					;
					for (Int i = Int(0); (!xV_xVB_exit && (i < Int(30))); (i)++)
					{
						if ((i == xV_xVB_maxI))
						{
							break;
						;
						}
						;
						Ray xV_xVB_r2 = xV_xVB_cam.ray;
						;
						
						// nrand(vf2;
						Float2 xU_xUE_n = xV_xVB_seed;
						Float xU_xUE_return = Float(0);
						Bool xU_xUE_exit = Bool(false);
						do {
							{
								xU_xUE_return = glm::fract((glm::sin(dot(xU_xUE_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
								xU_xUE_exit = true;
								break;
							};
						
						} while(false);
						// end nrand(vf2;;
						(xV_xVB_r2.dir.x += (((xU_xUE_return * Float(2.0f)) - Float(1.0f)) * divergence));
						
						// nrand(vf2;
						Float2 xU_xUE_xUEI_n = xV_xVB_seed.yx;
						Float xU_xUE_xUEI_return = Float(0);
						Bool xU_xUE_xUEI_exit = Bool(false);
						do {
							{
								xU_xUE_xUEI_return = glm::fract((glm::sin(dot(xU_xUE_xUEI_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
								xU_xUE_xUEI_exit = true;
								break;
							};
						
						} while(false);
						// end nrand(vf2;;
						(xV_xVB_r2.dir.y += (((xU_xUE_xUEI_return * Float(2.0f)) - Float(1.0f)) * divergence));
						
						// nrand(vf2;
						Float2 xH_n = xV_xVB_seed.xx;
						Float xH_return = Float(0);
						Bool xH_exit = Bool(false);
						do {
							{
								xH_return = glm::fract((glm::sin(dot(xH_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
								xH_exit = true;
								break;
							};
						
						} while(false);
						// end nrand(vf2;;
						(xV_xVB_r2.dir.z += (((xH_return * Float(2.0f)) - Float(1.0f)) * divergence));
						xV_xVB_r2.dir = normalize(xV_xVB_r2.dir);
						Float4 xV_xVB_impact = Float4(1.0f);
						;
						(xV_xVB_seed)++;
						Int xV_xVB_maxJ = Int((Float(10.0f) * xV_xVB_lastB));
						;
						for (Int j = Int(0); (!xV_xVB_exit && (j < Int(10))); (j)++)
						{
							
							// intersectBox(struct-Ray-vf3-vf31;struct-Box-vf3-vf31;
							Ray xB_r = xV_xVB_r2;
							Box xB_b3 = Box( Float3(-5.0f, 10.0f, -5.0f), Float3(30.0f, 20.0f, 25.0f) );
							HitTest xB_return = HitTest( );
							Bool xB_exit = Bool(false);
							do {
								(xB_b3.size *= Float(0.5f));
								Float3 xB_ba = (xB_b3.pos - xB_b3.size);
								;
								Float3 xB_bb = (xB_b3.pos + xB_b3.size);
								;
								HitTest xB_h = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
								;
								Float xB_d1 = Float(100000.0f);
								;
								Float3 xB_dA = ((xB_r.origin - xB_ba) / -(xB_r.dir));
								;
								Float3 xB_dB = ((xB_r.origin - xB_bb) / -(xB_r.dir));
								;
								xB_dA.x = ( ((xB_dA.x <= Float(0.0f))) ? (Float(100000.0f)) : (xB_dA.x) );
								xB_dA.y = ( ((xB_dA.y <= Float(0.0f))) ? (Float(100000.0f)) : (xB_dA.y) );
								xB_dA.z = ( ((xB_dA.z <= Float(0.0f))) ? (Float(100000.0f)) : (xB_dA.z) );
								xB_dB.x = ( ((xB_dB.x <= Float(0.0f))) ? (Float(100000.0f)) : (xB_dB.x) );
								xB_dB.y = ( ((xB_dB.y <= Float(0.0f))) ? (Float(100000.0f)) : (xB_dB.y) );
								xB_dB.z = ( ((xB_dB.z <= Float(0.0f))) ? (Float(100000.0f)) : (xB_dB.z) );
								Float xB_d11 = glm::min(xB_dA.x, glm::min(xB_dA.y, xB_dA.z));
								;
								Float xB_d2 = glm::min(xB_dB.x, glm::min(xB_dB.y, xB_dB.z));
								;
								xB_d1 = glm::min(xB_d11, xB_d2);
								Float3 xB_endPoint = (xB_r.origin + (xB_r.dir * xB_d1));
								;
								(xB_endPoint -= xB_b3.pos);
								if ((xB_d1 != Float(100000.0f)))
								{
									xB_h.hit = Bool(true);
									xB_h.dist = xB_d1;
									xB_h.ref = Float(0.0f);
									if ((glm::abs((glm::abs(xB_endPoint.x) - xB_b3.size.x)) < Float(0.01f)))
									{
										Bool xB_l = (xB_endPoint.x < Float(0.0f));
										;
										xB_h.normal = Float3(Float(( (xB_l) ? (Int(1)) : (Int(-1)) )), Float(0.0f), Float(0.0f));
										xB_h.col = ( (xB_l) ? (Float4(0.89999998f, 0.5f, 0.5f, 0.0f)) : (Float4(0.5f, 0.5f, 0.89999998f, 0.0f)) );
										{
											xB_return = xB_h;
											xB_exit = true;
											break;
										};
									;
									}
									;
									if ((glm::abs((glm::abs(xB_endPoint.z) - xB_b3.size.z)) < Float(0.01f)))
									{
										xB_h.normal = Float3(Float(0.0f), Float(0.0f), -(glm::sign(xB_endPoint.z)));
										xB_h.col = Float4(0.89999998f, 0.89999998f, 0.89999998f, 0.0f);
										{
											xB_return = xB_h;
											xB_exit = true;
											break;
										};
									;
									}
									;
									xB_h.normal = Float3(Float(0.0f), -(glm::sign(xB_endPoint.y)), Float(0.0f));
									xB_h.col = Float4(Float(1.0f), Float(1.0f), Float(1.0f), (glm::sign(xB_endPoint.y) * glm::clamp((glm::sin((t * Float(0.242f))) + Float(0.80000001f)), Float(0.2f), Float(1.20000005f))));
									{
										xB_return = xB_h;
										xB_exit = true;
										break;
									};
								;
								}
								;
								{
									xB_return = xB_h;
									xB_exit = true;
									break;
								};
							
							} while(false);
							// end intersectBox(struct-Ray-vf3-vf31;struct-Box-vf3-vf31;;
							HitTest xV_xVB_t0 = xB_return;
							;
							
							// intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;
							Ray xL_r1 = xV_xVB_r2;
							Sphere xL_s = Sphere( Float3(-1.0f, 2.0f, 0.0f), Float(2.0f) );
							HitTest xL_return = HitTest( );
							Bool xL_exit = Bool(false);
							do {
								Float3 xL_o = (xL_r1.origin - xL_s.pos);
								;
								Float xL_v = dot(xL_o, xL_r1.dir);
								;
								if ((xL_v > Float(0.0f)))
								{
									{
										xL_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xL_exit = true;
										break;
									};
								;
								}
								;
								Float xL_disc = ((xL_s.radius * xL_s.radius) - (dot(xL_o, xL_o) - (xL_v * xL_v)));
								;
								if ((xL_disc < Float(0.0f)))
								{
									{
										xL_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xL_exit = true;
										break;
									};
								;
								}
								;
								Float xL_dist = (length(xL_o) - glm::sqrt(xL_disc));
								;
								{
									xL_return = HitTest(Bool(true), xL_dist, normalize(((xL_r1.origin + (xL_r1.dir * xL_dist)) - xL_s.pos)), Float4(0.0f), ((glm::sin((external_0->iTime * Float(0.25f))) * Float(0.5f)) + Float(0.5f)));
									xL_exit = true;
									break;
								};
							
							} while(false);
							// end intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;;
							HitTest xV_xVB_t1 = xL_return;
							;
							xV_xVB_t1.col = Float4(0.5f, 0.60000002f, 0.89999998f, 0.0f);
							
							// intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;
							Ray xM_r1 = xV_xVB_r2;
							Sphere xM_s = Sphere( Float3(4.0f, 5.0f, 4.0f), Float(5.0f) );
							HitTest xM_return = HitTest( );
							Bool xM_exit = Bool(false);
							do {
								Float3 xM_o = (xM_r1.origin - xM_s.pos);
								;
								Float xM_v = dot(xM_o, xM_r1.dir);
								;
								if ((xM_v > Float(0.0f)))
								{
									{
										xM_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xM_exit = true;
										break;
									};
								;
								}
								;
								Float xM_disc = ((xM_s.radius * xM_s.radius) - (dot(xM_o, xM_o) - (xM_v * xM_v)));
								;
								if ((xM_disc < Float(0.0f)))
								{
									{
										xM_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xM_exit = true;
										break;
									};
								;
								}
								;
								Float xM_dist = (length(xM_o) - glm::sqrt(xM_disc));
								;
								{
									xM_return = HitTest(Bool(true), xM_dist, normalize(((xM_r1.origin + (xM_r1.dir * xM_dist)) - xM_s.pos)), Float4(0.0f), ((glm::sin((external_0->iTime * Float(0.25f))) * Float(0.5f)) + Float(0.5f)));
									xM_exit = true;
									break;
								};
							
							} while(false);
							// end intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;;
							HitTest xV_xVB_t2 = xM_return;
							;
							xV_xVB_t2.col = Float4(0.89999998f, 0.89999998f, 0.0f, 0.0f);
							xV_xVB_t2.ref = Float(0.80000001f);
							
							// intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;
							Ray xU_xUU_r1 = xV_xVB_r2;
							Sphere xU_xUU_s = Sphere( Float3(-5.0f, 4.0f, 4.0f), Float(4.0f) );
							HitTest xU_xUU_return = HitTest( );
							Bool xU_xUU_exit = Bool(false);
							do {
								Float3 xU_xUU_o = (xU_xUU_r1.origin - xU_xUU_s.pos);
								;
								Float xU_xUU_v = dot(xU_xUU_o, xU_xUU_r1.dir);
								;
								if ((xU_xUU_v > Float(0.0f)))
								{
									{
										xU_xUU_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xU_xUU_exit = true;
										break;
									};
								;
								}
								;
								Float xU_xUU_disc = ((xU_xUU_s.radius * xU_xUU_s.radius) - (dot(xU_xUU_o, xU_xUU_o) - (xU_xUU_v * xU_xUU_v)));
								;
								if ((xU_xUU_disc < Float(0.0f)))
								{
									{
										xU_xUU_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xU_xUU_exit = true;
										break;
									};
								;
								}
								;
								Float xU_xUU_dist = (length(xU_xUU_o) - glm::sqrt(xU_xUU_disc));
								;
								{
									xU_xUU_return = HitTest(Bool(true), xU_xUU_dist, normalize(((xU_xUU_r1.origin + (xU_xUU_r1.dir * xU_xUU_dist)) - xU_xUU_s.pos)), Float4(0.0f), ((glm::sin((external_0->iTime * Float(0.25f))) * Float(0.5f)) + Float(0.5f)));
									xU_xUU_exit = true;
									break;
								};
							
							} while(false);
							// end intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;;
							HitTest xV_xVB_t3 = xU_xUU_return;
							;
							xV_xVB_t3.col = Float4(Float(0.30000001f), Float(0.89999998f), Float(0.60000002f), (glm::sin((t * Float(0.60000002f))) * Float(3.0f)));
							xV_xVB_t3.ref = Float(0.0f);
							
							// intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;
							Ray xE_r1 = xV_xVB_r2;
							Sphere xE_s = Sphere( Float3(4.0f, 2.5f, -2.0f), Float(2.5f) );
							HitTest xE_return = HitTest( );
							Bool xE_exit = Bool(false);
							do {
								Float3 xE_o = (xE_r1.origin - xE_s.pos);
								;
								Float xE_v = dot(xE_o, xE_r1.dir);
								;
								if ((xE_v > Float(0.0f)))
								{
									{
										xE_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xE_exit = true;
										break;
									};
								;
								}
								;
								Float xE_disc = ((xE_s.radius * xE_s.radius) - (dot(xE_o, xE_o) - (xE_v * xE_v)));
								;
								if ((xE_disc < Float(0.0f)))
								{
									{
										xE_return = HitTest( Bool(false), Float(100000.0f), Float3(0.0f), Float4(0.0f), Float(0.0f) );
										xE_exit = true;
										break;
									};
								;
								}
								;
								Float xE_dist = (length(xE_o) - glm::sqrt(xE_disc));
								;
								{
									xE_return = HitTest(Bool(true), xE_dist, normalize(((xE_r1.origin + (xE_r1.dir * xE_dist)) - xE_s.pos)), Float4(0.0f), ((glm::sin((external_0->iTime * Float(0.25f))) * Float(0.5f)) + Float(0.5f)));
									xE_exit = true;
									break;
								};
							
							} while(false);
							// end intersectSphere(struct-Ray-vf3-vf31;struct-Sphere-vf3-f11;;
							HitTest xV_xVB_t4 = xE_return;
							;
							xV_xVB_t4.col = Float4(Float(1.0f), Float(0.5f), Float(0.2f), (glm::sin((t * Float(0.69999999f))) * Float(3.0f)));
							xV_xVB_t4.ref = Float(0.0f);
							
							// minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;
							HitTest xE_xET_a2 = xV_xVB_t0;
							HitTest xE_xET_b2 = xV_xVB_t1;
							HitTest xE_xET_c1 = xV_xVB_t2;
							HitTest xE_xET_d = xV_xVB_t3;
							HitTest xE_xET_e = xV_xVB_t4;
							HitTest xE_xET_return = HitTest( );
							Bool xE_xET_exit = Bool(false);
							do {
								
								// minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;
								HitTest xY_a = xE_xET_a2;
								HitTest xY_b = xE_xET_b2;
								HitTest xY_return = HitTest( );
								Bool xY_exit = Bool(false);
								do {
									if ((xY_a.dist < xY_b.dist))
									{
										{
											xY_return = xY_a;
											xY_exit = true;
											break;
										};
									;
									}
									else
									{
										{
											xY_return = xY_b;
											xY_exit = true;
											break;
										};
									;
									}
									;
								
								} while(false);
								// end minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;;
								
								// minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;
								HitTest xF_a1 = xE_xET_c1;
								HitTest xF_b1 = xE_xET_d;
								HitTest xF_c = xE_xET_e;
								HitTest xF_return = HitTest( );
								Bool xF_exit = Bool(false);
								do {
									
									// minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;
									HitTest xO_a = xF_b1;
									HitTest xO_b = xF_c;
									HitTest xO_return = HitTest( );
									Bool xO_exit = Bool(false);
									do {
										if ((xO_a.dist < xO_b.dist))
										{
											{
												xO_return = xO_a;
												xO_exit = true;
												break;
											};
										;
										}
										else
										{
											{
												xO_return = xO_b;
												xO_exit = true;
												break;
											};
										;
										}
										;
									
									} while(false);
									// end minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;;
									
									// minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;
									HitTest xY_xYS_a = xF_a1;
									HitTest xY_xYS_b = xO_return;
									HitTest xY_xYS_return = HitTest( );
									Bool xY_xYS_exit = Bool(false);
									do {
										if ((xY_xYS_a.dist < xY_xYS_b.dist))
										{
											{
												xY_xYS_return = xY_xYS_a;
												xY_xYS_exit = true;
												break;
											};
										;
										}
										else
										{
											{
												xY_xYS_return = xY_xYS_b;
												xY_xYS_exit = true;
												break;
											};
										;
										}
										;
									
									} while(false);
									// end minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;;
									{
										xF_return = xY_xYS_return;
										xF_exit = true;
										break;
									};
								
								} while(false);
								// end minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;;
								
								// minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;
								HitTest xD_a = xY_return;
								HitTest xD_b = xF_return;
								HitTest xD_return = HitTest( );
								Bool xD_exit = Bool(false);
								do {
									if ((xD_a.dist < xD_b.dist))
									{
										{
											xD_return = xD_a;
											xD_exit = true;
											break;
										};
									;
									}
									else
									{
										{
											xD_return = xD_b;
											xD_exit = true;
											break;
										};
									;
									}
									;
								
								} while(false);
								// end minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;;
								{
									xE_xET_return = xD_return;
									xE_xET_exit = true;
									break;
								};
							
							} while(false);
							// end minT(struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;struct-HitTest-b1-f1-vf3-vf4-f11;;
							HitTest xV_xVB_test = xE_xET_return;
							;
							if (xV_xVB_test.hit)
							{
								(xV_xVB_impact *= xV_xVB_test.col);
								if ((xV_xVB_test.col.w > Float(0.0f)))
								{
									(xV_xVB_result += ((xV_xVB_test.col * xV_xVB_impact) * xV_xVB_test.col.w));
								;
								}
								;
								(xV_xVB_r2.origin += (xV_xVB_r2.dir * xV_xVB_test.dist));
								(xV_xVB_r2.origin += (xV_xVB_test.normal * Float(0.01f)));
								
								// nrand(vf2;
								Float2 xE_xEI_n = (xV_xVB_r2.origin.xy + xV_xVB_seed);
								Float xE_xEI_return = Float(0);
								Bool xE_xEI_exit = Bool(false);
								do {
									{
										xE_xEI_return = glm::fract((glm::sin(dot(xE_xEI_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
										xE_xEI_exit = true;
										break;
									};
								
								} while(false);
								// end nrand(vf2;;
								
								// nrand(vf2;
								Float2 xM_xMY_n = (xV_xVB_r2.origin.yz + xV_xVB_seed);
								Float xM_xMY_return = Float(0);
								Bool xM_xMY_exit = Bool(false);
								do {
									{
										xM_xMY_return = glm::fract((glm::sin(dot(xM_xMY_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
										xM_xMY_exit = true;
										break;
									};
								
								} while(false);
								// end nrand(vf2;;
								
								// nrand(vf2;
								Float2 xU_xUX_n = (xV_xVB_r2.origin.zx + xV_xVB_seed);
								Float xU_xUX_return = Float(0);
								Bool xU_xUX_exit = Bool(false);
								do {
									{
										xU_xUX_return = glm::fract((glm::sin(dot(xU_xUX_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
										xU_xUX_exit = true;
										break;
									};
								
								} while(false);
								// end nrand(vf2;;
								Float3 xV_xVB_random = ((Float3(xE_xEI_return, xM_xMY_return, xU_xUX_return) * Float(2.0f)) - Float(1.0f));
								;
								if (((xV_xVB_test != xV_xVB_t0) && (xV_xVB_test != xV_xVB_t2)))
								{
									Float3 xV_xVB_refl = reflect(xV_xVB_r2.dir, xV_xVB_test.normal);
									;
									Float3 xV_xVB_matte = normalize((xV_xVB_test.normal + xV_xVB_random));
									;
									Float xV_xVB_s1 = glm::max(Float(0.0f), -(dot(xV_xVB_test.normal, xV_xVB_r2.dir)));
									;
									
									// nrand(vf2;
									Float2 xK_n = xV_xVB_seed;
									Float xK_return = Float(0);
									Bool xK_exit = Bool(false);
									do {
										{
											xK_return = glm::fract((glm::sin(dot(xK_n.xy, Float2(12.98980045f, 78.23300171f))) * Float(43758.546875f)));
											xK_exit = true;
											break;
										};
									
									} while(false);
									// end nrand(vf2;;
									xV_xVB_s1 = step(glm::pow(xV_xVB_s1, Float(0.5f)), xK_return);
									xV_xVB_r2.dir = ((xV_xVB_refl * xV_xVB_s1) + (xV_xVB_matte * (Float(1.0f) - xV_xVB_s1)));
								;
								}
								else
								{
									xV_xVB_r2.dir = normalize(mix((xV_xVB_test.normal + xV_xVB_random), reflect(xV_xVB_r2.dir, xV_xVB_test.normal), xV_xVB_test.ref));
								;
								}
								;
							;
							}
							else
							{
								break;
							;
							}
							;
						}
						if (xV_xVB_exit) break;
						;
					}
					if (xV_xVB_exit) break;
					;
					{
						xV_xVB_return = (xV_xVB_result / Float(30.0f));
						xV_xVB_exit = true;
						break;
					};
				
				} while(false);
				// end traceScene(struct-Camera-vf3-struct-Ray-vf3-vf311;vf2;f1;;
				Float4 xV_c2 = xV_xVB_return;
				;
				color = mix(xV_c2, xV_l1, ( (((external_0->iMouse.z > Float(0.5f)) || (external_0->iFrame == Int(0)))) ? (Float(0.5f)) : (Float(0.98000002f)) ));
			
			} while(false);
			// end mainImage(vf4;vf2;;
			 ;
			imageStore(un_DstImage, Int2(gl_GlobalInvocationID.xy), color);
		}
	}
	
}		// anonymous namespace
}		// SWShaderLang
#endif	// GRAPHICS_API_SOFT


namespace Pipelines
{

void Create_glowballs (PipelineTemplateDescription& descr)
{
	descr = PipelineTemplateDescription();
	descr.supportedShaders = EShader::Compute;

	descr.localGroupSize = uint3(32, 32, 1);
	descr.layout = PipelineLayoutDescription::Builder()
			.AddTexture( "iChannel0", EImage::Tex2D, EPixelFormatClass::AnyColorChannels | EPixelFormatClass::LinearColorSpace | EPixelFormatClass::AnyFloat | EPixelFormatClass::AnyNorm, 0u, 0u, EShader::Compute )
			.AddImage( "un_DstImage", EImage::Tex2D, EPixelFormat::RGBA8_UNorm, EShaderMemoryModel::WriteOnly, 0u, 1u, EShader::Compute )
			.AddUniformBuffer( "", 288_b, 0u, 2u, EShader::Compute )
			.Finish();

	descr.Compute().AddSource( EShaderLangFormat::OpenGL_450 | EShaderLangFormat::HighLevel, 
R"#(#version 450 core


#define SH_VERTEX           (1<<0)
#define SH_TESS_CONTROL     (1<<1)
#define SH_TESS_EVALUATION  (1<<2)
#define SH_GEOMETRY         (1<<3)
#define SH_FRAGMENT         (1<<4)
#define SH_COMPUTE          (1<<5)
		
#define SHADER	SH_COMPUTE

layout(binding=0) uniform sampler2D iChannel0;

layout(binding=0) layout(rgba8) writeonly uniform image2D un_DstImage;

layout(binding=0) layout(std140) uniform ShadertoyUB {
	layout(offset=0, align=16) vec3  iResolution;
	layout(offset=12, align=4) float  iTime;
	layout(offset=16, align=4) float  iTimeDelta;
	layout(offset=20, align=4) int  iFrame;
	layout(offset=24, align=8) vec2  _padding0;
	layout(offset=32, align=16) vec4  iChannelTime [4];
	layout(offset=96, align=16) vec4  iChannelResolution [4];
	layout(offset=160, align=16) vec4  iMouse;
	layout(offset=176, align=16) vec4  iDate;
	layout(offset=192, align=4) float  iSampleRate;
	layout(offset=196, align=4) float  _padding1;
	layout(offset=200, align=4) float  _padding2;
	layout(offset=204, align=4) float  _padding3;
	layout(offset=208, align=16) vec4  iCameraFrustum [4];
	layout(offset=272, align=16) vec4  iCameraPos;

} ;


layout (local_size_x=32, local_size_y=32, local_size_z=1) in;

struct Ray
{
	vec3 origin;
	vec3 dir;
};

struct Box
{
	vec3 pos;
	vec3 size;
};

struct HitTest
{
	bool hit;
	float dist;
	vec3 normal;
	vec4 col;
	float ref;
};

struct Camera
{
	vec3 pos;
	Ray ray;
};

struct Sphere
{
	vec3 pos;
	float radius;
};


//---------------------------------

float t;
float divergence;

//---------------------------------

HitTest intersectBox (in Ray r, in Box b3);
Camera setupCam (in vec3 pos, in vec3 target, in float fov, in vec2 uv);
void mainImage (out vec4 fragColor, in vec2 fragCoord);
vec4 traceScene (in Camera cam, in vec2 seed, in float lastB);
HitTest minT (in HitTest a, in HitTest b);
HitTest minT (in HitTest a1, in HitTest b1, in HitTest c);
HitTest minT (in HitTest a2, in HitTest b2, in HitTest c1, in HitTest d, in HitTest e);
HitTest intersectSphere (in Ray r1, in Sphere s);
float nrand (in vec2 n);

//---------------------------------

void main ()
{
	vec2 coord = (vec2( gl_GlobalInvocationID.xy ) + float( 0.5f ));
	;
	vec4 color;
	mainImage(color, coord);
	imageStore( un_DstImage, ivec2( gl_GlobalInvocationID.xy ), color );
}


HitTest minT (in HitTest a, in HitTest b)
{
	if ((a.dist < b.dist))
	{
		return a;
	;
	}
	else
	{
		return b;
	;
	}
	;
}


HitTest minT (in HitTest a1, in HitTest b1, in HitTest c)
{
	return minT(a1, minT(b1, c));
}


HitTest minT (in HitTest a2, in HitTest b2, in HitTest c1, in HitTest d, in HitTest e)
{
	return minT(minT(a2, b2), minT(c1, d, e));
}


HitTest intersectBox (in Ray r, in Box b3)
{
	(b3.size *= float( 0.5f ));
	vec3 ba = (b3.pos - b3.size);
	vec3 bb = (b3.pos + b3.size);
	;
	HitTest h = HitTest( bool( false ), float( 100000.0f ), vec3( 0.0f ), vec4( 0.0f ), float( 0.0f ) );
	;
	float d1 = float( 100000.0f );
	;
	vec3 dA = ((r.origin - ba) / -( r.dir ));
	;
	vec3 dB = ((r.origin - bb) / -( r.dir ));
	;
	dA.x = ( ((dA.x <= float( 0.0f ))) ? (float( 100000.0f )) : (dA.x) );
	dA.y = ( ((dA.y <= float( 0.0f ))) ? (float( 100000.0f )) : (dA.y) );
	dA.z = ( ((dA.z <= float( 0.0f ))) ? (float( 100000.0f )) : (dA.z) );
	dB.x = ( ((dB.x <= float( 0.0f ))) ? (float( 100000.0f )) : (dB.x) );
	dB.y = ( ((dB.y <= float( 0.0f ))) ? (float( 100000.0f )) : (dB.y) );
	dB.z = ( ((dB.z <= float( 0.0f ))) ? (float( 100000.0f )) : (dB.z) );
	float d11 = min( dA.x, min( dA.y, dA.z ) );
	;
	float d2 = min( dB.x, min( dB.y, dB.z ) );
	;
	d1 = min( d11, d2 );
	vec3 endPoint = (r.origin + (r.dir * d1));
	;
	(endPoint -= b3.pos);
	if ((d1 != float( 100000.0f )))
	{
		h.hit = bool( true );
		h.dist = d1;
		h.ref = float( 0.0f );
		if ((abs( (abs( endPoint.x ) - b3.size.x) ) < float( 0.01f )))
		{
			bool l = (endPoint.x < float( 0.0f ));
			;
			h.normal = vec3( float( ( (l) ? (int( 1 )) : (int( -1 )) ) ), float( 0.0f ), float( 0.0f ) );
			h.col = ( (l) ? (vec4( 0.89999998f, 0.5f, 0.5f, 0.0f )) : (vec4( 0.5f, 0.5f, 0.89999998f, 0.0f )) );
			return h;
		;
		}
		;
		if ((abs( (abs( endPoint.z ) - b3.size.z) ) < float( 0.01f )))
		{
			h.normal = vec3( float( 0.0f ), float( 0.0f ), -( sign( endPoint.z ) ) );
			h.col = vec4( 0.89999998f, 0.89999998f, 0.89999998f, 0.0f );
			return h;
		;
		}
		;
		h.normal = vec3( float( 0.0f ), -( sign( endPoint.y ) ), float( 0.0f ) );
		h.col = vec4( float( 1.0f ), float( 1.0f ), float( 1.0f ), (sign( endPoint.y ) * clamp( (sin( (t * float( 0.242f )) ) + float( 0.80000001f )), float( 0.2f ), float( 1.20000005f ) )) );
		return h;
	;
	}
	;
	return h;
}


HitTest intersectSphere (in Ray r1, in Sphere s)
{
	vec3 o = (r1.origin - s.pos);
	;
	float v = dot( o, r1.dir );
	;
	if ((v > float( 0.0f )))
	{
		return HitTest( bool( false ), float( 100000.0f ), vec3( 0.0f ), vec4( 0.0f ), float( 0.0f ) );
	}
	;
	float disc = ((s.radius * s.radius) - (dot( o, o ) - (v * v)));
	;
	if ((disc < float( 0.0f )))
	{
		return HitTest( bool( false ), float( 100000.0f ), vec3( 0.0f ), vec4( 0.0f ), float( 0.0f ) );
	}
	;
	float dist = (length( o ) - sqrt( disc ));
	;
	return HitTest( bool( true ), dist, normalize( ((r1.origin + (r1.dir * dist)) - s.pos) ), vec4( 0.0f ), ((sin( (iTime * float( 0.25f )) ) * float( 0.5f )) + float( 0.5f )) );
}


float nrand (in vec2 n)
{
	return fract( (sin( dot( n.xy, vec2( 12.98980045f, 78.23300171f ) ) ) * float( 43758.546875f )) );
}


vec4 traceScene (in Camera cam, in vec2 seed, in float lastB)
{
	vec3 startPos = cam.pos;
	;
	vec4 result = vec4( 0.0f );
	;
	int maxI = int( (float( 30.0f ) * lastB) );
	;
	for (int i = int( 0 ); (i < int( 30 )); ( i )++)
	{
		if ((i == maxI))
		{
			break;
		}
		;
		Ray r2 = cam.ray;
		;
		(r2.dir.x += (((nrand(seed) * float( 2.0f )) - float( 1.0f )) * divergence));
		(r2.dir.y += (((nrand(seed.yx) * float( 2.0f )) - float( 1.0f )) * divergence));
		(r2.dir.z += (((nrand(seed.xx) * float( 2.0f )) - float( 1.0f )) * divergence));
		r2.dir = normalize( r2.dir );
		vec4 impact = vec4( 1.0f );
		;
		( seed )++;
		int maxJ = int( (float( 10.0f ) * lastB) );
		;
		for (int j = int( 0 ); (j < int( 10 )); ( j )++)
		{
			HitTest t0 = intersectBox(r2, Box( vec3( -5.0f, 10.0f, -5.0f ), vec3( 30.0f, 20.0f, 25.0f ) ));
			;
			HitTest t1 = intersectSphere(r2, Sphere( vec3( -1.0f, 2.0f, 0.0f ), float( 2.0f ) ));
			;
			t1.col = vec4( 0.5f, 0.60000002f, 0.89999998f, 0.0f );
			HitTest t2 = intersectSphere(r2, Sphere( vec3( 4.0f, 5.0f, 4.0f ), float( 5.0f ) ));
			;
			t2.col = vec4( 0.89999998f, 0.89999998f, 0.0f, 0.0f );
			t2.ref = float( 0.80000001f );
			HitTest t3 = intersectSphere(r2, Sphere( vec3( -5.0f, 4.0f, 4.0f ), float( 4.0f ) ));
			;
			t3.col = vec4( float( 0.30000001f ), float( 0.89999998f ), float( 0.60000002f ), (sin( (t * float( 0.60000002f )) ) * float( 3.0f )) );
			t3.ref = float( 0.0f );
			HitTest t4 = intersectSphere(r2, Sphere( vec3( 4.0f, 2.5f, -2.0f ), float( 2.5f ) ));
			;
			t4.col = vec4( float( 1.0f ), float( 0.5f ), float( 0.2f ), (sin( (t * float( 0.69999999f )) ) * float( 3.0f )) );
			t4.ref = float( 0.0f );
			HitTest test = minT(t0, t1, t2, t3, t4);
			;
			if (test.hit)
			{
				(impact *= test.col);
				if ((test.col.w > float( 0.0f )))
				{
					(result += ((test.col * impact) * test.col.w));
				;
				}
				;
				(r2.origin += (r2.dir * test.dist));
				(r2.origin += (test.normal * float( 0.01f )));
				vec3 random = ((vec3( nrand((r2.origin.xy + seed)), nrand((r2.origin.yz + seed)), nrand((r2.origin.zx + seed)) ) * float( 2.0f )) - float( 1.0f ));
				;
				if (((test != t0) && (test != t2)))
				{
					vec3 refl = reflect( r2.dir, test.normal );
					;
					vec3 matte = normalize( (test.normal + random) );
					;
					float s1 = max( float( 0.0f ), -( dot( test.normal, r2.dir ) ) );
					;
					s1 = step( pow( s1, float( 0.5f ) ), nrand(seed) );
					r2.dir = ((refl * s1) + (matte * (float( 1.0f ) - s1)));
				;
				}
				else
				{
					r2.dir = normalize( mix( (test.normal + random), reflect( r2.dir, test.normal ), test.ref ) );
				;
				}
				;
			;
			}
			else
			{
				break;
			;
			}
			;
		}
		;
	}
	;
	return (result / float( 30.0f ));
}


Camera setupCam (in vec3 pos, in vec3 target, in float fov, in vec2 uv)
{
	vec2 mouse = (iMouse.xy / iResolution.xy);
	;
	mouse = ((mouse * float( 2.0f )) - float( 0.5f ));
	(pos -= target);
	pos.xz = ((cos( (mouse.x * float( 0.5f )) ) * pos.xz) + (sin( (mouse.x * float( 0.5f )) ) * vec2( -( pos.z ), pos.x )));
	pos.xy = ((cos( (mouse.y * float( 0.5f )) ) * pos.xy) + (sin( (mouse.y * float( 0.5f )) ) * vec2( -( pos.y ), pos.x )));
	(pos += target);
	Camera cam1;
	cam1.pos = pos;
	Ray ray;
	ray.origin = pos;
	(uv *= fov);
	vec3 cw = normalize( (target - pos) );
	;
	vec3 cp = vec3( 0.0f, 1.0f, 0.0f );
	;
	vec3 cu = normalize( cross( cw, cp ) );
	;
	vec3 cv = normalize( cross( cu, cw ) );
	;
	ray.dir = normalize( (((uv.x * cu) + (uv.y * cv)) + (float( 0.5f ) * cw)) );
	cam1.ray = ray;
	divergence = (fov / iResolution.x);
	divergence = (divergence + (length( uv ) * float( 0.01f )));
	return cam1;
}


void mainImage (out vec4 fragColor, in vec2 fragCoord)
{
	t = iTime;
	vec2 uv1 = (fragCoord.xy / iResolution.xy);
	;
	vec4 l1 = texture( iChannel0, uv1 );
	;
	uv1 = ((uv1 * float( 2.0f )) - float( 1.0f ));
	(uv1.y /= (iResolution.x / iResolution.y));
	Camera cam2 = setupCam(vec3( 0.0f, 3.0f, -8.0f ), vec3( 4.0f, 5.0f, 4.0f ), float( 1.0f ), uv1);
	;
	float lastB1 = max( l1.x, max( l1.y, l1.z ) );
	;
	lastB1 = pow( lastB1, float( 0.25f ) );
	vec4 c2 = traceScene(cam2, (uv1 + iTime), max( float( 0.30000001f ), (float( 1.0f ) - lastB1) ));
	;
	fragColor = mix( c2, l1, ( (((iMouse.z > float( 0.5f )) || (iFrame == int( 0 )))) ? (float( 0.5f )) : (float( 0.98000002f )) ) );
}



)#"_str );

	descr.Compute().AddSpirv( EShaderLangFormat::Vulkan_100 | EShaderLangFormat::SPIRV, { 
0x07230203, 0x00010000, 0x00080006, 0x000003F2, 0x00000000, 0x00020011, 0x00000001, 0x0006000B, 0x00000002, 0x4C534C47, 0x6474732E, 0x3035342E, 
0x00000000, 0x0003000E, 0x00000000, 0x00000001, 0x0006000F, 0x00000005, 0x00000005, 0x6E69616D, 0x00000000, 0x00000051, 0x00060010, 0x00000005, 
0x00000011, 0x00000020, 0x00000020, 0x00000001, 0x00030007, 0x00000001, 0x00000000, 0x00410003, 0x00000002, 0x000001C2, 0x00000001, 0x4F202F2F, 
0x646F4D70, 0x50656C75, 0x65636F72, 0x64657373, 0x746E6520, 0x702D7972, 0x746E696F, 0x69616D20, 0x2F2F0A6E, 0x4D704F20, 0x6C75646F, 0x6F725065, 
0x73736563, 0x61206465, 0x2D6F7475, 0x2D70616D, 0x61636F6C, 0x6E6F6974, 0x2F2F0A73, 0x4D704F20, 0x6C75646F, 0x6F725065, 0x73736563, 0x61206465, 
0x2D6F7475, 0x2D70616D, 0x646E6962, 0x73676E69, 0x202F2F0A, 0x6F4D704F, 0x656C7564, 0x636F7250, 0x65737365, 0x6C632064, 0x746E6569, 0x6C757620, 
0x316E616B, 0x2F0A3030, 0x704F202F, 0x75646F4D, 0x7250656C, 0x7365636F, 0x20646573, 0x67726174, 0x652D7465, 0x7620766E, 0x616B6C75, 0x302E316E, 
0x202F2F0A, 0x6F4D704F, 0x656C7564, 0x636F7250, 0x65737365, 0x6E652064, 0x2D797274, 0x6E696F70, 0x616D2074, 0x230A6E69, 0x656E696C, 0x000A3120, 
0x00090004, 0x415F4C47, 0x735F4252, 0x72617065, 0x5F657461, 0x64616873, 0x6F5F7265, 0x63656A62, 0x00007374, 0x00090004, 0x415F4C47, 0x735F4252, 
0x69646168, 0x6C5F676E, 0x75676E61, 0x5F656761, 0x70303234, 0x006B6361, 0x000A0004, 0x475F4C47, 0x4C474F4F, 0x70635F45, 0x74735F70, 0x5F656C79, 
0x656E696C, 0x7269645F, 0x69746365, 0x00006576, 0x00080004, 0x475F4C47, 0x4C474F4F, 0x6E695F45, 0x64756C63, 0x69645F65, 0x74636572, 0x00657669, 
0x00040005, 0x00000005, 0x6E69616D, 0x00000000, 0x00040005, 0x0000000B, 0x54746948, 0x00747365, 0x00040006, 0x0000000B, 0x00000000, 0x00746968, 
0x00050006, 0x0000000B, 0x00000001, 0x74736964, 0x00000000, 0x00050006, 0x0000000B, 0x00000002, 0x6D726F6E, 0x00006C61, 0x00040006, 0x0000000B, 
0x00000003, 0x006C6F63, 0x00040006, 0x0000000B, 0x00000004, 0x00666572, 0x00140005, 0x00000010, 0x546E696D, 0x72747328, 0x2D746375, 0x54746948, 
0x2D747365, 0x662D3162, 0x66762D31, 0x66762D33, 0x31662D34, 0x74733B31, 0x74637572, 0x7469482D, 0x74736554, 0x2D31622D, 0x762D3166, 0x762D3366, 
0x662D3466, 0x003B3131, 0x00030005, 0x0000000E, 0x00000061, 0x00030005, 0x0000000F, 0x00000062, 0x001D0005, 0x00000016, 0x546E696D, 0x72747328, 
0x2D746375, 0x54746948, 0x2D747365, 0x662D3162, 0x66762D31, 0x66762D33, 0x31662D34, 0x74733B31, 0x74637572, 0x7469482D, 0x74736554, 0x2D31622D, 
0x762D3166, 0x762D3366, 0x662D3466, 0x733B3131, 0x63757274, 0x69482D74, 0x73655474, 0x31622D74, 0x2D31662D, 0x2D336676, 0x2D346676, 0x3B313166, 
0x00000000, 0x00030005, 0x00000013, 0x00003161, 0x00030005, 0x00000014, 0x00003162, 0x00030005, 0x00000015, 0x00000063, 0x002D0005, 0x0000001E, 
0x546E696D, 0x72747328, 0x2D746375, 0x54746948, 0x2D747365, 0x662D3162, 0x66762D31, 0x66762D33, 0x31662D34, 0x74733B31, 0x74637572, 0x7469482D, 
0x74736554, 0x2D31622D, 0x762D3166, 0x762D3366, 0x662D3466, 0x733B3131, 0x63757274, 0x69482D74, 0x73655474, 0x31622D74, 0x2D31662D, 0x2D336676, 
0x2D346676, 0x3B313166, 0x75727473, 0x482D7463, 0x65547469, 0x622D7473, 0x31662D31, 0x3366762D, 0x3466762D, 0x3131662D, 0x7274733B, 0x2D746375, 
0x54746948, 0x2D747365, 0x662D3162, 0x66762D31, 0x66762D33, 0x31662D34, 0x00003B31, 0x00030005, 0x00000019, 0x00003261, 0x00030005, 0x0000001A, 
0x00003262, 0x00030005, 0x0000001B, 0x00003163, 0x00030005, 0x0000001C, 0x00000064, 0x00030005, 0x0000001D, 0x00000065, 0x00030005, 0x00000020, 
0x00796152, 0x00050006, 0x00000020, 0x00000000, 0x6769726F, 0x00006E69, 0x00040006, 0x00000020, 0x00000001, 0x00726964, 0x00030005, 0x00000022, 
0x00786F42, 0x00040006, 0x00000022, 0x00000000, 0x00736F70, 0x00050006, 0x00000022, 0x00000001, 0x657A6973, 0x00000000, 0x00100005, 0x00000027, 
0x65746E69, 0x63657372, 0x786F4274, 0x72747328, 0x2D746375, 0x2D796152, 0x2D336676, 0x31336676, 0x7274733B, 0x2D746375, 0x2D786F42, 0x2D336676, 
0x31336676, 0x0000003B, 0x00030005, 0x00000025, 0x00000072, 0x00030005, 0x00000026, 0x00003362, 0x00040005, 0x00000029, 0x65687053, 0x00006572, 
0x00040006, 0x00000029, 0x00000000, 0x00736F70, 0x00050006, 0x00000029, 0x00000001, 0x69646172, 0x00007375, 0x00110005, 0x0000002E, 0x65746E69, 
0x63657372, 0x68705374, 0x28657265, 0x75727473, 0x522D7463, 0x762D7961, 0x762D3366, 0x3B313366, 0x75727473, 0x532D7463, 0x72656870, 0x66762D65, 
0x31662D33, 0x00003B31, 0x00030005, 0x0000002C, 0x00003172, 0x00030005, 0x0000002D, 0x00000073, 0x00050005, 0x00000034, 0x6E61726E, 0x66762864, 
0x00003B32, 0x00030005, 0x00000033, 0x0000006E, 0x00040005, 0x00000036, 0x656D6143, 0x00006172, 0x00040006, 0x00000036, 0x00000000, 0x00736F70, 
0x00040006, 0x00000036, 0x00000001, 0x00796172, 0x00110005, 0x0000003D, 0x63617274, 0x65635365, 0x7328656E, 0x63757274, 0x61432D74, 0x6172656D, 
0x3366762D, 0x7274732D, 0x2D746375, 0x2D796152, 0x2D336676, 0x31336676, 0x66763B31, 0x31663B32, 0x0000003B, 0x00030005, 0x0000003A, 0x006D6163, 
0x00040005, 0x0000003B, 0x64656573, 0x00000000, 0x00040005, 0x0000003C, 0x7473616C, 0x00000042, 0x00090005, 0x00000045, 0x75746573, 0x6D614370, 
0x33667628, 0x3366763B, 0x3B31663B, 0x3B326676, 0x00000000, 0x00030005, 0x00000041, 0x00736F70, 0x00040005, 0x00000042, 0x67726174, 0x00007465, 
0x00030005, 0x00000043, 0x00766F66, 0x00030005, 0x00000044, 0x00007675, 0x00070005, 0x0000004B, 0x6E69616D, 0x67616D49, 0x66762865, 0x66763B34, 
0x00003B32, 0x00050005, 0x00000049, 0x67617266, 0x6F6C6F43, 0x00000072, 0x00050005, 0x0000004A, 0x67617266, 0x726F6F43, 0x00000064, 0x00040005, 
0x0000004D, 0x726F6F63, 0x00000064, 0x00080005, 0x00000051, 0x475F6C67, 0x61626F6C, 0x766E496C, 0x7461636F, 0x496E6F69, 0x00000044, 0x00040005, 
0x00000059, 0x6F6C6F63, 0x00000072, 0x00040005, 0x0000005A, 0x61726170, 0x0000006D, 0x00040005, 0x0000005B, 0x61726170, 0x0000006D, 0x00050005, 
0x00000061, 0x445F6E75, 0x6D497473, 0x00656761, 0x00040005, 0x00000077, 0x61726170, 0x0000006D, 0x00040005, 0x00000079, 0x61726170, 0x0000006D, 
0x00040005, 0x0000007C, 0x61726170, 0x0000006D, 0x00040005, 0x0000007E, 0x61726170, 0x0000006D, 0x00040005, 0x00000082, 0x61726170, 0x0000006D, 
0x00040005, 0x00000084, 0x61726170, 0x0000006D, 0x00040005, 0x00000087, 0x61726170, 0x0000006D, 0x00040005, 0x00000089, 0x61726170, 0x0000006D, 
0x00040005, 0x0000008B, 0x61726170, 0x0000006D, 0x00040005, 0x0000008E, 0x61726170, 0x0000006D, 0x00040005, 0x0000008F, 0x61726170, 0x0000006D, 
0x00030005, 0x00000097, 0x00006162, 0x00030005, 0x0000009E, 0x00006262, 0x00030005, 0x000000A4, 0x00000068, 0x00030005, 0x000000AB, 0x00003164, 
0x00030005, 0x000000AC, 0x00004164, 0x00030005, 0x000000B5, 0x00004264, 0x00030005, 0x00000103, 0x00313164, 0x00030005, 0x0000010C, 0x00003264, 
0x00050005, 0x00000118, 0x50646E65, 0x746E696F, 0x00000000, 0x00030005, 0x0000013A, 0x0000006C, 0x00030005, 0x0000016F, 0x00000074, 0x00030005, 
0x00000181, 0x0000006F, 0x00030005, 0x00000187, 0x00000076, 0x00040005, 0x00000191, 0x63736964, 0x00000000, 0x00040005, 0x000001A4, 0x74736964, 
0x00000000, 0x00050005, 0x000001BA, 0x64616853, 0x6F747265, 0x00425579, 0x00060006, 0x000001BA, 0x00000000, 0x73655269, 0x74756C6F, 0x006E6F69, 
0x00050006, 0x000001BA, 0x00000001, 0x6D695469, 0x00000065, 0x00060006, 0x000001BA, 0x00000002, 0x6D695469, 0x6C654465, 0x00006174, 0x00050006, 
0x000001BA, 0x00000003, 0x61724669, 0x0000656D, 0x00060006, 0x000001BA, 0x00000004, 0x6461705F, 0x676E6964, 0x00000030, 0x00070006, 0x000001BA, 
0x00000005, 0x61684369, 0x6C656E6E, 0x656D6954, 0x00000000, 0x00080006, 0x000001BA, 0x00000006, 0x61684369, 0x6C656E6E, 0x6F736552, 0x6974756C, 
0x00006E6F, 0x00050006, 0x000001BA, 0x00000007, 0x756F4D69, 0x00006573, 0x00050006, 0x000001BA, 0x00000008, 0x74614469, 0x00000065, 0x00060006, 
0x000001BA, 0x00000009, 0x6D615369, 0x52656C70, 0x00657461, 0x00060006, 0x000001BA, 0x0000000A, 0x6461705F, 0x676E6964, 0x00000031, 0x00060006, 
0x000001BA, 0x0000000B, 0x6461705F, 0x676E6964, 0x00000032, 0x00060006, 0x000001BA, 0x0000000C, 0x6461705F, 0x676E6964, 0x00000033, 0x00070006, 
0x000001BA, 0x0000000D, 0x6D614369, 0x46617265, 0x74737572, 0x00006D75, 0x00060006, 0x000001BA, 0x0000000E, 0x6D614369, 0x50617265, 0x0000736F, 
0x00030005, 0x000001BC, 0x00000000, 0x00050005, 0x000001D3, 0x72617473, 0x736F5074, 0x00000000, 0x00040005, 0x000001D6, 0x75736572, 0x0000746C, 
0x00040005, 0x000001D8, 0x4978616D, 0x00000000, 0x00030005, 0x000001DD, 0x00000069, 0x00030005, 0x000001EC, 0x00003272, 0x00040005, 0x000001EF, 
0x61726170, 0x0000006D, 0x00050005, 0x000001F5, 0x65766964, 0x6E656772, 0x00006563, 0x00040005, 0x000001FC, 0x61726170, 0x0000006D, 0x00040005, 
0x00000208, 0x61726170, 0x0000006D, 0x00040005, 0x00000218, 0x61706D69, 0x00007463, 0x00040005, 0x0000021D, 0x4A78616D, 0x00000000, 0x00030005, 
0x00000222, 0x0000006A, 0x00030005, 0x0000022B, 0x00003074, 0x00040005, 0x00000232, 0x61726170, 0x0000006D, 0x00040005, 0x00000234, 0x61726170, 
0x0000006D, 0x00030005, 0x00000236, 0x00003174, 0x00040005, 0x0000023A, 0x61726170, 0x0000006D, 0x00040005, 0x0000023C, 0x61726170, 0x0000006D, 
0x00030005, 0x00000241, 0x00003274, 0x00040005, 0x00000246, 0x61726170, 0x0000006D, 0x00040005, 0x00000248, 0x61726170, 0x0000006D, 0x00030005, 
0x0000024D, 0x00003374, 0x00040005, 0x00000250, 0x61726170, 0x0000006D, 0x00040005, 0x00000252, 0x61726170, 0x0000006D, 0x00030005, 0x0000025D, 
0x00003474, 0x00040005, 0x00000262, 0x61726170, 0x0000006D, 0x00040005, 0x00000264, 0x61726170, 0x0000006D, 0x00040005, 0x0000026E, 0x74736574, 
0x00000000, 0x00040005, 0x0000026F, 0x61726170, 0x0000006D, 0x00040005, 0x00000271, 0x61726170, 0x0000006D, 0x00040005, 0x00000273, 0x61726170, 
0x0000006D, 0x00040005, 0x00000275, 0x61726170, 0x0000006D, 0x00040005, 0x00000277, 0x61726170, 0x0000006D, 0x00040005, 0x000002A1, 0x646E6172, 
0x00006D6F, 0x00040005, 0x000002A7, 0x61726170, 0x0000006D, 0x00040005, 0x000002AE, 0x61726170, 0x0000006D, 0x00040005, 0x000002B5, 0x61726170, 
0x0000006D, 0x00040005, 0x000002ED, 0x6C666572, 0x00000000, 0x00040005, 0x000002F3, 0x7474616D, 0x00000065, 0x00030005, 0x000002F9, 0x00003173, 
0x00040005, 0x00000303, 0x61726170, 0x0000006D, 0x00040005, 0x0000032B, 0x73756F6D, 0x00000065, 0x00040005, 0x0000036A, 0x316D6163, 0x00000000, 
0x00030005, 0x0000036D, 0x00796172, 0x00030005, 0x00000373, 0x00007763, 0x00030005, 0x00000378, 0x00007063, 0x00030005, 0x0000037A, 0x00007563, 
0x00030005, 0x0000037F, 0x00007663, 0x00030005, 0x000003A2, 0x00317675, 0x00030005, 0x000003A8, 0x0000316C, 0x00050005, 0x000003AC, 0x61684369, 
0x6C656E6E, 0x00000030, 0x00040005, 0x000003BD, 0x326D6163, 0x00000000, 0x00040005, 0x000003C0, 0x61726170, 0x0000006D, 0x00040005, 0x000003C1, 
0x61726170, 0x0000006D, 0x00040005, 0x000003C2, 0x61726170, 0x0000006D, 0x00040005, 0x000003C3, 0x61726170, 0x0000006D, 0x00040005, 0x000003C6, 
0x7473616C, 0x00003142, 0x00030005, 0x000003D1, 0x00003263, 0x00040005, 0x000003DA, 0x61726170, 0x0000006D, 0x00040005, 0x000003DC, 0x61726170, 
0x0000006D, 0x00040005, 0x000003DD, 0x61726170, 0x0000006D, 0x00040047, 0x00000051, 0x0000000B, 0x0000001C, 0x00040047, 0x00000061, 0x00000022, 
0x00000000, 0x00040047, 0x00000061, 0x00000021, 0x00000001, 0x00030047, 0x00000061, 0x00000019, 0x00040047, 0x000001B7, 0x00000006, 0x00000010, 
0x00040047, 0x000001B8, 0x00000006, 0x00000010, 0x00040047, 0x000001B9, 0x00000006, 0x00000010, 0x00050048, 0x000001BA, 0x00000000, 0x00000023, 
0x00000000, 0x00050048, 0x000001BA, 0x00000001, 0x00000023, 0x0000000C, 0x00050048, 0x000001BA, 0x00000002, 0x00000023, 0x00000010, 0x00050048, 
0x000001BA, 0x00000003, 0x00000023, 0x00000014, 0x00050048, 0x000001BA, 0x00000004, 0x00000023, 0x00000018, 0x00050048, 0x000001BA, 0x00000005, 
0x00000023, 0x00000020, 0x00050048, 0x000001BA, 0x00000006, 0x00000023, 0x00000060, 0x00050048, 0x000001BA, 0x00000007, 0x00000023, 0x000000A0, 
0x00050048, 0x000001BA, 0x00000008, 0x00000023, 0x000000B0, 0x00050048, 0x000001BA, 0x00000009, 0x00000023, 0x000000C0, 0x00050048, 0x000001BA, 
0x0000000A, 0x00000023, 0x000000C4, 0x00050048, 0x000001BA, 0x0000000B, 0x00000023, 0x000000C8, 0x00050048, 0x000001BA, 0x0000000C, 0x00000023, 
0x000000CC, 0x00050048, 0x000001BA, 0x0000000D, 0x00000023, 0x000000D0, 0x00050048, 0x000001BA, 0x0000000E, 0x00000023, 0x00000110, 0x00030047, 
0x000001BA, 0x00000002, 0x00040047, 0x000001BC, 0x00000022, 0x00000000, 0x00040047, 0x000001BC, 0x00000021, 0x00000002, 0x00040047, 0x000003AC, 
0x00000022, 0x00000000, 0x00040047, 0x000003AC, 0x00000021, 0x00000000, 0x00040047, 0x000003F1, 0x0000000B, 0x00000019, 0x00020013, 0x00000003, 
0x00030021, 0x00000004, 0x00000003, 0x00020014, 0x00000007, 0x00030016, 0x00000008, 0x00000020, 0x00040017, 0x00000009, 0x00000008, 0x00000003, 
0x00040017, 0x0000000A, 0x00000008, 0x00000004, 0x0007001E, 0x0000000B, 0x00000007, 0x00000008, 0x00000009, 0x0000000A, 0x00000008, 0x00040020, 
0x0000000C, 0x00000007, 0x0000000B, 0x00050021, 0x0000000D, 0x0000000B, 0x0000000C, 0x0000000C, 0x00060021, 0x00000012, 0x0000000B, 0x0000000C, 
0x0000000C, 0x0000000C, 0x00080021, 0x00000018, 0x0000000B, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C, 0x0004001E, 0x00000020, 
0x00000009, 0x00000009, 0x00040020, 0x00000021, 0x00000007, 0x00000020, 0x0004001E, 0x00000022, 0x00000009, 0x00000009, 0x00040020, 0x00000023, 
0x00000007, 0x00000022, 0x00050021, 0x00000024, 0x0000000B, 0x00000021, 0x00000023, 0x0004001E, 0x00000029, 0x00000009, 0x00000008, 0x00040020, 
0x0000002A, 0x00000007, 0x00000029, 0x00050021, 0x0000002B, 0x0000000B, 0x00000021, 0x0000002A, 0x00040017, 0x00000030, 0x00000008, 0x00000002, 
0x00040020, 0x00000031, 0x00000007, 0x00000030, 0x00040021, 0x00000032, 0x00000008, 0x00000031, 0x0004001E, 0x00000036, 0x00000009, 0x00000020, 
0x00040020, 0x00000037, 0x00000007, 0x00000036, 0x00040020, 0x00000038, 0x00000007, 0x00000008, 0x00060021, 0x00000039, 0x0000000A, 0x00000037, 
0x00000031, 0x00000038, 0x00040020, 0x0000003F, 0x00000007, 0x00000009, 0x00070021, 0x00000040, 0x00000036, 0x0000003F, 0x0000003F, 0x00000038, 
0x00000031, 0x00040020, 0x00000047, 0x00000007, 0x0000000A, 0x00050021, 0x00000048, 0x00000003, 0x00000047, 0x00000031, 0x00040015, 0x0000004E, 
0x00000020, 0x00000000, 0x00040017, 0x0000004F, 0x0000004E, 0x00000003, 0x00040020, 0x00000050, 0x00000001, 0x0000004F, 0x0004003B, 0x00000050, 
0x00000051, 0x00000001, 0x00040017, 0x00000052, 0x0000004E, 0x00000002, 0x0004002B, 0x00000008, 0x00000056, 0x3F000000, 0x00090019, 0x0000005F, 
0x00000008, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000002, 0x00000004, 0x00040020, 0x00000060, 0x00000000, 0x0000005F, 0x0004003B, 
0x00000060, 0x00000061, 0x00000000, 0x00040015, 0x00000065, 0x00000020, 0x00000001, 0x00040017, 0x00000066, 0x00000065, 0x00000002, 0x0004002B, 
0x00000065, 0x00000069, 0x00000001, 0x0004002B, 0x00000065, 0x00000098, 0x00000000, 0x0003002A, 0x00000007, 0x000000A5, 0x0004002B, 0x00000008, 
0x000000A6, 0x47C35000, 0x0004002B, 0x00000008, 0x000000A7, 0x00000000, 0x0006002C, 0x00000009, 0x000000A8, 0x000000A7, 0x000000A7, 0x000000A7, 
0x0007002C, 0x0000000A, 0x000000A9, 0x000000A7, 0x000000A7, 0x000000A7, 0x000000A7, 0x0008002C, 0x0000000B, 0x000000AA, 0x000000A5, 0x000000A6, 
0x000000A8, 0x000000A9, 0x000000A7, 0x0004002B, 0x0000004E, 0x000000BE, 0x00000000, 0x0004002B, 0x0000004E, 0x000000CA, 0x00000001, 0x0004002B, 
0x0000004E, 0x000000D6, 0x00000002, 0x00030029, 0x00000007, 0x00000128, 0x00040020, 0x00000129, 0x00000007, 0x00000007, 0x0004002B, 0x00000065, 
0x0000012D, 0x00000004, 0x0004002B, 0x00000008, 0x00000136, 0x3C23D70A, 0x0004002B, 0x00000065, 0x0000013E, 0x00000002, 0x0004002B, 0x00000065, 
0x00000140, 0xFFFFFFFF, 0x0004002B, 0x00000065, 0x00000145, 0x00000003, 0x0004002B, 0x00000008, 0x00000147, 0x3F666666, 0x0007002C, 0x0000000A, 
0x00000148, 0x00000147, 0x00000056, 0x00000056, 0x000000A7, 0x0007002C, 0x0000000A, 0x00000149, 0x00000056, 0x00000056, 0x00000147, 0x000000A7, 
0x00040017, 0x0000014A, 0x00000007, 0x00000004, 0x0007002C, 0x0000000A, 0x00000160, 0x00000147, 0x00000147, 0x00000147, 0x000000A7, 0x0004002B, 
0x00000008, 0x0000016A, 0x3F800000, 0x00040020, 0x0000016E, 0x00000006, 0x00000008, 0x0004003B, 0x0000016E, 0x0000016F, 0x00000006, 0x0004002B, 
0x00000008, 0x00000171, 0x3E77CED9, 0x0004002B, 0x00000008, 0x00000174, 0x3F4CCCCD, 0x0004002B, 0x00000008, 0x00000176, 0x3E4CCCCD, 0x0004002B, 
0x00000008, 0x00000177, 0x3F99999A, 0x0004002B, 0x0000004E, 0x000001B6, 0x00000004, 0x0004001C, 0x000001B7, 0x0000000A, 0x000001B6, 0x0004001C, 
0x000001B8, 0x0000000A, 0x000001B6, 0x0004001C, 0x000001B9, 0x0000000A, 0x000001B6, 0x0011001E, 0x000001BA, 0x00000009, 0x00000008, 0x00000008, 
0x00000065, 0x00000030, 0x000001B7, 0x000001B8, 0x0000000A, 0x0000000A, 0x00000008, 0x00000008, 0x00000008, 0x00000008, 0x000001B9, 0x0000000A, 
0x00040020, 0x000001BB, 0x00000002, 0x000001BA, 0x0004003B, 0x000001BB, 0x000001BC, 0x00000002, 0x00040020, 0x000001BD, 0x00000002, 0x00000008, 
0x0004002B, 0x00000008, 0x000001C0, 0x3E800000, 0x0004002B, 0x00000008, 0x000001C9, 0x414FD639, 0x0004002B, 0x00000008, 0x000001CA, 0x429C774C, 
0x0005002C, 0x00000030, 0x000001CB, 0x000001C9, 0x000001CA, 0x0004002B, 0x00000008, 0x000001CE, 0x472AEE8C, 0x00040020, 0x000001D7, 0x00000007, 
0x00000065, 0x0004002B, 0x00000008, 0x000001D9, 0x41F00000, 0x0004002B, 0x00000065, 0x000001E4, 0x0000001E, 0x0004002B, 0x00000008, 0x000001F2, 
0x40000000, 0x0004003B, 0x0000016E, 0x000001F5, 0x00000006, 0x0007002C, 0x0000000A, 0x00000219, 0x0000016A, 0x0000016A, 0x0000016A, 0x0000016A, 
0x0004002B, 0x00000008, 0x0000021E, 0x41200000, 0x0004002B, 0x00000065, 0x00000229, 0x0000000A, 0x0004002B, 0x00000008, 0x0000022C, 0xC0A00000, 
0x0006002C, 0x00000009, 0x0000022D, 0x0000022C, 0x0000021E, 0x0000022C, 0x0004002B, 0x00000008, 0x0000022E, 0x41A00000, 0x0004002B, 0x00000008, 
0x0000022F, 0x41C80000, 0x0006002C, 0x00000009, 0x00000230, 0x000001D9, 0x0000022E, 0x0000022F, 0x0005002C, 0x00000022, 0x00000231, 0x0000022D, 
0x00000230, 0x0004002B, 0x00000008, 0x00000237, 0xBF800000, 0x0006002C, 0x00000009, 0x00000238, 0x00000237, 0x000001F2, 0x000000A7, 0x0005002C, 
0x00000029, 0x00000239, 0x00000238, 0x000001F2, 0x0004002B, 0x00000008, 0x0000023E, 0x3F19999A, 0x0007002C, 0x0000000A, 0x0000023F, 0x00000056, 
0x0000023E, 0x00000147, 0x000000A7, 0x0004002B, 0x00000008, 0x00000242, 0x40800000, 0x0004002B, 0x00000008, 0x00000243, 0x40A00000, 0x0006002C, 
0x00000009, 0x00000244, 0x00000242, 0x00000243, 0x00000242, 0x0005002C, 0x00000029, 0x00000245, 0x00000244, 0x00000243, 0x0007002C, 0x0000000A, 
0x0000024A, 0x00000147, 0x00000147, 0x000000A7, 0x000000A7, 0x0006002C, 0x00000009, 0x0000024E, 0x0000022C, 0x00000242, 0x00000242, 0x0005002C, 
0x00000029, 0x0000024F, 0x0000024E, 0x00000242, 0x0004002B, 0x00000008, 0x00000254, 0x3E99999A, 0x0004002B, 0x00000008, 0x00000258, 0x40400000, 
0x0004002B, 0x00000008, 0x0000025E, 0x40200000, 0x0004002B, 0x00000008, 0x0000025F, 0xC0000000, 0x0006002C, 0x00000009, 0x00000260, 0x00000242, 
0x0000025E, 0x0000025F, 0x0005002C, 0x00000029, 0x00000261, 0x00000260, 0x0000025E, 0x0004002B, 0x00000008, 0x00000267, 0x3F333333, 0x0004002B, 
0x0000004E, 0x00000282, 0x00000003, 0x00040017, 0x000002C6, 0x00000007, 0x00000003, 0x0004002B, 0x00000065, 0x0000032C, 0x00000007, 0x00040020, 
0x0000032D, 0x00000002, 0x0000000A, 0x00040020, 0x00000331, 0x00000002, 0x00000009, 0x0006002C, 0x00000009, 0x00000379, 0x000000A7, 0x0000016A, 
0x000000A7, 0x00090019, 0x000003A9, 0x00000008, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x0003001B, 0x000003AA, 
0x000003A9, 0x00040020, 0x000003AB, 0x00000000, 0x000003AA, 0x0004003B, 0x000003AB, 0x000003AC, 0x00000000, 0x0004002B, 0x00000008, 0x000003BE, 
0xC1000000, 0x0006002C, 0x00000009, 0x000003BF, 0x000000A7, 0x00000258, 0x000003BE, 0x00040020, 0x000003E7, 0x00000002, 0x00000065, 0x0004002B, 
0x00000008, 0x000003EC, 0x3F7AE148, 0x0004002B, 0x0000004E, 0x000003F0, 0x00000020, 0x0006002C, 0x0000004F, 0x000003F1, 0x000003F0, 0x000003F0, 
0x000000CA, 0x00050036, 0x00000003, 0x00000005, 0x00000000, 0x00000004, 0x000200F8, 0x00000006, 0x0004003B, 0x00000031, 0x0000004D, 0x00000007, 
0x0004003B, 0x00000047, 0x00000059, 0x00000007, 0x0004003B, 0x00000047, 0x0000005A, 0x00000007, 0x0004003B, 0x00000031, 0x0000005B, 0x00000007, 
0x00040008, 0x00000001, 0x0000003A, 0x00000000, 0x0004003D, 0x0000004F, 0x00000053, 0x00000051, 0x0007004F, 0x00000052, 0x00000054, 0x00000053, 
0x00000053, 0x00000000, 0x00000001, 0x00040070, 0x00000030, 0x00000055, 0x00000054, 0x00050050, 0x00000030, 0x00000057, 0x00000056, 0x00000056, 
0x00050081, 0x00000030, 0x00000058, 0x00000055, 0x00000057, 0x0003003E, 0x0000004D, 0x00000058, 0x00040008, 0x00000001, 0x0000003D, 0x00000000, 
0x0004003D, 0x00000030, 0x0000005C, 0x0000004D, 0x0003003E, 0x0000005B, 0x0000005C, 0x00060039, 0x00000003, 0x0000005D, 0x0000004B, 0x0000005A, 
0x0000005B, 0x0004003D, 0x0000000A, 0x0000005E, 0x0000005A, 0x0003003E, 0x00000059, 0x0000005E, 0x00040008, 0x00000001, 0x0000003E, 0x00000000, 
0x0004003D, 0x0000005F, 0x00000062, 0x00000061, 0x0004003D, 0x0000004F, 0x00000063, 0x00000051, 0x0007004F, 0x00000052, 0x00000064, 0x00000063, 
0x00000063, 0x00000000, 0x00000001, 0x0004007C, 0x00000066, 0x00000067, 0x00000064, 0x0004003D, 0x0000000A, 0x00000068, 0x00000059, 0x00040063, 
0x00000062, 0x00000067, 0x00000068, 0x000100FD, 0x00010038, 0x00050036, 0x0000000B, 0x00000010, 0x00000000, 0x0000000D, 0x00030037, 0x0000000C, 
0x0000000E, 0x00030037, 0x0000000C, 0x0000000F, 0x000200F8, 0x00000011, 0x00040008, 0x00000001, 0x00000044, 0x00000000, 0x00050041, 0x00000038, 
0x0000006A, 0x0000000E, 0x00000069, 0x0004003D, 0x00000008, 0x0000006B, 0x0000006A, 0x00050041, 0x00000038, 0x0000006C, 0x0000000F, 0x00000069, 
0x0004003D, 0x00000008, 0x0000006D, 0x0000006C, 0x000500B8, 0x00000007, 0x0000006E, 0x0000006B, 0x0000006D, 0x000300F7, 0x00000070, 0x00000000, 
0x000400FA, 0x0000006E, 0x0000006F, 0x00000073, 0x000200F8, 0x0000006F, 0x00040008, 0x00000001, 0x00000046, 0x00000000, 0x0004003D, 0x0000000B, 
0x00000071, 0x0000000E, 0x000200FE, 0x00000071, 0x000200F8, 0x00000073, 0x00040008, 0x00000001, 0x0000004B, 0x00000000, 0x0004003D, 0x0000000B, 
0x00000074, 0x0000000F, 0x000200FE, 0x00000074, 0x000200F8, 0x00000070, 0x00030001, 0x0000000B, 0x00000076, 0x000200FE, 0x00000076, 0x00010038, 
0x00050036, 0x0000000B, 0x00000016, 0x00000000, 0x00000012, 0x00030037, 0x0000000C, 0x00000013, 0x00030037, 0x0000000C, 0x00000014, 0x00030037, 
0x0000000C, 0x00000015, 0x000200F8, 0x00000017, 0x0004003B, 0x0000000C, 0x00000077, 0x00000007, 0x0004003B, 0x0000000C, 0x00000079, 0x00000007, 
0x0004003B, 0x0000000C, 0x0000007C, 0x00000007, 0x0004003B, 0x0000000C, 0x0000007E, 0x00000007, 0x00040008, 0x00000001, 0x00000054, 0x00000000, 
0x0004003D, 0x0000000B, 0x00000078, 0x00000014, 0x0003003E, 0x00000077, 0x00000078, 0x0004003D, 0x0000000B, 0x0000007A, 0x00000015, 0x0003003E, 
0x00000079, 0x0000007A, 0x00060039, 0x0000000B, 0x0000007B, 0x00000010, 0x00000077, 0x00000079, 0x0004003D, 0x0000000B, 0x0000007D, 0x00000013, 
0x0003003E, 0x0000007C, 0x0000007D, 0x0003003E, 0x0000007E, 0x0000007B, 0x00060039, 0x0000000B, 0x0000007F, 0x00000010, 0x0000007C, 0x0000007E, 
0x000200FE, 0x0000007F, 0x00010038, 0x00050036, 0x0000000B, 0x0000001E, 0x00000000, 0x00000018, 0x00030037, 0x0000000C, 0x00000019, 0x00030037, 
0x0000000C, 0x0000001A, 0x00030037, 0x0000000C, 0x0000001B, 0x00030037, 0x0000000C, 0x0000001C, 0x00030037, 0x0000000C, 0x0000001D, 0x000200F8, 
0x0000001F, 0x0004003B, 0x0000000C, 0x00000082, 0x00000007, 0x0004003B, 0x0000000C, 0x00000084, 0x00000007, 0x0004003B, 0x0000000C, 0x00000087, 
0x00000007, 0x0004003B, 0x0000000C, 0x00000089, 0x00000007, 0x0004003B, 0x0000000C, 0x0000008B, 0x00000007, 0x0004003B, 0x0000000C, 0x0000008E, 
0x00000007, 0x0004003B, 0x0000000C, 0x0000008F, 0x00000007, 0x00040008, 0x00000001, 0x0000005A, 0x00000000, 0x0004003D, 0x0000000B, 0x00000083, 
0x00000019, 0x0003003E, 0x00000082, 0x00000083, 0x0004003D, 0x0000000B, 0x00000085, 0x0000001A, 0x0003003E, 0x00000084, 0x00000085, 0x00060039, 
0x0000000B, 0x00000086, 0x00000010, 0x00000082, 0x00000084, 0x0004003D, 0x0000000B, 0x00000088, 0x0000001B, 0x0003003E, 0x00000087, 0x00000088, 
0x0004003D, 0x0000000B, 0x0000008A, 0x0000001C, 0x0003003E, 0x00000089, 0x0000008A, 0x0004003D, 0x0000000B, 0x0000008C, 0x0000001D, 0x0003003E, 
0x0000008B, 0x0000008C, 0x00070039, 0x0000000B, 0x0000008D, 0x00000016, 0x00000087, 0x00000089, 0x0000008B, 0x0003003E, 0x0000008E, 0x00000086, 
0x0003003E, 0x0000008F, 0x0000008D, 0x00060039, 0x0000000B, 0x00000090, 0x00000010, 0x0000008E, 0x0000008F, 0x000200FE, 0x00000090, 0x00010038, 
0x00050036, 0x0000000B, 0x00000027, 0x00000000, 0x00000024, 0x00030037, 0x00000021, 0x00000025, 0x00030037, 0x00000023, 0x00000026, 0x000200F8, 
0x00000028, 0x0004003B, 0x0000003F, 0x00000097, 0x00000007, 0x0004003B, 0x0000003F, 0x0000009E, 0x00000007, 0x0004003B, 0x0000000C, 0x000000A4, 
0x00000007, 0x0004003B, 0x00000038, 0x000000AB, 0x00000007, 0x0004003B, 0x0000003F, 0x000000AC, 0x00000007, 0x0004003B, 0x0000003F, 0x000000B5, 
0x00000007, 0x0004003B, 0x00000038, 0x000000C2, 0x00000007, 0x0004003B, 0x00000038, 0x000000CE, 0x00000007, 0x0004003B, 0x00000038, 0x000000DA, 
0x00000007, 0x0004003B, 0x00000038, 0x000000E5, 0x00000007, 0x0004003B, 0x00000038, 0x000000F0, 0x00000007, 0x0004003B, 0x00000038, 0x000000FB, 
0x00000007, 0x0004003B, 0x00000038, 0x00000103, 0x00000007, 0x0004003B, 0x00000038, 0x0000010C, 0x00000007, 0x0004003B, 0x0000003F, 0x00000118, 
0x00000007, 0x0004003B, 0x00000129, 0x0000013A, 0x00000007, 0x00040008, 0x00000001, 0x00000060, 0x00000000, 0x00050041, 0x0000003F, 0x00000093, 
0x00000026, 0x00000069, 0x0004003D, 0x00000009, 0x00000094, 0x00000093, 0x0005008E, 0x00000009, 0x00000095, 0x00000094, 0x00000056, 0x00050041, 
0x0000003F, 0x00000096, 0x00000026, 0x00000069, 0x0003003E, 0x00000096, 0x00000095, 0x00040008, 0x00000001, 0x00000061, 0x00000000, 0x00050041, 
0x0000003F, 0x00000099, 0x00000026, 0x00000098, 0x0004003D, 0x00000009, 0x0000009A, 0x00000099, 0x00050041, 0x0000003F, 0x0000009B, 0x00000026, 
0x00000069, 0x0004003D, 0x00000009, 0x0000009C, 0x0000009B, 0x00050083, 0x00000009, 0x0000009D, 0x0000009A, 0x0000009C, 0x0003003E, 0x00000097, 
0x0000009D, 0x00040008, 0x00000001, 0x00000062, 0x00000000, 0x00050041, 0x0000003F, 0x0000009F, 0x00000026, 0x00000098, 0x0004003D, 0x00000009, 
0x000000A0, 0x0000009F, 0x00050041, 0x0000003F, 0x000000A1, 0x00000026, 0x00000069, 0x0004003D, 0x00000009, 0x000000A2, 0x000000A1, 0x00050081, 
0x00000009, 0x000000A3, 0x000000A0, 0x000000A2, 0x0003003E, 0x0000009E, 0x000000A3, 0x00040008, 0x00000001, 0x00000064, 0x00000000, 0x0003003E, 
0x000000A4, 0x000000AA, 0x00040008, 0x00000001, 0x00000066, 0x00000000, 0x0003003E, 0x000000AB, 0x000000A6, 0x00040008, 0x00000001, 0x00000068, 
0x00000000, 0x00050041, 0x0000003F, 0x000000AD, 0x00000025, 0x00000098, 0x0004003D, 0x00000009, 0x000000AE, 0x000000AD, 0x0004003D, 0x00000009, 
0x000000AF, 0x00000097, 0x00050083, 0x00000009, 0x000000B0, 0x000000AE, 0x000000AF, 0x00050041, 0x0000003F, 0x000000B1, 0x00000025, 0x00000069, 
0x0004003D, 0x00000009, 0x000000B2, 0x000000B1, 0x0004007F, 0x00000009, 0x000000B3, 0x000000B2, 0x00050088, 0x00000009, 0x000000B4, 0x000000B0, 
0x000000B3, 0x0003003E, 0x000000AC, 0x000000B4, 0x00040008, 0x00000001, 0x0000006A, 0x00000000, 0x00050041, 0x0000003F, 0x000000B6, 0x00000025, 
0x00000098, 0x0004003D, 0x00000009, 0x000000B7, 0x000000B6, 0x0004003D, 0x00000009, 0x000000B8, 0x0000009E, 0x00050083, 0x00000009, 0x000000B9, 
0x000000B7, 0x000000B8, 0x00050041, 0x0000003F, 0x000000BA, 0x00000025, 0x00000069, 0x0004003D, 0x00000009, 0x000000BB, 0x000000BA, 0x0004007F, 
0x00000009, 0x000000BC, 0x000000BB, 0x00050088, 0x00000009, 0x000000BD, 0x000000B9, 0x000000BC, 0x0003003E, 0x000000B5, 0x000000BD, 0x00040008, 
0x00000001, 0x0000006C, 0x00000000, 0x00050041, 0x00000038, 0x000000BF, 0x000000AC, 0x000000BE, 0x0004003D, 0x00000008, 0x000000C0, 0x000000BF, 
0x000500BC, 0x00000007, 0x000000C1, 0x000000C0, 0x000000A7, 0x000300F7, 0x000000C4, 0x00000000, 0x000400FA, 0x000000C1, 0x000000C3, 0x000000C5, 
0x000200F8, 0x000000C3, 0x0003003E, 0x000000C2, 0x000000A6, 0x000200F9, 0x000000C4, 0x000200F8, 0x000000C5, 0x00050041, 0x00000038, 0x000000C6, 
0x000000AC, 0x000000BE, 0x0004003D, 0x00000008, 0x000000C7, 0x000000C6, 0x0003003E, 0x000000C2, 0x000000C7, 0x000200F9, 0x000000C4, 0x000200F8, 
0x000000C4, 0x0004003D, 0x00000008, 0x000000C8, 0x000000C2, 0x00050041, 0x00000038, 0x000000C9, 0x000000AC, 0x000000BE, 0x0003003E, 0x000000C9, 
0x000000C8, 0x00040008, 0x00000001, 0x0000006D, 0x00000000, 0x00050041, 0x00000038, 0x000000CB, 0x000000AC, 0x000000CA, 0x0004003D, 0x00000008, 
0x000000CC, 0x000000CB, 0x000500BC, 0x00000007, 0x000000CD, 0x000000CC, 0x000000A7, 0x000300F7, 0x000000D0, 0x00000000, 0x000400FA, 0x000000CD, 
0x000000CF, 0x000000D1, 0x000200F8, 0x000000CF, 0x0003003E, 0x000000CE, 0x000000A6, 0x000200F9, 0x000000D0, 0x000200F8, 0x000000D1, 0x00050041, 
0x00000038, 0x000000D2, 0x000000AC, 0x000000CA, 0x0004003D, 0x00000008, 0x000000D3, 0x000000D2, 0x0003003E, 0x000000CE, 0x000000D3, 0x000200F9, 
0x000000D0, 0x000200F8, 0x000000D0, 0x0004003D, 0x00000008, 0x000000D4, 0x000000CE, 0x00050041, 0x00000038, 0x000000D5, 0x000000AC, 0x000000CA, 
0x0003003E, 0x000000D5, 0x000000D4, 0x00040008, 0x00000001, 0x0000006E, 0x00000000, 0x00050041, 0x00000038, 0x000000D7, 0x000000AC, 0x000000D6, 
0x0004003D, 0x00000008, 0x000000D8, 0x000000D7, 0x000500BC, 0x00000007, 0x000000D9, 0x000000D8, 0x000000A7, 0x000300F7, 0x000000DC, 0x00000000, 
0x000400FA, 0x000000D9, 0x000000DB, 0x000000DD, 0x000200F8, 0x000000DB, 0x0003003E, 0x000000DA, 0x000000A6, 0x000200F9, 0x000000DC, 0x000200F8, 
0x000000DD, 0x00050041, 0x00000038, 0x000000DE, 0x000000AC, 0x000000D6, 0x0004003D, 0x00000008, 0x000000DF, 0x000000DE, 0x0003003E, 0x000000DA, 
0x000000DF, 0x000200F9, 0x000000DC, 0x000200F8, 0x000000DC, 0x0004003D, 0x00000008, 0x000000E0, 0x000000DA, 0x00050041, 0x00000038, 0x000000E1, 
0x000000AC, 0x000000D6, 0x0003003E, 0x000000E1, 0x000000E0, 0x00040008, 0x00000001, 0x0000006F, 0x00000000, 0x00050041, 0x00000038, 0x000000E2, 
0x000000B5, 0x000000BE, 0x0004003D, 0x00000008, 0x000000E3, 0x000000E2, 0x000500BC, 0x00000007, 0x000000E4, 0x000000E3, 0x000000A7, 0x000300F7, 
0x000000E7, 0x00000000, 0x000400FA, 0x000000E4, 0x000000E6, 0x000000E8, 0x000200F8, 0x000000E6, 0x0003003E, 0x000000E5, 0x000000A6, 0x000200F9, 
0x000000E7, 0x000200F8, 0x000000E8, 0x00050041, 0x00000038, 0x000000E9, 0x000000B5, 0x000000BE, 0x0004003D, 0x00000008, 0x000000EA, 0x000000E9, 
0x0003003E, 0x000000E5, 0x000000EA, 0x000200F9, 0x000000E7, 0x000200F8, 0x000000E7, 0x0004003D, 0x00000008, 0x000000EB, 0x000000E5, 0x00050041, 
0x00000038, 0x000000EC, 0x000000B5, 0x000000BE, 0x0003003E, 0x000000EC, 0x000000EB, 0x00040008, 0x00000001, 0x00000070, 0x00000000, 0x00050041, 
0x00000038, 0x000000ED, 0x000000B5, 0x000000CA, 0x0004003D, 0x00000008, 0x000000EE, 0x000000ED, 0x000500BC, 0x00000007, 0x000000EF, 0x000000EE, 
0x000000A7, 0x000300F7, 0x000000F2, 0x00000000, 0x000400FA, 0x000000EF, 0x000000F1, 0x000000F3, 0x000200F8, 0x000000F1, 0x0003003E, 0x000000F0, 
0x000000A6, 0x000200F9, 0x000000F2, 0x000200F8, 0x000000F3, 0x00050041, 0x00000038, 0x000000F4, 0x000000B5, 0x000000CA, 0x0004003D, 0x00000008, 
0x000000F5, 0x000000F4, 0x0003003E, 0x000000F0, 0x000000F5, 0x000200F9, 0x000000F2, 0x000200F8, 0x000000F2, 0x0004003D, 0x00000008, 0x000000F6, 
0x000000F0, 0x00050041, 0x00000038, 0x000000F7, 0x000000B5, 0x000000CA, 0x0003003E, 0x000000F7, 0x000000F6, 0x00040008, 0x00000001, 0x00000071, 
0x00000000, 0x00050041, 0x00000038, 0x000000F8, 0x000000B5, 0x000000D6, 0x0004003D, 0x00000008, 0x000000F9, 0x000000F8, 0x000500BC, 0x00000007, 
0x000000FA, 0x000000F9, 0x000000A7, 0x000300F7, 0x000000FD, 0x00000000, 0x000400FA, 0x000000FA, 0x000000FC, 0x000000FE, 0x000200F8, 0x000000FC, 
0x0003003E, 0x000000FB, 0x000000A6, 0x000200F9, 0x000000FD, 0x000200F8, 0x000000FE, 0x00050041, 0x00000038, 0x000000FF, 0x000000B5, 0x000000D6, 
0x0004003D, 0x00000008, 0x00000100, 0x000000FF, 0x0003003E, 0x000000FB, 0x00000100, 0x000200F9, 0x000000FD, 0x000200F8, 0x000000FD, 0x0004003D, 
0x00000008, 0x00000101, 0x000000FB, 0x00050041, 0x00000038, 0x00000102, 0x000000B5, 0x000000D6, 0x0003003E, 0x00000102, 0x00000101, 0x00040008, 
0x00000001, 0x00000072, 0x00000000, 0x00050041, 0x00000038, 0x00000104, 0x000000AC, 0x000000BE, 0x0004003D, 0x00000008, 0x00000105, 0x00000104, 
0x00050041, 0x00000038, 0x00000106, 0x000000AC, 0x000000CA, 0x0004003D, 0x00000008, 0x00000107, 0x00000106, 0x00050041, 0x00000038, 0x00000108, 
0x000000AC, 0x000000D6, 0x0004003D, 0x00000008, 0x00000109, 0x00000108, 0x0007000C, 0x00000008, 0x0000010A, 0x00000002, 0x00000025, 0x00000107, 
0x00000109, 0x0007000C, 0x00000008, 0x0000010B, 0x00000002, 0x00000025, 0x00000105, 0x0000010A, 0x0003003E, 0x00000103, 0x0000010B, 0x00040008, 
0x00000001, 0x00000074, 0x00000000, 0x00050041, 0x00000038, 0x0000010D, 0x000000B5, 0x000000BE, 0x0004003D, 0x00000008, 0x0000010E, 0x0000010D, 
0x00050041, 0x00000038, 0x0000010F, 0x000000B5, 0x000000CA, 0x0004003D, 0x00000008, 0x00000110, 0x0000010F, 0x00050041, 0x00000038, 0x00000111, 
0x000000B5, 0x000000D6, 0x0004003D, 0x00000008, 0x00000112, 0x00000111, 0x0007000C, 0x00000008, 0x00000113, 0x00000002, 0x00000025, 0x00000110, 
0x00000112, 0x0007000C, 0x00000008, 0x00000114, 0x00000002, 0x00000025, 0x0000010E, 0x00000113, 0x0003003E, 0x0000010C, 0x00000114, 0x00040008, 
0x00000001, 0x00000076, 0x00000000, 0x0004003D, 0x00000008, 0x00000115, 0x00000103, 0x0004003D, 0x00000008, 0x00000116, 0x0000010C, 0x0007000C, 
0x00000008, 0x00000117, 0x00000002, 0x00000025, 0x00000115, 0x00000116, 0x0003003E, 0x000000AB, 0x00000117, 0x00040008, 0x00000001, 0x00000077, 
0x00000000, 0x00050041, 0x0000003F, 0x00000119, 0x00000025, 0x00000098, 0x0004003D, 0x00000009, 0x0000011A, 0x00000119, 0x00050041, 0x0000003F, 
0x0000011B, 0x00000025, 0x00000069, 0x0004003D, 0x00000009, 0x0000011C, 0x0000011B, 0x0004003D, 0x00000008, 0x0000011D, 0x000000AB, 0x0005008E, 
0x00000009, 0x0000011E, 0x0000011C, 0x0000011D, 0x00050081, 0x00000009, 0x0000011F, 0x0000011A, 0x0000011E, 0x0003003E, 0x00000118, 0x0000011F, 
0x00040008, 0x00000001, 0x00000079, 0x00000000, 0x00050041, 0x0000003F, 0x00000120, 0x00000026, 0x00000098, 0x0004003D, 0x00000009, 0x00000121, 
0x00000120, 0x0004003D, 0x00000009, 0x00000122, 0x00000118, 0x00050083, 0x00000009, 0x00000123, 0x00000122, 0x00000121, 0x0003003E, 0x00000118, 
0x00000123, 0x00040008, 0x00000001, 0x0000007A, 0x00000000, 0x0004003D, 0x00000008, 0x00000124, 0x000000AB, 0x000500B6, 0x00000007, 0x00000125, 
0x00000124, 0x000000A6, 0x000300F7, 0x00000127, 0x00000000, 0x000400FA, 0x00000125, 0x00000126, 0x00000127, 0x000200F8, 0x00000126, 0x00040008, 
0x00000001, 0x0000007C, 0x00000000, 0x00050041, 0x00000129, 0x0000012A, 0x000000A4, 0x00000098, 0x0003003E, 0x0000012A, 0x00000128, 0x00040008, 
0x00000001, 0x0000007D, 0x00000000, 0x0004003D, 0x00000008, 0x0000012B, 0x000000AB, 0x00050041, 0x00000038, 0x0000012C, 0x000000A4, 0x00000069, 
0x0003003E, 0x0000012C, 0x0000012B, 0x00040008, 0x00000001, 0x0000007E, 0x00000000, 0x00050041, 0x00000038, 0x0000012E, 0x000000A4, 0x0000012D, 
0x0003003E, 0x0000012E, 0x000000A7, 0x00040008, 0x00000001, 0x0000007F, 0x00000000, 0x00050041, 0x00000038, 0x0000012F, 0x00000118, 0x000000BE, 
0x0004003D, 0x00000008, 0x00000130, 0x0000012F, 0x0006000C, 0x00000008, 0x00000131, 0x00000002, 0x00000004, 0x00000130, 0x00060041, 0x00000038, 
0x00000132, 0x00000026, 0x00000069, 0x000000BE, 0x0004003D, 0x00000008, 0x00000133, 0x00000132, 0x00050083, 0x00000008, 0x00000134, 0x00000131, 
0x00000133, 0x0006000C, 0x00000008, 0x00000135, 0x00000002, 0x00000004, 0x00000134, 0x000500B8, 0x00000007, 0x00000137, 0x00000135, 0x00000136, 
0x000300F7, 0x00000139, 0x00000000, 0x000400FA, 0x00000137, 0x00000138, 0x00000139, 0x000200F8, 0x00000138, 0x00040008, 0x00000001, 0x00000081, 
0x00000000, 0x00050041, 0x00000038, 0x0000013B, 0x00000118, 0x000000BE, 0x0004003D, 0x00000008, 0x0000013C, 0x0000013B, 0x000500B8, 0x00000007, 
0x0000013D, 0x0000013C, 0x000000A7, 0x0003003E, 0x0000013A, 0x0000013D, 0x00040008, 0x00000001, 0x00000083, 0x00000000, 0x0004003D, 0x00000007, 
0x0000013F, 0x0000013A, 0x000600A9, 0x00000065, 0x00000141, 0x0000013F, 0x00000069, 0x00000140, 0x0004006F, 0x00000008, 0x00000142, 0x00000141, 
0x00060050, 0x00000009, 0x00000143, 0x00000142, 0x000000A7, 0x000000A7, 0x00050041, 0x0000003F, 0x00000144, 0x000000A4, 0x0000013E, 0x0003003E, 
0x00000144, 0x00000143, 0x00040008, 0x00000001, 0x00000084, 0x00000000, 0x0004003D, 0x00000007, 0x00000146, 0x0000013A, 0x00070050, 0x0000014A, 
0x0000014B, 0x00000146, 0x00000146, 0x00000146, 0x00000146, 0x000600A9, 0x0000000A, 0x0000014C, 0x0000014B, 0x00000148, 0x00000149, 0x00050041, 
0x00000047, 0x0000014D, 0x000000A4, 0x00000145, 0x0003003E, 0x0000014D, 0x0000014C, 0x00040008, 0x00000001, 0x00000085, 0x00000000, 0x0004003D, 
0x0000000B, 0x0000014E, 0x000000A4, 0x000200FE, 0x0000014E, 0x000200F8, 0x00000139, 0x00040008, 0x00000001, 0x00000089, 0x00000000, 0x00050041, 
0x00000038, 0x00000150, 0x00000118, 0x000000D6, 0x0004003D, 0x00000008, 0x00000151, 0x00000150, 0x0006000C, 0x00000008, 0x00000152, 0x00000002, 
0x00000004, 0x00000151, 0x00060041, 0x00000038, 0x00000153, 0x00000026, 0x00000069, 0x000000D6, 0x0004003D, 0x00000008, 0x00000154, 0x00000153, 
0x00050083, 0x00000008, 0x00000155, 0x00000152, 0x00000154, 0x0006000C, 0x00000008, 0x00000156, 0x00000002, 0x00000004, 0x00000155, 0x000500B8, 
0x00000007, 0x00000157, 0x00000156, 0x00000136, 0x000300F7, 0x00000159, 0x00000000, 0x000400FA, 0x00000157, 0x00000158, 0x00000159, 0x000200F8, 
0x00000158, 0x00040008, 0x00000001, 0x0000008B, 0x00000000, 0x00050041, 0x00000038, 0x0000015A, 0x00000118, 0x000000D6, 0x0004003D, 0x00000008, 
0x0000015B, 0x0000015A, 0x0006000C, 0x00000008, 0x0000015C, 0x00000002, 0x00000006, 0x0000015B, 0x0004007F, 0x00000008, 0x0000015D, 0x0000015C, 
0x00060050, 0x00000009, 0x0000015E, 0x000000A7, 0x000000A7, 0x0000015D, 0x00050041, 0x0000003F, 0x0000015F, 0x000000A4, 0x0000013E, 0x0003003E, 
0x0000015F, 0x0000015E, 0x00040008, 0x00000001, 0x0000008C, 0x00000000, 0x00050041, 0x00000047, 0x00000161, 0x000000A4, 0x00000145, 0x0003003E, 
0x00000161, 0x00000160, 0x00040008, 0x00000001, 0x0000008D, 0x00000000, 0x0004003D, 0x0000000B, 0x00000162, 0x000000A4, 0x000200FE, 0x00000162, 
0x000200F8, 0x00000159, 0x00040008, 0x00000001, 0x00000091, 0x00000000, 0x00050041, 0x00000038, 0x00000164, 0x00000118, 0x000000CA, 0x0004003D, 
0x00000008, 0x00000165, 0x00000164, 0x0006000C, 0x00000008, 0x00000166, 0x00000002, 0x00000006, 0x00000165, 0x0004007F, 0x00000008, 0x00000167, 
0x00000166, 0x00060050, 0x00000009, 0x00000168, 0x000000A7, 0x00000167, 0x000000A7, 0x00050041, 0x0000003F, 0x00000169, 0x000000A4, 0x0000013E, 
0x0003003E, 0x00000169, 0x00000168, 0x00040008, 0x00000001, 0x00000092, 0x00000000, 0x00050041, 0x00000038, 0x0000016B, 0x00000118, 0x000000CA, 
0x0004003D, 0x00000008, 0x0000016C, 0x0000016B, 0x0006000C, 0x00000008, 0x0000016D, 0x00000002, 0x00000006, 0x0000016C, 0x0004003D, 0x00000008, 
0x00000170, 0x0000016F, 0x00050085, 0x00000008, 0x00000172, 0x00000170, 0x00000171, 0x0006000C, 0x00000008, 0x00000173, 0x00000002, 0x0000000D, 
0x00000172, 0x00050081, 0x00000008, 0x00000175, 0x00000173, 0x00000174, 0x0008000C, 0x00000008, 0x00000178, 0x00000002, 0x0000002B, 0x00000175, 
0x00000176, 0x00000177, 0x00050085, 0x00000008, 0x00000179, 0x0000016D, 0x00000178, 0x00070050, 0x0000000A, 0x0000017A, 0x0000016A, 0x0000016A, 
0x0000016A, 0x00000179, 0x00050041, 0x00000047, 0x0000017B, 0x000000A4, 0x00000145, 0x0003003E, 0x0000017B, 0x0000017A, 0x00040008, 0x00000001, 
0x00000093, 0x00000000, 0x0004003D, 0x0000000B, 0x0000017C, 0x000000A4, 0x000200FE, 0x0000017C, 0x000200F8, 0x00000127, 0x00040008, 0x00000001, 
0x00000097, 0x00000000, 0x0004003D, 0x0000000B, 0x0000017E, 0x000000A4, 0x000200FE, 0x0000017E, 0x00010038, 0x00050036, 0x0000000B, 0x0000002E, 
0x00000000, 0x0000002B, 0x00030037, 0x00000021, 0x0000002C, 0x00030037, 0x0000002A, 0x0000002D, 0x000200F8, 0x0000002F, 0x0004003B, 0x0000003F, 
0x00000181, 0x00000007, 0x0004003B, 0x00000038, 0x00000187, 0x00000007, 0x0004003B, 0x00000038, 0x00000191, 0x00000007, 0x0004003B, 0x00000038, 
0x000001A4, 0x00000007, 0x00040008, 0x00000001, 0x0000009D, 0x00000000, 0x00050041, 0x0000003F, 0x00000182, 0x0000002C, 0x00000098, 0x0004003D, 
0x00000009, 0x00000183, 0x00000182, 0x00050041, 0x0000003F, 0x00000184, 0x0000002D, 0x00000098, 0x0004003D, 0x00000009, 0x00000185, 0x00000184, 
0x00050083, 0x00000009, 0x00000186, 0x00000183, 0x00000185, 0x0003003E, 0x00000181, 0x00000186, 0x00040008, 0x00000001, 0x0000009F, 0x00000000, 
0x0004003D, 0x00000009, 0x00000188, 0x00000181, 0x00050041, 0x0000003F, 0x00000189, 0x0000002C, 0x00000069, 0x0004003D, 0x00000009, 0x0000018A, 
0x00000189, 0x00050094, 0x00000008, 0x0000018B, 0x00000188, 0x0000018A, 0x0003003E, 0x00000187, 0x0000018B, 0x00040008, 0x00000001, 0x000000A1, 
0x00000000, 0x0004003D, 0x00000008, 0x0000018C, 0x00000187, 0x000500BA, 0x00000007, 0x0000018D, 0x0000018C, 0x000000A7, 0x000300F7, 0x0000018F, 
0x00000000, 0x000400FA, 0x0000018D, 0x0000018E, 0x0000018F, 0x000200F8, 0x0000018E, 0x00040008, 0x00000001, 0x000000A3, 0x00000000, 0x000200FE, 
0x000000AA, 0x000200F8, 0x0000018F, 0x00040008, 0x00000001, 0x000000A6, 0x00000000, 0x00050041, 0x00000038, 0x00000192, 0x0000002D, 0x00000069, 
0x0004003D, 0x00000008, 0x00000193, 0x00000192, 0x00050041, 0x00000038, 0x00000194, 0x0000002D, 0x00000069, 0x0004003D, 0x00000008, 0x00000195, 
0x00000194, 0x00050085, 0x00000008, 0x00000196, 0x00000193, 0x00000195, 0x0004003D, 0x00000009, 0x00000197, 0x00000181, 0x0004003D, 0x00000009, 
0x00000198, 0x00000181, 0x00050094, 0x00000008, 0x00000199, 0x00000197, 0x00000198, 0x0004003D, 0x00000008, 0x0000019A, 0x00000187, 0x0004003D, 
0x00000008, 0x0000019B, 0x00000187, 0x00050085, 0x00000008, 0x0000019C, 0x0000019A, 0x0000019B, 0x00050083, 0x00000008, 0x0000019D, 0x00000199, 
0x0000019C, 0x00050083, 0x00000008, 0x0000019E, 0x00000196, 0x0000019D, 0x0003003E, 0x00000191, 0x0000019E, 0x00040008, 0x00000001, 0x000000A8, 
0x00000000, 0x0004003D, 0x00000008, 0x0000019F, 0x00000191, 0x000500B8, 0x00000007, 0x000001A0, 0x0000019F, 0x000000A7, 0x000300F7, 0x000001A2, 
0x00000000, 0x000400FA, 0x000001A0, 0x000001A1, 0x000001A2, 0x000200F8, 0x000001A1, 0x00040008, 0x00000001, 0x000000AA, 0x00000000, 0x000200FE, 
0x000000AA, 0x000200F8, 0x000001A2, 0x00040008, 0x00000001, 0x000000AD, 0x00000000, 0x0004003D, 0x00000009, 0x000001A5, 0x00000181, 0x0006000C, 
0x00000008, 0x000001A6, 0x00000002, 0x00000042, 0x000001A5, 0x0004003D, 0x00000008, 0x000001A7, 0x00000191, 0x0006000C, 0x00000008, 0x000001A8, 
0x00000002, 0x0000001F, 0x000001A7, 0x00050083, 0x00000008, 0x000001A9, 0x000001A6, 0x000001A8, 0x0003003E, 0x000001A4, 0x000001A9, 0x00040008, 
0x00000001, 0x000000AF, 0x00000000, 0x0004003D, 0x00000008, 0x000001AA, 0x000001A4, 0x00050041, 0x0000003F, 0x000001AB, 0x0000002C, 0x00000098, 
0x0004003D, 0x00000009, 0x000001AC, 0x000001AB, 0x00050041, 0x0000003F, 0x000001AD, 0x0000002C, 0x00000069, 0x0004003D, 0x00000009, 0x000001AE, 
0x000001AD, 0x0004003D, 0x00000008, 0x000001AF, 0x000001A4, 0x0005008E, 0x00000009, 0x000001B0, 0x000001AE, 0x000001AF, 0x00050081, 0x00000009, 
0x000001B1, 0x000001AC, 0x000001B0, 0x00050041, 0x0000003F, 0x000001B2, 0x0000002D, 0x00000098, 0x0004003D, 0x00000009, 0x000001B3, 0x000001B2, 
0x00050083, 0x00000009, 0x000001B4, 0x000001B1, 0x000001B3, 0x0006000C, 0x00000009, 0x000001B5, 0x00000002, 0x00000045, 0x000001B4, 0x00050041, 
0x000001BD, 0x000001BE, 0x000001BC, 0x00000069, 0x0004003D, 0x00000008, 0x000001BF, 0x000001BE, 0x00050085, 0x00000008, 0x000001C1, 0x000001BF, 
0x000001C0, 0x0006000C, 0x00000008, 0x000001C2, 0x00000002, 0x0000000D, 0x000001C1, 0x00050085, 0x00000008, 0x000001C3, 0x000001C2, 0x00000056, 
0x00050081, 0x00000008, 0x000001C4, 0x000001C3, 0x00000056, 0x00080050, 0x0000000B, 0x000001C5, 0x00000128, 0x000001AA, 0x000001B5, 0x000000A9, 
0x000001C4, 0x000200FE, 0x000001C5, 0x00010038, 0x00050036, 0x00000008, 0x00000034, 0x00000000, 0x00000032, 0x00030037, 0x00000031, 0x00000033, 
0x000200F8, 0x00000035, 0x00040008, 0x00000001, 0x000000B5, 0x00000000, 0x0004003D, 0x00000030, 0x000001C8, 0x00000033, 0x00050094, 0x00000008, 
0x000001CC, 0x000001C8, 0x000001CB, 0x0006000C, 0x00000008, 0x000001CD, 0x00000002, 0x0000000D, 0x000001CC, 0x00050085, 0x00000008, 0x000001CF, 
0x000001CD, 0x000001CE, 0x0006000C, 0x00000008, 0x000001D0, 0x00000002, 0x0000000A, 0x000001CF, 0x000200FE, 0x000001D0, 0x00010038, 0x00050036, 
0x0000000A, 0x0000003D, 0x00000000, 0x00000039, 0x00030037, 0x00000037, 0x0000003A, 0x00030037, 0x00000031, 0x0000003B, 0x00030037, 0x00000038, 
0x0000003C, 0x000200F8, 0x0000003E, 0x0004003B, 0x0000003F, 0x000001D3, 0x00000007, 0x0004003B, 0x00000047, 0x000001D6, 0x00000007, 0x0004003B, 
0x000001D7, 0x000001D8, 0x00000007, 0x0004003B, 0x000001D7, 0x000001DD, 0x00000007, 0x0004003B, 0x00000021, 0x000001EC, 0x00000007, 0x0004003B, 
0x00000031, 0x000001EF, 0x00000007, 0x0004003B, 0x00000031, 0x000001FC, 0x00000007, 0x0004003B, 0x00000031, 0x00000208, 0x00000007, 0x0004003B, 
0x00000047, 0x00000218, 0x00000007, 0x0004003B, 0x000001D7, 0x0000021D, 0x00000007, 0x0004003B, 0x000001D7, 0x00000222, 0x00000007, 0x0004003B, 
0x0000000C, 0x0000022B, 0x00000007, 0x0004003B, 0x00000021, 0x00000232, 0x00000007, 0x0004003B, 0x00000023, 0x00000234, 0x00000007, 0x0004003B, 
0x0000000C, 0x00000236, 0x00000007, 0x0004003B, 0x00000021, 0x0000023A, 0x00000007, 0x0004003B, 0x0000002A, 0x0000023C, 0x00000007, 0x0004003B, 
0x0000000C, 0x00000241, 0x00000007, 0x0004003B, 0x00000021, 0x00000246, 0x00000007, 0x0004003B, 0x0000002A, 0x00000248, 0x00000007, 0x0004003B, 
0x0000000C, 0x0000024D, 0x00000007, 0x0004003B, 0x00000021, 0x00000250, 0x00000007, 0x0004003B, 0x0000002A, 0x00000252, 0x00000007, 0x0004003B, 
0x0000000C, 0x0000025D, 0x00000007, 0x0004003B, 0x00000021, 0x00000262, 0x00000007, 0x0004003B, 0x0000002A, 0x00000264, 0x00000007, 0x0004003B, 
0x0000000C, 0x0000026E, 0x00000007, 0x0004003B, 0x0000000C, 0x0000026F, 0x00000007, 0x0004003B, 0x0000000C, 0x00000271, 0x00000007, 0x0004003B, 
0x0000000C, 0x00000273, 0x00000007, 0x0004003B, 0x0000000C, 0x00000275, 0x00000007, 0x0004003B, 0x0000000C, 0x00000277, 0x00000007, 0x0004003B, 
0x0000003F, 0x000002A1, 0x00000007, 0x0004003B, 0x00000031, 0x000002A7, 0x00000007, 0x0004003B, 0x00000031, 0x000002AE, 0x00000007, 0x0004003B, 
0x00000031, 0x000002B5, 0x00000007, 0x0004003B, 0x0000003F, 0x000002ED, 0x00000007, 0x0004003B, 0x0000003F, 0x000002F3, 0x00000007, 0x0004003B, 
0x00000038, 0x000002F9, 0x00000007, 0x0004003B, 0x00000031, 0x00000303, 0x00000007, 0x00040008, 0x00000001, 0x000000BB, 0x00000000, 0x00050041, 
0x0000003F, 0x000001D4, 0x0000003A, 0x00000098, 0x0004003D, 0x00000009, 0x000001D5, 0x000001D4, 0x0003003E, 0x000001D3, 0x000001D5, 0x00040008, 
0x00000001, 0x000000BD, 0x00000000, 0x0003003E, 0x000001D6, 0x000000A9, 0x00040008, 0x00000001, 0x000000BF, 0x00000000, 0x0004003D, 0x00000008, 
0x000001DA, 0x0000003C, 0x00050085, 0x00000008, 0x000001DB, 0x000001D9, 0x000001DA, 0x0004006E, 0x00000065, 0x000001DC, 0x000001DB, 0x0003003E, 
0x000001D8, 0x000001DC, 0x00040008, 0x00000001, 0x000000C1, 0x00000000, 0x0003003E, 0x000001DD, 0x00000098, 0x000200F9, 0x000001DE, 0x000200F8, 
0x000001DE, 0x000400F6, 0x000001E0, 0x000001E1, 0x00000000, 0x000200F9, 0x000001E2, 0x000200F8, 0x000001E2, 0x0004003D, 0x00000065, 0x000001E3, 
0x000001DD, 0x000500B1, 0x00000007, 0x000001E5, 0x000001E3, 0x000001E4, 0x000400FA, 0x000001E5, 0x000001DF, 0x000001E0, 0x000200F8, 0x000001DF, 
0x00040008, 0x00000001, 0x000000C3, 0x00000000, 0x0004003D, 0x00000065, 0x000001E6, 0x000001DD, 0x0004003D, 0x00000065, 0x000001E7, 0x000001D8, 
0x000500AA, 0x00000007, 0x000001E8, 0x000001E6, 0x000001E7, 0x000300F7, 0x000001EA, 0x00000000, 0x000400FA, 0x000001E8, 0x000001E9, 0x000001EA, 
0x000200F8, 0x000001E9, 0x00040008, 0x00000001, 0x000000C5, 0x00000000, 0x000200F9, 0x000001E0, 0x000200F8, 0x000001EA, 0x00040008, 0x00000001, 
0x000000C8, 0x00000000, 0x00050041, 0x00000021, 0x000001ED, 0x0000003A, 0x00000069, 0x0004003D, 0x00000020, 0x000001EE, 0x000001ED, 0x0003003E, 
0x000001EC, 0x000001EE, 0x00040008, 0x00000001, 0x000000CA, 0x00000000, 0x0004003D, 0x00000030, 0x000001F0, 0x0000003B, 0x0003003E, 0x000001EF, 
0x000001F0, 0x00050039, 0x00000008, 0x000001F1, 0x00000034, 0x000001EF, 0x00050085, 0x00000008, 0x000001F3, 0x000001F1, 0x000001F2, 0x00050083, 
0x00000008, 0x000001F4, 0x000001F3, 0x0000016A, 0x0004003D, 0x00000008, 0x000001F6, 0x000001F5, 0x00050085, 0x00000008, 0x000001F7, 0x000001F4, 
0x000001F6, 0x00060041, 0x00000038, 0x000001F8, 0x000001EC, 0x00000069, 0x000000BE, 0x0004003D, 0x00000008, 0x000001F9, 0x000001F8, 0x00050081, 
0x00000008, 0x000001FA, 0x000001F9, 0x000001F7, 0x00060041, 0x00000038, 0x000001FB, 0x000001EC, 0x00000069, 0x000000BE, 0x0003003E, 0x000001FB, 
0x000001FA, 0x00040008, 0x00000001, 0x000000CB, 0x00000000, 0x0004003D, 0x00000030, 0x000001FD, 0x0000003B, 0x0007004F, 0x00000030, 0x000001FE, 
0x000001FD, 0x000001FD, 0x00000001, 0x00000000, 0x0003003E, 0x000001FC, 0x000001FE, 0x00050039, 0x00000008, 0x000001FF, 0x00000034, 0x000001FC, 
0x00050085, 0x00000008, 0x00000200, 0x000001FF, 0x000001F2, 0x00050083, 0x00000008, 0x00000201, 0x00000200, 0x0000016A, 0x0004003D, 0x00000008, 
0x00000202, 0x000001F5, 0x00050085, 0x00000008, 0x00000203, 0x00000201, 0x00000202, 0x00060041, 0x00000038, 0x00000204, 0x000001EC, 0x00000069, 
0x000000CA, 0x0004003D, 0x00000008, 0x00000205, 0x00000204, 0x00050081, 0x00000008, 0x00000206, 0x00000205, 0x00000203, 0x00060041, 0x00000038, 
0x00000207, 0x000001EC, 0x00000069, 0x000000CA, 0x0003003E, 0x00000207, 0x00000206, 0x00040008, 0x00000001, 0x000000CC, 0x00000000, 0x0004003D, 
0x00000030, 0x00000209, 0x0000003B, 0x0007004F, 0x00000030, 0x0000020A, 0x00000209, 0x00000209, 0x00000000, 0x00000000, 0x0003003E, 0x00000208, 
0x0000020A, 0x00050039, 0x00000008, 0x0000020B, 0x00000034, 0x00000208, 0x00050085, 0x00000008, 0x0000020C, 0x0000020B, 0x000001F2, 0x00050083, 
0x00000008, 0x0000020D, 0x0000020C, 0x0000016A, 0x0004003D, 0x00000008, 0x0000020E, 0x000001F5, 0x00050085, 0x00000008, 0x0000020F, 0x0000020D, 
0x0000020E, 0x00060041, 0x00000038, 0x00000210, 0x000001EC, 0x00000069, 0x000000D6, 0x0004003D, 0x00000008, 0x00000211, 0x00000210, 0x00050081, 
0x00000008, 0x00000212, 0x00000211, 0x0000020F, 0x00060041, 0x00000038, 0x00000213, 0x000001EC, 0x00000069, 0x000000D6, 0x0003003E, 0x00000213, 
0x00000212, 0x00040008, 0x00000001, 0x000000CD, 0x00000000, 0x00050041, 0x0000003F, 0x00000214, 0x000001EC, 0x00000069, 0x0004003D, 0x00000009, 
0x00000215, 0x00000214, 0x0006000C, 0x00000009, 0x00000216, 0x00000002, 0x00000045, 0x00000215, 0x00050041, 0x0000003F, 0x00000217, 0x000001EC, 
0x00000069, 0x0003003E, 0x00000217, 0x00000216, 0x00040008, 0x00000001, 0x000000CE, 0x00000000, 0x0003003E, 0x00000218, 0x00000219, 0x00040008, 
0x00000001, 0x000000D0, 0x00000000, 0x0004003D, 0x00000030, 0x0000021A, 0x0000003B, 0x00050050, 0x00000030, 0x0000021B, 0x0000016A, 0x0000016A, 
0x00050081, 0x00000030, 0x0000021C, 0x0000021A, 0x0000021B, 0x0003003E, 0x0000003B, 0x0000021C, 0x00040008, 0x00000001, 0x000000D1, 0x00000000, 
0x0004003D, 0x00000008, 0x0000021F, 0x0000003C, 0x00050085, 0x00000008, 0x00000220, 0x0000021E, 0x0000021F, 0x0004006E, 0x00000065, 0x00000221, 
0x00000220, 0x0003003E, 0x0000021D, 0x00000221, 0x00040008, 0x00000001, 0x000000D3, 0x00000000, 0x0003003E, 0x00000222, 0x00000098, 0x000200F9, 
0x00000223, 0x000200F8, 0x00000223, 0x000400F6, 0x00000225, 0x00000226, 0x00000000, 0x000200F9, 0x00000227, 0x000200F8, 0x00000227, 0x0004003D, 
0x00000065, 0x00000228, 0x00000222, 0x000500B1, 0x00000007, 0x0000022A, 0x00000228, 0x00000229, 0x000400FA, 0x0000022A, 0x00000224, 0x00000225, 
0x000200F8, 0x00000224, 0x00040008, 0x00000001, 0x000000D5, 0x00000000, 0x0004003D, 0x00000020, 0x00000233, 0x000001EC, 0x0003003E, 0x00000232, 
0x00000233, 0x0003003E, 0x00000234, 0x00000231, 0x00060039, 0x0000000B, 0x00000235, 0x00000027, 0x00000232, 0x00000234, 0x0003003E, 0x0000022B, 
0x00000235, 0x00040008, 0x00000001, 0x000000D7, 0x00000000, 0x0004003D, 0x00000020, 0x0000023B, 0x000001EC, 0x0003003E, 0x0000023A, 0x0000023B, 
0x0003003E, 0x0000023C, 0x00000239, 0x00060039, 0x0000000B, 0x0000023D, 0x0000002E, 0x0000023A, 0x0000023C, 0x0003003E, 0x00000236, 0x0000023D, 
0x00040008, 0x00000001, 0x000000D9, 0x00000000, 0x00050041, 0x00000047, 0x00000240, 0x00000236, 0x00000145, 0x0003003E, 0x00000240, 0x0000023F, 
0x00040008, 0x00000001, 0x000000DA, 0x00000000, 0x0004003D, 0x00000020, 0x00000247, 0x000001EC, 0x0003003E, 0x00000246, 0x00000247, 0x0003003E, 
0x00000248, 0x00000245, 0x00060039, 0x0000000B, 0x00000249, 0x0000002E, 0x00000246, 0x00000248, 0x0003003E, 0x00000241, 0x00000249, 0x00040008, 
0x00000001, 0x000000DC, 0x00000000, 0x00050041, 0x00000047, 0x0000024B, 0x00000241, 0x00000145, 0x0003003E, 0x0000024B, 0x0000024A, 0x00040008, 
0x00000001, 0x000000DD, 0x00000000, 0x00050041, 0x00000038, 0x0000024C, 0x00000241, 0x0000012D, 0x0003003E, 0x0000024C, 0x00000174, 0x00040008, 
0x00000001, 0x000000DE, 0x00000000, 0x0004003D, 0x00000020, 0x00000251, 0x000001EC, 0x0003003E, 0x00000250, 0x00000251, 0x0003003E, 0x00000252, 
0x0000024F, 0x00060039, 0x0000000B, 0x00000253, 0x0000002E, 0x00000250, 0x00000252, 0x0003003E, 0x0000024D, 0x00000253, 0x00040008, 0x00000001, 
0x000000E0, 0x00000000, 0x0004003D, 0x00000008, 0x00000255, 0x0000016F, 0x00050085, 0x00000008, 0x00000256, 0x00000255, 0x0000023E, 0x0006000C, 
0x00000008, 0x00000257, 0x00000002, 0x0000000D, 0x00000256, 0x00050085, 0x00000008, 0x00000259, 0x00000257, 0x00000258, 0x00070050, 0x0000000A, 
0x0000025A, 0x00000254, 0x00000147, 0x0000023E, 0x00000259, 0x00050041, 0x00000047, 0x0000025B, 0x0000024D, 0x00000145, 0x0003003E, 0x0000025B, 
0x0000025A, 0x00040008, 0x00000001, 0x000000E1, 0x00000000, 0x00050041, 0x00000038, 0x0000025C, 0x0000024D, 0x0000012D, 0x0003003E, 0x0000025C, 
0x000000A7, 0x00040008, 0x00000001, 0x000000E2, 0x00000000, 0x0004003D, 0x00000020, 0x00000263, 0x000001EC, 0x0003003E, 0x00000262, 0x00000263, 
0x0003003E, 0x00000264, 0x00000261, 0x00060039, 0x0000000B, 0x00000265, 0x0000002E, 0x00000262, 0x00000264, 0x0003003E, 0x0000025D, 0x00000265, 
0x00040008, 0x00000001, 0x000000E4, 0x00000000, 0x0004003D, 0x00000008, 0x00000266, 0x0000016F, 0x00050085, 0x00000008, 0x00000268, 0x00000266, 
0x00000267, 0x0006000C, 0x00000008, 0x00000269, 0x00000002, 0x0000000D, 0x00000268, 0x00050085, 0x00000008, 0x0000026A, 0x00000269, 0x00000258, 
0x00070050, 0x0000000A, 0x0000026B, 0x0000016A, 0x00000056, 0x00000176, 0x0000026A, 0x00050041, 0x00000047, 0x0000026C, 0x0000025D, 0x00000145, 
0x0003003E, 0x0000026C, 0x0000026B, 0x00040008, 0x00000001, 0x000000E5, 0x00000000, 0x00050041, 0x00000038, 0x0000026D, 0x0000025D, 0x0000012D, 
0x0003003E, 0x0000026D, 0x000000A7, 0x00040008, 0x00000001, 0x000000E6, 0x00000000, 0x0004003D, 0x0000000B, 0x00000270, 0x0000022B, 0x0003003E, 
0x0000026F, 0x00000270, 0x0004003D, 0x0000000B, 0x00000272, 0x00000236, 0x0003003E, 0x00000271, 0x00000272, 0x0004003D, 0x0000000B, 0x00000274, 
0x00000241, 0x0003003E, 0x00000273, 0x00000274, 0x0004003D, 0x0000000B, 0x00000276, 0x0000024D, 0x0003003E, 0x00000275, 0x00000276, 0x0004003D, 
0x0000000B, 0x00000278, 0x0000025D, 0x0003003E, 0x00000277, 0x00000278, 0x00090039, 0x0000000B, 0x00000279, 0x0000001E, 0x0000026F, 0x00000271, 
0x00000273, 0x00000275, 0x00000277, 0x0003003E, 0x0000026E, 0x00000279, 0x00040008, 0x00000001, 0x000000E8, 0x00000000, 0x00050041, 0x00000129, 
0x0000027A, 0x0000026E, 0x00000098, 0x0004003D, 0x00000007, 0x0000027B, 0x0000027A, 0x000300F7, 0x0000027D, 0x00000000, 0x000400FA, 0x0000027B, 
0x0000027C, 0x00000320, 0x000200F8, 0x0000027C, 0x00040008, 0x00000001, 0x000000EA, 0x00000000, 0x00050041, 0x00000047, 0x0000027E, 0x0000026E, 
0x00000145, 0x0004003D, 0x0000000A, 0x0000027F, 0x0000027E, 0x0004003D, 0x0000000A, 0x00000280, 0x00000218, 0x00050085, 0x0000000A, 0x00000281, 
0x00000280, 0x0000027F, 0x0003003E, 0x00000218, 0x00000281, 0x00040008, 0x00000001, 0x000000EB, 0x00000000, 0x00060041, 0x00000038, 0x00000283, 
0x0000026E, 0x00000145, 0x00000282, 0x0004003D, 0x00000008, 0x00000284, 0x00000283, 0x000500BA, 0x00000007, 0x00000285, 0x00000284, 0x000000A7, 
0x000300F7, 0x00000287, 0x00000000, 0x000400FA, 0x00000285, 0x00000286, 0x00000287, 0x000200F8, 0x00000286, 0x00040008, 0x00000001, 0x000000ED, 
0x00000000, 0x00050041, 0x00000047, 0x00000288, 0x0000026E, 0x00000145, 0x0004003D, 0x0000000A, 0x00000289, 0x00000288, 0x0004003D, 0x0000000A, 
0x0000028A, 0x00000218, 0x00050085, 0x0000000A, 0x0000028B, 0x00000289, 0x0000028A, 0x00060041, 0x00000038, 0x0000028C, 0x0000026E, 0x00000145, 
0x00000282, 0x0004003D, 0x00000008, 0x0000028D, 0x0000028C, 0x0005008E, 0x0000000A, 0x0000028E, 0x0000028B, 0x0000028D, 0x0004003D, 0x0000000A, 
0x0000028F, 0x000001D6, 0x00050081, 0x0000000A, 0x00000290, 0x0000028F, 0x0000028E, 0x0003003E, 0x000001D6, 0x00000290, 0x000200F9, 0x00000287, 
0x000200F8, 0x00000287, 0x00040008, 0x00000001, 0x000000F1, 0x00000000, 0x00050041, 0x0000003F, 0x00000291, 0x000001EC, 0x00000069, 0x0004003D, 
0x00000009, 0x00000292, 0x00000291, 0x00050041, 0x00000038, 0x00000293, 0x0000026E, 0x00000069, 0x0004003D, 0x00000008, 0x00000294, 0x00000293, 
0x0005008E, 0x00000009, 0x00000295, 0x00000292, 0x00000294, 0x00050041, 0x0000003F, 0x00000296, 0x000001EC, 0x00000098, 0x0004003D, 0x00000009, 
0x00000297, 0x00000296, 0x00050081, 0x00000009, 0x00000298, 0x00000297, 0x00000295, 0x00050041, 0x0000003F, 0x00000299, 0x000001EC, 0x00000098, 
0x0003003E, 0x00000299, 0x00000298, 0x00040008, 0x00000001, 0x000000F2, 0x00000000, 0x00050041, 0x0000003F, 0x0000029A, 0x0000026E, 0x0000013E, 
0x0004003D, 0x00000009, 0x0000029B, 0x0000029A, 0x0005008E, 0x00000009, 0x0000029C, 0x0000029B, 0x00000136, 0x00050041, 0x0000003F, 0x0000029D, 
0x000001EC, 0x00000098, 0x0004003D, 0x00000009, 0x0000029E, 0x0000029D, 0x00050081, 0x00000009, 0x0000029F, 0x0000029E, 0x0000029C, 0x00050041, 
0x0000003F, 0x000002A0, 0x000001EC, 0x00000098, 0x0003003E, 0x000002A0, 0x0000029F, 0x00040008, 0x00000001, 0x000000F3, 0x00000000, 0x00050041, 
0x0000003F, 0x000002A2, 0x000001EC, 0x00000098, 0x0004003D, 0x00000009, 0x000002A3, 0x000002A2, 0x0007004F, 0x00000030, 0x000002A4, 0x000002A3, 
0x000002A3, 0x00000000, 0x00000001, 0x0004003D, 0x00000030, 0x000002A5, 0x0000003B, 0x00050081, 0x00000030, 0x000002A6, 0x000002A4, 0x000002A5, 
0x0003003E, 0x000002A7, 0x000002A6, 0x00050039, 0x00000008, 0x000002A8, 0x00000034, 0x000002A7, 0x00050041, 0x0000003F, 0x000002A9, 0x000001EC, 
0x00000098, 0x0004003D, 0x00000009, 0x000002AA, 0x000002A9, 0x0007004F, 0x00000030, 0x000002AB, 0x000002AA, 0x000002AA, 0x00000001, 0x00000002, 
0x0004003D, 0x00000030, 0x000002AC, 0x0000003B, 0x00050081, 0x00000030, 0x000002AD, 0x000002AB, 0x000002AC, 0x0003003E, 0x000002AE, 0x000002AD, 
0x00050039, 0x00000008, 0x000002AF, 0x00000034, 0x000002AE, 0x00050041, 0x0000003F, 0x000002B0, 0x000001EC, 0x00000098, 0x0004003D, 0x00000009, 
0x000002B1, 0x000002B0, 0x0007004F, 0x00000030, 0x000002B2, 0x000002B1, 0x000002B1, 0x00000002, 0x00000000, 0x0004003D, 0x00000030, 0x000002B3, 
0x0000003B, 0x00050081, 0x00000030, 0x000002B4, 0x000002B2, 0x000002B3, 0x0003003E, 0x000002B5, 0x000002B4, 0x00050039, 0x00000008, 0x000002B6, 
0x00000034, 0x000002B5, 0x00060050, 0x00000009, 0x000002B7, 0x000002A8, 0x000002AF, 0x000002B6, 0x0005008E, 0x00000009, 0x000002B8, 0x000002B7, 
0x000001F2, 0x00060050, 0x00000009, 0x000002B9, 0x0000016A, 0x0000016A, 0x0000016A, 0x00050083, 0x00000009, 0x000002BA, 0x000002B8, 0x000002B9, 
0x0003003E, 0x000002A1, 0x000002BA, 0x00040008, 0x00000001, 0x000000F5, 0x00000000, 0x0004003D, 0x0000000B, 0x000002BB, 0x0000026E, 0x0004003D, 
0x0000000B, 0x000002BC, 0x0000022B, 0x00050051, 0x00000007, 0x000002BD, 0x000002BB, 0x00000000, 0x00050051, 0x00000007, 0x000002BE, 0x000002BC, 
0x00000000, 0x000500A5, 0x00000007, 0x000002BF, 0x000002BD, 0x000002BE, 0x00050051, 0x00000008, 0x000002C0, 0x000002BB, 0x00000001, 0x00050051, 
0x00000008, 0x000002C1, 0x000002BC, 0x00000001, 0x000500B6, 0x00000007, 0x000002C2, 0x000002C0, 0x000002C1, 0x000500A6, 0x00000007, 0x000002C3, 
0x000002BF, 0x000002C2, 0x00050051, 0x00000009, 0x000002C4, 0x000002BB, 0x00000002, 0x00050051, 0x00000009, 0x000002C5, 0x000002BC, 0x00000002, 
0x000500B6, 0x000002C6, 0x000002C7, 0x000002C4, 0x000002C5, 0x0004009A, 0x00000007, 0x000002C8, 0x000002C7, 0x000500A6, 0x00000007, 0x000002C9, 
0x000002C3, 0x000002C8, 0x00050051, 0x0000000A, 0x000002CA, 0x000002BB, 0x00000003, 0x00050051, 0x0000000A, 0x000002CB, 0x000002BC, 0x00000003, 
0x000500B6, 0x0000014A, 0x000002CC, 0x000002CA, 0x000002CB, 0x0004009A, 0x00000007, 0x000002CD, 0x000002CC, 0x000500A6, 0x00000007, 0x000002CE, 
0x000002C9, 0x000002CD, 0x00050051, 0x00000008, 0x000002CF, 0x000002BB, 0x00000004, 0x00050051, 0x00000008, 0x000002D0, 0x000002BC, 0x00000004, 
0x000500B6, 0x00000007, 0x000002D1, 0x000002CF, 0x000002D0, 0x000500A6, 0x00000007, 0x000002D2, 0x000002CE, 0x000002D1, 0x0004003D, 0x0000000B, 
0x000002D3, 0x0000026E, 0x0004003D, 0x0000000B, 0x000002D4, 0x00000241, 0x00050051, 0x00000007, 0x000002D5, 0x000002D3, 0x00000000, 0x00050051, 
0x00000007, 0x000002D6, 0x000002D4, 0x00000000, 0x000500A5, 0x00000007, 0x000002D7, 0x000002D5, 0x000002D6, 0x00050051, 0x00000008, 0x000002D8, 
0x000002D3, 0x00000001, 0x00050051, 0x00000008, 0x000002D9, 0x000002D4, 0x00000001, 0x000500B6, 0x00000007, 0x000002DA, 0x000002D8, 0x000002D9, 
0x000500A6, 0x00000007, 0x000002DB, 0x000002D7, 0x000002DA, 0x00050051, 0x00000009, 0x000002DC, 0x000002D3, 0x00000002, 0x00050051, 0x00000009, 
0x000002DD, 0x000002D4, 0x00000002, 0x000500B6, 0x000002C6, 0x000002DE, 0x000002DC, 0x000002DD, 0x0004009A, 0x00000007, 0x000002DF, 0x000002DE, 
0x000500A6, 0x00000007, 0x000002E0, 0x000002DB, 0x000002DF, 0x00050051, 0x0000000A, 0x000002E1, 0x000002D3, 0x00000003, 0x00050051, 0x0000000A, 
0x000002E2, 0x000002D4, 0x00000003, 0x000500B6, 0x0000014A, 0x000002E3, 0x000002E1, 0x000002E2, 0x0004009A, 0x00000007, 0x000002E4, 0x000002E3, 
0x000500A6, 0x00000007, 0x000002E5, 0x000002E0, 0x000002E4, 0x00050051, 0x00000008, 0x000002E6, 0x000002D3, 0x00000004, 0x00050051, 0x00000008, 
0x000002E7, 0x000002D4, 0x00000004, 0x000500B6, 0x00000007, 0x000002E8, 0x000002E6, 0x000002E7, 0x000500A6, 0x00000007, 0x000002E9, 0x000002E5, 
0x000002E8, 0x000500A7, 0x00000007, 0x000002EA, 0x000002D2, 0x000002E9, 0x000300F7, 0x000002EC, 0x00000000, 0x000400FA, 0x000002EA, 0x000002EB, 
0x00000310, 0x000200F8, 0x000002EB, 0x00040008, 0x00000001, 0x000000F7, 0x00000000, 0x00050041, 0x0000003F, 0x000002EE, 0x000001EC, 0x00000069, 
0x0004003D, 0x00000009, 0x000002EF, 0x000002EE, 0x00050041, 0x0000003F, 0x000002F0, 0x0000026E, 0x0000013E, 0x0004003D, 0x00000009, 0x000002F1, 
0x000002F0, 0x0007000C, 0x00000009, 0x000002F2, 0x00000002, 0x00000047, 0x000002EF, 0x000002F1, 0x0003003E, 0x000002ED, 0x000002F2, 0x00040008, 
0x00000001, 0x000000F9, 0x00000000, 0x00050041, 0x0000003F, 0x000002F4, 0x0000026E, 0x0000013E, 0x0004003D, 0x00000009, 0x000002F5, 0x000002F4, 
0x0004003D, 0x00000009, 0x000002F6, 0x000002A1, 0x00050081, 0x00000009, 0x000002F7, 0x000002F5, 0x000002F6, 0x0006000C, 0x00000009, 0x000002F8, 
0x00000002, 0x00000045, 0x000002F7, 0x0003003E, 0x000002F3, 0x000002F8, 0x00040008, 0x00000001, 0x000000FB, 0x00000000, 0x00050041, 0x0000003F, 
0x000002FA, 0x0000026E, 0x0000013E, 0x0004003D, 0x00000009, 0x000002FB, 0x000002FA, 0x00050041, 0x0000003F, 0x000002FC, 0x000001EC, 0x00000069, 
0x0004003D, 0x00000009, 0x000002FD, 0x000002FC, 0x00050094, 0x00000008, 0x000002FE, 0x000002FB, 0x000002FD, 0x0004007F, 0x00000008, 0x000002FF, 
0x000002FE, 0x0007000C, 0x00000008, 0x00000300, 0x00000002, 0x00000028, 0x000000A7, 0x000002FF, 0x0003003E, 0x000002F9, 0x00000300, 0x00040008, 
0x00000001, 0x000000FD, 0x00000000, 0x0004003D, 0x00000008, 0x00000301, 0x000002F9, 0x0007000C, 0x00000008, 0x00000302, 0x00000002, 0x0000001A, 
0x00000301, 0x00000056, 0x0004003D, 0x00000030, 0x00000304, 0x0000003B, 0x0003003E, 0x00000303, 0x00000304, 0x00050039, 0x00000008, 0x00000305, 
0x00000034, 0x00000303, 0x0007000C, 0x00000008, 0x00000306, 0x00000002, 0x00000030, 0x00000302, 0x00000305, 0x0003003E, 0x000002F9, 0x00000306, 
0x00040008, 0x00000001, 0x000000FE, 0x00000000, 0x0004003D, 0x00000009, 0x00000307, 0x000002ED, 0x0004003D, 0x00000008, 0x00000308, 0x000002F9, 
0x0005008E, 0x00000009, 0x00000309, 0x00000307, 0x00000308, 0x0004003D, 0x00000009, 0x0000030A, 0x000002F3, 0x0004003D, 0x00000008, 0x0000030B, 
0x000002F9, 0x00050083, 0x00000008, 0x0000030C, 0x0000016A, 0x0000030B, 0x0005008E, 0x00000009, 0x0000030D, 0x0000030A, 0x0000030C, 0x00050081, 
0x00000009, 0x0000030E, 0x00000309, 0x0000030D, 0x00050041, 0x0000003F, 0x0000030F, 0x000001EC, 0x00000069, 0x0003003E, 0x0000030F, 0x0000030E, 
0x000200F9, 0x000002EC, 0x000200F8, 0x00000310, 0x00040008, 0x00000001, 0x00000103, 0x00000000, 0x00050041, 0x0000003F, 0x00000311, 0x0000026E, 
0x0000013E, 0x0004003D, 0x00000009, 0x00000312, 0x00000311, 0x0004003D, 0x00000009, 0x00000313, 0x000002A1, 0x00050081, 0x00000009, 0x00000314, 
0x00000312, 0x00000313, 0x00050041, 0x0000003F, 0x00000315, 0x000001EC, 0x00000069, 0x0004003D, 0x00000009, 0x00000316, 0x00000315, 0x00050041, 
0x0000003F, 0x00000317, 0x0000026E, 0x0000013E, 0x0004003D, 0x00000009, 0x00000318, 0x00000317, 0x0007000C, 0x00000009, 0x00000319, 0x00000002, 
0x00000047, 0x00000316, 0x00000318, 0x00050041, 0x00000038, 0x0000031A, 0x0000026E, 0x0000012D, 0x0004003D, 0x00000008, 0x0000031B, 0x0000031A, 
0x00060050, 0x00000009, 0x0000031C, 0x0000031B, 0x0000031B, 0x0000031B, 0x0008000C, 0x00000009, 0x0000031D, 0x00000002, 0x0000002E, 0x00000314, 
0x00000319, 0x0000031C, 0x0006000C, 0x00000009, 0x0000031E, 0x00000002, 0x00000045, 0x0000031D, 0x00050041, 0x0000003F, 0x0000031F, 0x000001EC, 
0x00000069, 0x0003003E, 0x0000031F, 0x0000031E, 0x000200F9, 0x000002EC, 0x000200F8, 0x000002EC, 0x000200F9, 0x0000027D, 0x000200F8, 0x00000320, 
0x00040008, 0x00000001, 0x0000010B, 0x00000000, 0x000200F9, 0x00000225, 0x000200F8, 0x0000027D, 0x000200F9, 0x00000226, 0x000200F8, 0x00000226, 
0x00040008, 0x00000001, 0x000000D3, 0x00000000, 0x0004003D, 0x00000065, 0x00000322, 0x00000222, 0x00050080, 0x00000065, 0x00000323, 0x00000322, 
0x00000069, 0x0003003E, 0x00000222, 0x00000323, 0x000200F9, 0x00000223, 0x000200F8, 0x00000225, 0x000200F9, 0x000001E1, 0x000200F8, 0x000001E1, 
0x00040008, 0x00000001, 0x000000C1, 0x00000000, 0x0004003D, 0x00000065, 0x00000324, 0x000001DD, 0x00050080, 0x00000065, 0x00000325, 0x00000324, 
0x00000069, 0x0003003E, 0x000001DD, 0x00000325, 0x000200F9, 0x000001DE, 0x000200F8, 0x000001E0, 0x00040008, 0x00000001, 0x00000113, 0x00000000, 
0x0004003D, 0x0000000A, 0x00000326, 0x000001D6, 0x00070050, 0x0000000A, 0x00000327, 0x000001D9, 0x000001D9, 0x000001D9, 0x000001D9, 0x00050088, 
0x0000000A, 0x00000328, 0x00000326, 0x00000327, 0x000200FE, 0x00000328, 0x00010038, 0x00050036, 0x00000036, 0x00000045, 0x00000000, 0x00000040, 
0x00030037, 0x0000003F, 0x00000041, 0x00030037, 0x0000003F, 0x00000042, 0x00030037, 0x00000038, 0x00000043, 0x00030037, 0x00000031, 0x00000044, 
0x000200F8, 0x00000046, 0x0004003B, 0x00000031, 0x0000032B, 0x00000007, 0x0004003B, 0x00000037, 0x0000036A, 0x00000007, 0x0004003B, 0x00000021, 
0x0000036D, 0x00000007, 0x0004003B, 0x0000003F, 0x00000373, 0x00000007, 0x0004003B, 0x0000003F, 0x00000378, 0x00000007, 0x0004003B, 0x0000003F, 
0x0000037A, 0x00000007, 0x0004003B, 0x0000003F, 0x0000037F, 0x00000007, 0x00040008, 0x00000001, 0x00000119, 0x00000000, 0x00050041, 0x0000032D, 
0x0000032E, 0x000001BC, 0x0000032C, 0x0004003D, 0x0000000A, 0x0000032F, 0x0000032E, 0x0007004F, 0x00000030, 0x00000330, 0x0000032F, 0x0000032F, 
0x00000000, 0x00000001, 0x00050041, 0x00000331, 0x00000332, 0x000001BC, 0x00000098, 0x0004003D, 0x00000009, 0x00000333, 0x00000332, 0x0007004F, 
0x00000030, 0x00000334, 0x00000333, 0x00000333, 0x00000000, 0x00000001, 0x00050088, 0x00000030, 0x00000335, 0x00000330, 0x00000334, 0x0003003E, 
0x0000032B, 0x00000335, 0x00040008, 0x00000001, 0x0000011B, 0x00000000, 0x0004003D, 0x00000030, 0x00000336, 0x0000032B, 0x0005008E, 0x00000030, 
0x00000337, 0x00000336, 0x000001F2, 0x00050050, 0x00000030, 0x00000338, 0x00000056, 0x00000056, 0x00050083, 0x00000030, 0x00000339, 0x00000337, 
0x00000338, 0x0003003E, 0x0000032B, 0x00000339, 0x00040008, 0x00000001, 0x0000011C, 0x00000000, 0x0004003D, 0x00000009, 0x0000033A, 0x00000042, 
0x0004003D, 0x00000009, 0x0000033B, 0x00000041, 0x00050083, 0x00000009, 0x0000033C, 0x0000033B, 0x0000033A, 0x0003003E, 0x00000041, 0x0000033C, 
0x00040008, 0x00000001, 0x0000011D, 0x00000000, 0x00050041, 0x00000038, 0x0000033D, 0x0000032B, 0x000000BE, 0x0004003D, 0x00000008, 0x0000033E, 
0x0000033D, 0x00050085, 0x00000008, 0x0000033F, 0x0000033E, 0x00000056, 0x0006000C, 0x00000008, 0x00000340, 0x00000002, 0x0000000E, 0x0000033F, 
0x0004003D, 0x00000009, 0x00000341, 0x00000041, 0x0007004F, 0x00000030, 0x00000342, 0x00000341, 0x00000341, 0x00000000, 0x00000002, 0x0005008E, 
0x00000030, 0x00000343, 0x00000342, 0x00000340, 0x00050041, 0x00000038, 0x00000344, 0x0000032B, 0x000000BE, 0x0004003D, 0x00000008, 0x00000345, 
0x00000344, 0x00050085, 0x00000008, 0x00000346, 0x00000345, 0x00000056, 0x0006000C, 0x00000008, 0x00000347, 0x00000002, 0x0000000D, 0x00000346, 
0x00050041, 0x00000038, 0x00000348, 0x00000041, 0x000000D6, 0x0004003D, 0x00000008, 0x00000349, 0x00000348, 0x0004007F, 0x00000008, 0x0000034A, 
0x00000349, 0x00050041, 0x00000038, 0x0000034B, 0x00000041, 0x000000BE, 0x0004003D, 0x00000008, 0x0000034C, 0x0000034B, 0x00050050, 0x00000030, 
0x0000034D, 0x0000034A, 0x0000034C, 0x0005008E, 0x00000030, 0x0000034E, 0x0000034D, 0x00000347, 0x00050081, 0x00000030, 0x0000034F, 0x00000343, 
0x0000034E, 0x0004003D, 0x00000009, 0x00000350, 0x00000041, 0x0008004F, 0x00000009, 0x00000351, 0x00000350, 0x0000034F, 0x00000003, 0x00000001, 
0x00000004, 0x0003003E, 0x00000041, 0x00000351, 0x00040008, 0x00000001, 0x0000011E, 0x00000000, 0x00050041, 0x00000038, 0x00000352, 0x0000032B, 
0x000000CA, 0x0004003D, 0x00000008, 0x00000353, 0x00000352, 0x00050085, 0x00000008, 0x00000354, 0x00000353, 0x00000056, 0x0006000C, 0x00000008, 
0x00000355, 0x00000002, 0x0000000E, 0x00000354, 0x0004003D, 0x00000009, 0x00000356, 0x00000041, 0x0007004F, 0x00000030, 0x00000357, 0x00000356, 
0x00000356, 0x00000000, 0x00000001, 0x0005008E, 0x00000030, 0x00000358, 0x00000357, 0x00000355, 0x00050041, 0x00000038, 0x00000359, 0x0000032B, 
0x000000CA, 0x0004003D, 0x00000008, 0x0000035A, 0x00000359, 0x00050085, 0x00000008, 0x0000035B, 0x0000035A, 0x00000056, 0x0006000C, 0x00000008, 
0x0000035C, 0x00000002, 0x0000000D, 0x0000035B, 0x00050041, 0x00000038, 0x0000035D, 0x00000041, 0x000000CA, 0x0004003D, 0x00000008, 0x0000035E, 
0x0000035D, 0x0004007F, 0x00000008, 0x0000035F, 0x0000035E, 0x00050041, 0x00000038, 0x00000360, 0x00000041, 0x000000BE, 0x0004003D, 0x00000008, 
0x00000361, 0x00000360, 0x00050050, 0x00000030, 0x00000362, 0x0000035F, 0x00000361, 0x0005008E, 0x00000030, 0x00000363, 0x00000362, 0x0000035C, 
0x00050081, 0x00000030, 0x00000364, 0x00000358, 0x00000363, 0x0004003D, 0x00000009, 0x00000365, 0x00000041, 0x0008004F, 0x00000009, 0x00000366, 
0x00000365, 0x00000364, 0x00000003, 0x00000004, 0x00000002, 0x0003003E, 0x00000041, 0x00000366, 0x00040008, 0x00000001, 0x0000011F, 0x00000000, 
0x0004003D, 0x00000009, 0x00000367, 0x00000042, 0x0004003D, 0x00000009, 0x00000368, 0x00000041, 0x00050081, 0x00000009, 0x00000369, 0x00000368, 
0x00000367, 0x0003003E, 0x00000041, 0x00000369, 0x00040008, 0x00000001, 0x00000121, 0x00000000, 0x0004003D, 0x00000009, 0x0000036B, 0x00000041, 
0x00050041, 0x0000003F, 0x0000036C, 0x0000036A, 0x00000098, 0x0003003E, 0x0000036C, 0x0000036B, 0x00040008, 0x00000001, 0x00000123, 0x00000000, 
0x0004003D, 0x00000009, 0x0000036E, 0x00000041, 0x00050041, 0x0000003F, 0x0000036F, 0x0000036D, 0x00000098, 0x0003003E, 0x0000036F, 0x0000036E, 
0x00040008, 0x00000001, 0x00000124, 0x00000000, 0x0004003D, 0x00000008, 0x00000370, 0x00000043, 0x0004003D, 0x00000030, 0x00000371, 0x00000044, 
0x0005008E, 0x00000030, 0x00000372, 0x00000371, 0x00000370, 0x0003003E, 0x00000044, 0x00000372, 0x00040008, 0x00000001, 0x00000125, 0x00000000, 
0x0004003D, 0x00000009, 0x00000374, 0x00000042, 0x0004003D, 0x00000009, 0x00000375, 0x00000041, 0x00050083, 0x00000009, 0x00000376, 0x00000374, 
0x00000375, 0x0006000C, 0x00000009, 0x00000377, 0x00000002, 0x00000045, 0x00000376, 0x0003003E, 0x00000373, 0x00000377, 0x00040008, 0x00000001, 
0x00000127, 0x00000000, 0x0003003E, 0x00000378, 0x00000379, 0x00040008, 0x00000001, 0x00000129, 0x00000000, 0x0004003D, 0x00000009, 0x0000037B, 
0x00000373, 0x0004003D, 0x00000009, 0x0000037C, 0x00000378, 0x0007000C, 0x00000009, 0x0000037D, 0x00000002, 0x00000044, 0x0000037B, 0x0000037C, 
0x0006000C, 0x00000009, 0x0000037E, 0x00000002, 0x00000045, 0x0000037D, 0x0003003E, 0x0000037A, 0x0000037E, 0x00040008, 0x00000001, 0x0000012B, 
0x00000000, 0x0004003D, 0x00000009, 0x00000380, 0x0000037A, 0x0004003D, 0x00000009, 0x00000381, 0x00000373, 0x0007000C, 0x00000009, 0x00000382, 
0x00000002, 0x00000044, 0x00000380, 0x00000381, 0x0006000C, 0x00000009, 0x00000383, 0x00000002, 0x00000045, 0x00000382, 0x0003003E, 0x0000037F, 
0x00000383, 0x00040008, 0x00000001, 0x0000012D, 0x00000000, 0x00050041, 0x00000038, 0x00000384, 0x00000044, 0x000000BE, 0x0004003D, 0x00000008, 
0x00000385, 0x00000384, 0x0004003D, 0x00000009, 0x00000386, 0x0000037A, 0x0005008E, 0x00000009, 0x00000387, 0x00000386, 0x00000385, 0x00050041, 
0x00000038, 0x00000388, 0x00000044, 0x000000CA, 0x0004003D, 0x00000008, 0x00000389, 0x00000388, 0x0004003D, 0x00000009, 0x0000038A, 0x0000037F, 
0x0005008E, 0x00000009, 0x0000038B, 0x0000038A, 0x00000389, 0x00050081, 0x00000009, 0x0000038C, 0x00000387, 0x0000038B, 0x0004003D, 0x00000009, 
0x0000038D, 0x00000373, 0x0005008E, 0x00000009, 0x0000038E, 0x0000038D, 0x00000056, 0x00050081, 0x00000009, 0x0000038F, 0x0000038C, 0x0000038E, 
0x0006000C, 0x00000009, 0x00000390, 0x00000002, 0x00000045, 0x0000038F, 0x00050041, 0x0000003F, 0x00000391, 0x0000036D, 0x00000069, 0x0003003E, 
0x00000391, 0x00000390, 0x00040008, 0x00000001, 0x0000012E, 0x00000000, 0x0004003D, 0x00000020, 0x00000392, 0x0000036D, 0x00050041, 0x00000021, 
0x00000393, 0x0000036A, 0x00000069, 0x0003003E, 0x00000393, 0x00000392, 0x00040008, 0x00000001, 0x0000012F, 0x00000000, 0x0004003D, 0x00000008, 
0x00000394, 0x00000043, 0x00060041, 0x000001BD, 0x00000395, 0x000001BC, 0x00000098, 0x000000BE, 0x0004003D, 0x00000008, 0x00000396, 0x00000395, 
0x00050088, 0x00000008, 0x00000397, 0x00000394, 0x00000396, 0x0003003E, 0x000001F5, 0x00000397, 0x00040008, 0x00000001, 0x00000130, 0x00000000, 
0x0004003D, 0x00000008, 0x00000398, 0x000001F5, 0x0004003D, 0x00000030, 0x00000399, 0x00000044, 0x0006000C, 0x00000008, 0x0000039A, 0x00000002, 
0x00000042, 0x00000399, 0x00050085, 0x00000008, 0x0000039B, 0x0000039A, 0x00000136, 0x00050081, 0x00000008, 0x0000039C, 0x00000398, 0x0000039B, 
0x0003003E, 0x000001F5, 0x0000039C, 0x00040008, 0x00000001, 0x00000131, 0x00000000, 0x0004003D, 0x00000036, 0x0000039D, 0x0000036A, 0x000200FE, 
0x0000039D, 0x00010038, 0x00050036, 0x00000003, 0x0000004B, 0x00000000, 0x00000048, 0x00030037, 0x00000047, 0x00000049, 0x00030037, 0x00000031, 
0x0000004A, 0x000200F8, 0x0000004C, 0x0004003B, 0x00000031, 0x000003A2, 0x00000007, 0x0004003B, 0x00000047, 0x000003A8, 0x00000007, 0x0004003B, 
0x00000037, 0x000003BD, 0x00000007, 0x0004003B, 0x0000003F, 0x000003C0, 0x00000007, 0x0004003B, 0x0000003F, 0x000003C1, 0x00000007, 0x0004003B, 
0x00000038, 0x000003C2, 0x00000007, 0x0004003B, 0x00000031, 0x000003C3, 0x00000007, 0x0004003B, 0x00000038, 0x000003C6, 0x00000007, 0x0004003B, 
0x00000047, 0x000003D1, 0x00000007, 0x0004003B, 0x00000037, 0x000003DA, 0x00000007, 0x0004003B, 0x00000031, 0x000003DC, 0x00000007, 0x0004003B, 
0x00000038, 0x000003DD, 0x00000007, 0x00040008, 0x00000001, 0x00000137, 0x00000000, 0x00050041, 0x000001BD, 0x000003A0, 0x000001BC, 0x00000069, 
0x0004003D, 0x00000008, 0x000003A1, 0x000003A0, 0x0003003E, 0x0000016F, 0x000003A1, 0x00040008, 0x00000001, 0x00000138, 0x00000000, 0x0004003D, 
0x00000030, 0x000003A3, 0x0000004A, 0x00050041, 0x00000331, 0x000003A4, 0x000001BC, 0x00000098, 0x0004003D, 0x00000009, 0x000003A5, 0x000003A4, 
0x0007004F, 0x00000030, 0x000003A6, 0x000003A5, 0x000003A5, 0x00000000, 0x00000001, 0x00050088, 0x00000030, 0x000003A7, 0x000003A3, 0x000003A6, 
0x0003003E, 0x000003A2, 0x000003A7, 0x00040008, 0x00000001, 0x0000013A, 0x00000000, 0x0004003D, 0x000003AA, 0x000003AD, 0x000003AC, 0x0004003D, 
0x00000030, 0x000003AE, 0x000003A2, 0x00070058, 0x0000000A, 0x000003AF, 0x000003AD, 0x000003AE, 0x00000002, 0x000000A7, 0x0003003E, 0x000003A8, 
0x000003AF, 0x00040008, 0x00000001, 0x0000013C, 0x00000000, 0x0004003D, 0x00000030, 0x000003B0, 0x000003A2, 0x0005008E, 0x00000030, 0x000003B1, 
0x000003B0, 0x000001F2, 0x00050050, 0x00000030, 0x000003B2, 0x0000016A, 0x0000016A, 0x00050083, 0x00000030, 0x000003B3, 0x000003B1, 0x000003B2, 
0x0003003E, 0x000003A2, 0x000003B3, 0x00040008, 0x00000001, 0x0000013D, 0x00000000, 0x00060041, 0x000001BD, 0x000003B4, 0x000001BC, 0x00000098, 
0x000000BE, 0x0004003D, 0x00000008, 0x000003B5, 0x000003B4, 0x00060041, 0x000001BD, 0x000003B6, 0x000001BC, 0x00000098, 0x000000CA, 0x0004003D, 
0x00000008, 0x000003B7, 0x000003B6, 0x00050088, 0x00000008, 0x000003B8, 0x000003B5, 0x000003B7, 0x00050041, 0x00000038, 0x000003B9, 0x000003A2, 
0x000000CA, 0x0004003D, 0x00000008, 0x000003BA, 0x000003B9, 0x00050088, 0x00000008, 0x000003BB, 0x000003BA, 0x000003B8, 0x00050041, 0x00000038, 
0x000003BC, 0x000003A2, 0x000000CA, 0x0003003E, 0x000003BC, 0x000003BB, 0x00040008, 0x00000001, 0x0000013E, 0x00000000, 0x0003003E, 0x000003C0, 
0x000003BF, 0x0003003E, 0x000003C1, 0x00000244, 0x0003003E, 0x000003C2, 0x0000016A, 0x0004003D, 0x00000030, 0x000003C4, 0x000003A2, 0x0003003E, 
0x000003C3, 0x000003C4, 0x00080039, 0x00000036, 0x000003C5, 0x00000045, 0x000003C0, 0x000003C1, 0x000003C2, 0x000003C3, 0x0003003E, 0x000003BD, 
0x000003C5, 0x00040008, 0x00000001, 0x00000140, 0x00000000, 0x00050041, 0x00000038, 0x000003C7, 0x000003A8, 0x000000BE, 0x0004003D, 0x00000008, 
0x000003C8, 0x000003C7, 0x00050041, 0x00000038, 0x000003C9, 0x000003A8, 0x000000CA, 0x0004003D, 0x00000008, 0x000003CA, 0x000003C9, 0x00050041, 
0x00000038, 0x000003CB, 0x000003A8, 0x000000D6, 0x0004003D, 0x00000008, 0x000003CC, 0x000003CB, 0x0007000C, 0x00000008, 0x000003CD, 0x00000002, 
0x00000028, 0x000003CA, 0x000003CC, 0x0007000C, 0x00000008, 0x000003CE, 0x00000002, 0x00000028, 0x000003C8, 0x000003CD, 0x0003003E, 0x000003C6, 
0x000003CE, 0x00040008, 0x00000001, 0x00000142, 0x00000000, 0x0004003D, 0x00000008, 0x000003CF, 0x000003C6, 0x0007000C, 0x00000008, 0x000003D0, 
0x00000002, 0x0000001A, 0x000003CF, 0x000001C0, 0x0003003E, 0x000003C6, 0x000003D0, 0x00040008, 0x00000001, 0x00000143, 0x00000000, 0x0004003D, 
0x00000030, 0x000003D2, 0x000003A2, 0x00050041, 0x000001BD, 0x000003D3, 0x000001BC, 0x00000069, 0x0004003D, 0x00000008, 0x000003D4, 0x000003D3, 
0x00050050, 0x00000030, 0x000003D5, 0x000003D4, 0x000003D4, 0x00050081, 0x00000030, 0x000003D6, 0x000003D2, 0x000003D5, 0x0004003D, 0x00000008, 
0x000003D7, 0x000003C6, 0x00050083, 0x00000008, 0x000003D8, 0x0000016A, 0x000003D7, 0x0007000C, 0x00000008, 0x000003D9, 0x00000002, 0x00000028, 
0x00000254, 0x000003D8, 0x0004003D, 0x00000036, 0x000003DB, 0x000003BD, 0x0003003E, 0x000003DA, 0x000003DB, 0x0003003E, 0x000003DC, 0x000003D6, 
0x0003003E, 0x000003DD, 0x000003D9, 0x00070039, 0x0000000A, 0x000003DE, 0x0000003D, 0x000003DA, 0x000003DC, 0x000003DD, 0x0003003E, 0x000003D1, 
0x000003DE, 0x00040008, 0x00000001, 0x00000145, 0x00000000, 0x0004003D, 0x0000000A, 0x000003DF, 0x000003D1, 0x0004003D, 0x0000000A, 0x000003E0, 
0x000003A8, 0x00060041, 0x000001BD, 0x000003E1, 0x000001BC, 0x0000032C, 0x000000D6, 0x0004003D, 0x00000008, 0x000003E2, 0x000003E1, 0x000500BA, 
0x00000007, 0x000003E3, 0x000003E2, 0x00000056, 0x000400A8, 0x00000007, 0x000003E4, 0x000003E3, 0x000300F7, 0x000003E6, 0x00000000, 0x000400FA, 
0x000003E4, 0x000003E5, 0x000003E6, 0x000200F8, 0x000003E5, 0x00050041, 0x000003E7, 0x000003E8, 0x000001BC, 0x00000145, 0x0004003D, 0x00000065, 
0x000003E9, 0x000003E8, 0x000500AA, 0x00000007, 0x000003EA, 0x000003E9, 0x00000098, 0x000200F9, 0x000003E6, 0x000200F8, 0x000003E6, 0x000700F5, 
0x00000007, 0x000003EB, 0x000003E3, 0x0000004C, 0x000003EA, 0x000003E5, 0x000600A9, 0x00000008, 0x000003ED, 0x000003EB, 0x00000056, 0x000003EC, 
0x00070050, 0x0000000A, 0x000003EE, 0x000003ED, 0x000003ED, 0x000003ED, 0x000003ED, 0x0008000C, 0x0000000A, 0x000003EF, 0x00000002, 0x0000002E, 
0x000003DF, 0x000003E0, 0x000003EE, 0x0003003E, 0x00000049, 0x000003EF, 0x000100FD, 0x00010038 });

#ifdef GRAPHICS_API_SOFT
	descr.Compute().AddInvocable( EShaderLangFormat::Software_100 | EShaderLangFormat::CPP_Invocable, &SWShaderLang::sw_glowballs_comp );
#endif


};
}	// Pipelines
