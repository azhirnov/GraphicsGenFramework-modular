// This is generated file
// Origin file: 'C:\Projects\graphxgenengine\Projects\ShaderEditorTools\VoronnoiRecursion.cpp'
// Created at: 2018/02/02 - 00:32:01

#include "all_pipelines.h"

namespace Pipelines
{

void Create_voronnoirecursion (PipelineTemplateDescriptor& descr)
{
	descr = PipelineTemplateDescriptor();
	// RenderState
	descr.renderState = RenderState();
	// InputAssemblyState
	descr.renderState.inputAssembly.topology         = EPrimitive::TriangleStrip;
	descr.renderState.inputAssembly.primitiveRestart = false;

	descr.dynamicStates = EPipelineDynamicState::bits() | EPipelineDynamicState::Viewport | EPipelineDynamicState::Scissor;
	descr.supportedShaders = EShader::bits() | EShader::Vertex | EShader::Fragment;
	descr.supportedPrimitives = EPrimitive::bits() | EPrimitive::TriangleStrip;

	descr.layout = PipelineLayoutDescriptor::Builder()
			.AddUniformBuffer( "", 288_b, 0, 0, EShader::bits() | EShader::Fragment )
			.Finish();

	descr.Vertex().StringGLSL( 
R"#(#version 450 core


#define SH_VERTEX           (1<<0)
#define SH_TESS_CONTROL     (1<<1)
#define SH_TESS_EVALUATION  (1<<2)
#define SH_GEOMETRY         (1<<3)
#define SH_FRAGMENT         (1<<4)
#define SH_COMPUTE          (1<<5)

#ifdef GL_ARB_gpu_shader_int64
#extension GL_ARB_gpu_shader_int64 : require
#define ARB_gpu_shader_int64_enabled  1
#endif

// for vulkan compatibility
#ifdef GL_ARB_separate_shader_objects
#extension GL_ARB_separate_shader_objects : enable
#define ARB_separate_shader_objects_enabled  1
#endif

#define bool2		bvec2
#define bool3		bvec3
#define bool4		bvec4

#define int2		ivec2
#define int3		ivec3
#define int4		ivec4

#define uint2		uvec2
#define uint3		uvec3
#define uint4		uvec4

#ifdef ARB_gpu_shader_int64_enabled
# define ilong		int64_t
# define ilong2		i64vec2
# define ilong3		i64vec3
# define ilong4		i64vec4
# define ulong		uint64_t
# define ulong2		u64vec2
# define ulong3		u64vec3
# define ulong4		u64vec4
#endif // ARB_gpu_shader_int64_enabled

#define float2		vec2
#define float3		vec3
#define float4		vec4
			
#define float2x2	mat2x2
#define float2x3	mat2x3
#define float2x4	mat2x4
#define float3x2	mat3x2
#define float3x3	mat3x3
#define float3x4	mat3x4
#define float4x2	mat4x2
#define float4x3	mat4x3
#define float4x4	mat4x4

#define double2		dvec2
#define double3		dvec3
#define double4		dvec4
			
#define double2x2	dmat2x2
#define double2x3	dmat2x3
#define double2x4	dmat2x4
#define double3x2	dmat3x2
#define double3x3	dmat3x3
#define double3x4	dmat3x4
#define double4x2	dmat4x2
#define double4x3	dmat4x3
#define double4x4	dmat4x4

#ifdef VULKAN
#define PUSH_CONSTANT( _name_ )	layout (std140, push_constant) uniform _name_
#else
#define PUSH_CONSTANT( _name_ )	layout (std140) uniform pushConst_##_name_
#endif
		
#define SHADER	SH_VERTEX
#ifdef VULKAN
# define gl_VertexID    gl_VertexIndex
# define gl_InstanceID  gl_InstanceIndex
#else
# define gl_VertexIndex    gl_VertexID
# define gl_InstanceIndex  gl_InstanceID
#endif
out gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[];
	float gl_CullDistance[];
};





const vec2 g_Positions[4] = { vec2(-1.0, 1.0), vec2(-1.0), vec2(1.0), vec2(1.0, -1.0) };

//---------------------------------


//---------------------------------
void main ()
{
	gl_Position=vec4( g_Positions[gl_VertexID], float(0.0), float(1.0) );
}



)#"_str );
	descr.Vertex().ArraySPIRV({ 
0x07230203, 0x00010000, 0x00080002, 0x00000029, 0x00000000, 0x00020011, 0x00000001, 0x0006000B, 0x00000002, 0x4C534C47, 0x6474732E, 0x3035342E, 
0x00000000, 0x0003000E, 0x00000000, 0x00000001, 0x0007000F, 0x00000000, 0x00000005, 0x6E69616D, 0x00000000, 0x0000000E, 0x0000001C, 0x00030007, 
0x00000001, 0x00000000, 0x002E0003, 0x00000002, 0x000001C2, 0x00000001, 0x4F202F2F, 0x646F4D70, 0x50656C75, 0x65636F72, 0x64657373, 0x746E6520, 
0x702D7972, 0x746E696F, 0x69616D20, 0x2F2F0A6E, 0x4D704F20, 0x6C75646F, 0x6F725065, 0x73736563, 0x63206465, 0x6E65696C, 0x75762074, 0x6E616B6C, 
0x0A303031, 0x4F202F2F, 0x646F4D70, 0x50656C75, 0x65636F72, 0x64657373, 0x72617420, 0x2D746567, 0x20766E65, 0x6B6C7576, 0x2E316E61, 0x2F2F0A30, 
0x4D704F20, 0x6C75646F, 0x6F725065, 0x73736563, 0x65206465, 0x7972746E, 0x696F702D, 0x6D20746E, 0x0A6E6961, 0x6E696C23, 0x0A312065, 0x00000000, 
0x00070004, 0x415F4C47, 0x675F4252, 0x735F7570, 0x65646168, 0x6E695F72, 0x00343674, 0x00090004, 0x415F4C47, 0x735F4252, 0x72617065, 0x5F657461, 
0x64616873, 0x6F5F7265, 0x63656A62, 0x00007374, 0x00040005, 0x00000005, 0x6E69616D, 0x00000000, 0x00060005, 0x0000000C, 0x505F6C67, 0x65567265, 
0x78657472, 0x00000000, 0x00060006, 0x0000000C, 0x00000000, 0x505F6C67, 0x7469736F, 0x006E6F69, 0x00070006, 0x0000000C, 0x00000001, 0x505F6C67, 
0x746E696F, 0x657A6953, 0x00000000, 0x00070006, 0x0000000C, 0x00000002, 0x435F6C67, 0x4470696C, 0x61747369, 0x0065636E, 0x00070006, 0x0000000C, 
0x00000003, 0x435F6C67, 0x446C6C75, 0x61747369, 0x0065636E, 0x00030005, 0x0000000E, 0x00000000, 0x00060005, 0x0000001C, 0x565F6C67, 0x65747265, 
0x646E4978, 0x00007865, 0x00050005, 0x0000001F, 0x65646E69, 0x6C626178, 0x00000065, 0x00050048, 0x0000000C, 0x00000000, 0x0000000B, 0x00000000, 
0x00050048, 0x0000000C, 0x00000001, 0x0000000B, 0x00000001, 0x00050048, 0x0000000C, 0x00000002, 0x0000000B, 0x00000003, 0x00050048, 0x0000000C, 
0x00000003, 0x0000000B, 0x00000004, 0x00030047, 0x0000000C, 0x00000002, 0x00040047, 0x0000001C, 0x0000000B, 0x0000002A, 0x00020013, 0x00000003, 
0x00030021, 0x00000004, 0x00000003, 0x00030016, 0x00000007, 0x00000020, 0x00040017, 0x00000008, 0x00000007, 0x00000004, 0x00040015, 0x00000009, 
0x00000020, 0x00000000, 0x0004002B, 0x00000009, 0x0000000A, 0x00000001, 0x0004001C, 0x0000000B, 0x00000007, 0x0000000A, 0x0006001E, 0x0000000C, 
0x00000008, 0x00000007, 0x0000000B, 0x0000000B, 0x00040020, 0x0000000D, 0x00000003, 0x0000000C, 0x0004003B, 0x0000000D, 0x0000000E, 0x00000003, 
0x00040015, 0x0000000F, 0x00000020, 0x00000001, 0x0004002B, 0x0000000F, 0x00000010, 0x00000000, 0x00040017, 0x00000011, 0x00000007, 0x00000002, 
0x0004002B, 0x00000009, 0x00000012, 0x00000004, 0x0004001C, 0x00000013, 0x00000011, 0x00000012, 0x0004002B, 0x00000007, 0x00000014, 0xBF800000, 
0x0004002B, 0x00000007, 0x00000015, 0x3F800000, 0x0005002C, 0x00000011, 0x00000016, 0x00000014, 0x00000015, 0x0005002C, 0x00000011, 0x00000017, 
0x00000014, 0x00000014, 0x0005002C, 0x00000011, 0x00000018, 0x00000015, 0x00000015, 0x0005002C, 0x00000011, 0x00000019, 0x00000015, 0x00000014, 
0x0007002C, 0x00000013, 0x0000001A, 0x00000016, 0x00000017, 0x00000018, 0x00000019, 0x00040020, 0x0000001B, 0x00000001, 0x0000000F, 0x0004003B, 
0x0000001B, 0x0000001C, 0x00000001, 0x00040020, 0x0000001E, 0x00000007, 0x00000013, 0x00040020, 0x00000020, 0x00000007, 0x00000011, 0x0004002B, 
0x00000007, 0x00000023, 0x00000000, 0x00040020, 0x00000027, 0x00000003, 0x00000008, 0x00050036, 0x00000003, 0x00000005, 0x00000000, 0x00000004, 
0x000200F8, 0x00000006, 0x0004003B, 0x0000001E, 0x0000001F, 0x00000007, 0x00040008, 0x00000001, 0x0000006A, 0x00000000, 0x0004003D, 0x0000000F, 
0x0000001D, 0x0000001C, 0x0003003E, 0x0000001F, 0x0000001A, 0x00050041, 0x00000020, 0x00000021, 0x0000001F, 0x0000001D, 0x0004003D, 0x00000011, 
0x00000022, 0x00000021, 0x00050051, 0x00000007, 0x00000024, 0x00000022, 0x00000000, 0x00050051, 0x00000007, 0x00000025, 0x00000022, 0x00000001, 
0x00070050, 0x00000008, 0x00000026, 0x00000024, 0x00000025, 0x00000023, 0x00000015, 0x00050041, 0x00000027, 0x00000028, 0x0000000E, 0x00000010, 
0x0003003E, 0x00000028, 0x00000026, 0x000100FD, 0x00010038 });
	descr.Vertex().StringSpirvAsm( 
R"#(// Module Version 10000
// Generated by (magic number): 80002
// Id's are bound by 41

                              Capability Shader
               2:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 5  "main" 14 28
               1:             String  ""
                              Source GLSL 450 1  "// OpModuleProcessed entry-point main
// OpModuleProcessed client vulkan100
// OpModuleProcessed target-env vulkan1.0
// OpModuleProcessed entry-point main
#line 1
"
                              SourceExtension  "GL_ARB_gpu_shader_int64"
                              SourceExtension  "GL_ARB_separate_shader_objects"
                              Name 5  "main"
                              Name 12  "gl_PerVertex"
                              MemberName 12(gl_PerVertex) 0  "gl_Position"
                              MemberName 12(gl_PerVertex) 1  "gl_PointSize"
                              MemberName 12(gl_PerVertex) 2  "gl_ClipDistance"
                              MemberName 12(gl_PerVertex) 3  "gl_CullDistance"
                              Name 14  ""
                              Name 28  "gl_VertexIndex"
                              Name 31  "indexable"
                              MemberDecorate 12(gl_PerVertex) 0 BuiltIn Position
                              MemberDecorate 12(gl_PerVertex) 1 BuiltIn PointSize
                              MemberDecorate 12(gl_PerVertex) 2 BuiltIn ClipDistance
                              MemberDecorate 12(gl_PerVertex) 3 BuiltIn CullDistance
                              Decorate 12(gl_PerVertex) Block
                              Decorate 28(gl_VertexIndex) BuiltIn VertexIndex
               3:             TypeVoid
               4:             TypeFunction 3
               7:             TypeFloat 32
               8:             TypeVector 7(float) 4
               9:             TypeInt 32 0
              10:      9(int) Constant 1
              11:             TypeArray 7(float) 10
12(gl_PerVertex):             TypeStruct 8(fvec4) 7(float) 11 11
              13:             TypePointer Output 12(gl_PerVertex)
              14:     13(ptr) Variable Output
              15:             TypeInt 32 1
              16:     15(int) Constant 0
              17:             TypeVector 7(float) 2
              18:      9(int) Constant 4
              19:             TypeArray 17(fvec2) 18
              20:    7(float) Constant 3212836864
              21:    7(float) Constant 1065353216
              22:   17(fvec2) ConstantComposite 20 21
              23:   17(fvec2) ConstantComposite 20 20
              24:   17(fvec2) ConstantComposite 21 21
              25:   17(fvec2) ConstantComposite 21 20
              26:          19 ConstantComposite 22 23 24 25
              27:             TypePointer Input 15(int)
28(gl_VertexIndex):     27(ptr) Variable Input
              30:             TypePointer Function 19
              32:             TypePointer Function 17(fvec2)
              35:    7(float) Constant 0
              39:             TypePointer Output 8(fvec4)
         5(main):           3 Function None 4
               6:             Label
   31(indexable):     30(ptr) Variable Function
                              Line 1 106 0
              29:     15(int) Load 28(gl_VertexIndex)
                              Store 31(indexable) 26
              33:     32(ptr) AccessChain 31(indexable) 29
              34:   17(fvec2) Load 33
              36:    7(float) CompositeExtract 34 0
              37:    7(float) CompositeExtract 34 1
              38:    8(fvec4) CompositeConstruct 36 37 35 21
              40:     39(ptr) AccessChain 14 16
                              Store 40 38
                              Return
                              FunctionEnd
)#"_str );

	descr.fragOutput = FragmentOutputState()
			.Add( "out_Color0", EFragOutput::Float4, 0 );

	descr.Fragment().StringGLSL( 
R"#(#version 450 core


#define SH_VERTEX           (1<<0)
#define SH_TESS_CONTROL     (1<<1)
#define SH_TESS_EVALUATION  (1<<2)
#define SH_GEOMETRY         (1<<3)
#define SH_FRAGMENT         (1<<4)
#define SH_COMPUTE          (1<<5)

#ifdef GL_ARB_gpu_shader_int64
#extension GL_ARB_gpu_shader_int64 : require
#define ARB_gpu_shader_int64_enabled  1
#endif

// for vulkan compatibility
#ifdef GL_ARB_separate_shader_objects
#extension GL_ARB_separate_shader_objects : enable
#define ARB_separate_shader_objects_enabled  1
#endif

#define bool2		bvec2
#define bool3		bvec3
#define bool4		bvec4

#define int2		ivec2
#define int3		ivec3
#define int4		ivec4

#define uint2		uvec2
#define uint3		uvec3
#define uint4		uvec4

#ifdef ARB_gpu_shader_int64_enabled
# define ilong		int64_t
# define ilong2		i64vec2
# define ilong3		i64vec3
# define ilong4		i64vec4
# define ulong		uint64_t
# define ulong2		u64vec2
# define ulong3		u64vec3
# define ulong4		u64vec4
#endif // ARB_gpu_shader_int64_enabled

#define float2		vec2
#define float3		vec3
#define float4		vec4
			
#define float2x2	mat2x2
#define float2x3	mat2x3
#define float2x4	mat2x4
#define float3x2	mat3x2
#define float3x3	mat3x3
#define float3x4	mat3x4
#define float4x2	mat4x2
#define float4x3	mat4x3
#define float4x4	mat4x4

#define double2		dvec2
#define double3		dvec3
#define double4		dvec4
			
#define double2x2	dmat2x2
#define double2x3	dmat2x3
#define double2x4	dmat2x4
#define double3x2	dmat3x2
#define double3x3	dmat3x3
#define double3x4	dmat3x4
#define double4x2	dmat4x2
#define double4x3	dmat4x3
#define double4x4	dmat4x4

#ifdef VULKAN
#define PUSH_CONSTANT( _name_ )	layout (std140, push_constant) uniform _name_
#else
#define PUSH_CONSTANT( _name_ )	layout (std140) uniform pushConst_##_name_
#endif
		
#define SHADER	SH_FRAGMENT

layout(location=0) out   vec4 out_Color0;

layout(binding=0) layout(std140) uniform ShadertoyUB {
	layout(offset=0, align=16) vec4  iResolution;    // offset: 0, align: 16
	layout(offset=16, align=4) float  iTime;    // offset: 16, align: 4
	layout(offset=20, align=4) float  iTimeDelta;    // offset: 20, align: 4
	layout(offset=24, align=4) int  iFrame;    // offset: 24, align: 4
	layout(offset=28, align=4) float  _padding0;    // offset: 28, align: 4
	layout(offset=32, align=16) vec4  iChannelTime[4];    // offset: 32, align: 16
	layout(offset=96, align=16) vec4  iChannelResolution[4];    // offset: 96, align: 16
	layout(offset=160, align=16) vec4  iMouse;    // offset: 160, align: 16
	layout(offset=176, align=16) vec4  iDate;    // offset: 176, align: 16
	layout(offset=192, align=4) float  iSampleRate;    // offset: 192, align: 4
	layout(offset=196, align=4) float  _padding1;    // offset: 196, align: 4
	layout(offset=200, align=4) float  _padding2;    // offset: 200, align: 4
	layout(offset=204, align=4) float  _padding3;    // offset: 204, align: 4
	layout(offset=208, align=16) vec4  iCameraFrustum[4];    // offset: 208, align: 16
	layout(offset=272, align=16) vec4  iCameraPos;    // offset: 272, align: 16

} ;



vec2 Hash12 (in float f);
float Hash11 (in float a);
float Hash21 (in vec2 p);
vec2 Hash22 (in vec2 p);
vec3 HSVtoRGB (in vec3 hsv);
vec3 Rainbow (in float color, in float dist);
vec4 voronoi (in vec2 x);
vec3 VoronoiFactal (in vec2 coord, in float time);
void mainImage (out vec4 fragColor, in vec2 fragCoord);

//---------------------------------
void main ()
{
	vec2 coord;
	coord=gl_FragCoord.xy;
	coord.y=(iResolution.xyz.y-coord.y);
	mainImage( out_Color0, coord );
}


vec2 Hash22 (in vec2 p)
{
	vec2 q;
	q=vec2( dot( p, vec2(127.09999847, 311.70001221) ), dot( p, vec2(269.5, 183.30000305) ) );
	return fract( (sin( q )*float(43758.546875)) );
}


float Hash21 (in vec2 p)
{
	return fract( (sin( (p.x+(p.y*float(64.0))) )*float(104003.8984375)) );
}


vec2 Hash12 (in float f)
{
	return fract( (cos( f )*vec2(10003.57910156, 37049.69921875)) );
}


float Hash11 (in float a)
{
	return Hash21( vec2( fract( (a*float(2.0)) ), fract( (a*float(4.0)) ) ) );
}


vec4 voronoi (in vec2 x)
{
	vec2 n;
	n=floor( x );
	vec2 f;
	f=fract( x );
	vec2 mg;
	mg=vec2(0.0);
	vec2 mr;
	mr=vec2(0.0);
	float md;
	md=float(8.0);
	{
		int j;
		j=int(-1);
		for(; (j<=int(1)); ( j )++)
		{
			{
				int i;
				i=int(-1);
				for(; (i<=int(1)); ( i )++)
				{
					vec2 g;
					g=vec2( float( i ), float( j ) );
					vec2 o;
					o=Hash22( (n+g) );
					o=(float(0.5)+(float(0.5)*sin( ((iTime*float(0.5))+(float(6.28310013)*o)) )));
					vec2 r;
					r=((g+o)-f);
					float d;
					d=dot( r, r );
					if ( (d<md))
					{
						md=d;
						mr=r;
						mg=g;
					;
					}
					;
				}
			}
		}
	}
	;
	md=float(8.0);
	{
		int j;
		j=int(-2);
		for(; (j<=int(2)); ( j )++)
		{
			{
				int i;
				i=int(-2);
				for(; (i<=int(2)); ( i )++)
				{
					vec2 g;
					g=(mg+vec2( float( i ), float( j ) ));
					vec2 o;
					o=Hash22( (n+g) );
					o=(float(0.5)+(float(0.5)*sin( ((iTime*float(0.5))+(float(6.28310013)*o)) )));
					vec2 r;
					r=((g+o)-f);
					if ( (dot( (mr-r), (mr-r) )>float(0.00001)))
					{
						md=min( md, dot( (float(0.5)*(mr+r)), normalize( (r-mr) ) ) );
					}
					;
				}
			}
		}
	}
	;
	return vec4( (x-((n+mr)+f)), md, Hash21( (mg+n) ) );
}


vec3 HSVtoRGB (in vec3 hsv)
{
	vec3 col;
	col=vec3( (abs( ((hsv.x*float(6.0))-float(3.0)) )-float(1.0)), (float(2.0)-abs( ((hsv.x*float(6.0))-float(2.0)) )), (float(2.0)-abs( ((hsv.x*float(6.0))-float(4.0)) )) );
	return ((((clamp( col, vec3(0.0), vec3(1.0) )-float(1.0))*hsv.y)+float(1.0))*hsv.z);
}


vec3 Rainbow (in float color, in float dist)
{
	dist=pow( dist, float(8.0) );
	return mix( vec3(1.0), HSVtoRGB( vec3( color, float(1.0), float(1.0) ) ), (float(1.0)-dist) );
}


vec3 VoronoiFactal (in vec2 coord, in float time)
{
	vec2 uv;
	uv=(coord*float(4.0));
	vec3 color;
	color=vec3(0.0);
	float alpha;
	alpha=float(0.0);
	float value;
	value=float(0.0);
	{
		int i;
		i=int(0);
		for(; (i<int(4)); ++( i ))
		{
			vec4 v;
			v=voronoi( uv );
			uv=((((v.xy*float(0.5))+float(0.5))*float(6.0))+Hash12( v.w ));
			float f;
			f=pow( (float(0.01)*float( (int(4)-i) )), float(3.0) );
			float a;
			a=(float(1.0)-smoothstep( float(0.0), (float(0.08)+f), v.z ));
			vec3 c;
			c=Rainbow( Hash11( ((float( (i+int(1)) )/float(4.0))+(value*float(1.34099996))) ), ( ((i>int(1))) ? (float(0.0)) : (a) ) );
			color=((color*alpha)+(c*a));
			alpha=max( alpha, a );
			value=v.w;
		}
	}
	;
	return (vec3( alpha )*Rainbow( float(0.06), alpha ));
}


void mainImage (out vec4 fragColor, in vec2 fragCoord)
{
	vec3 color;
	color=VoronoiFactal( (fragCoord.xy/iResolution.xyz.xx), iTime );
	fragColor=vec4( color, float(1.0) );
}



)#"_str );
	descr.Fragment().ArraySPIRV({ 
0x07230203, 0x00010000, 0x00080002, 0x000001D4, 0x00000000, 0x00020011, 0x00000001, 0x0006000B, 0x00000002, 0x4C534C47, 0x6474732E, 0x3035342E, 
0x00000000, 0x0003000E, 0x00000000, 0x00000001, 0x0007000F, 0x00000004, 0x00000005, 0x6E69616D, 0x00000000, 0x00000038, 0x0000004E, 0x00030010, 
0x00000005, 0x00000007, 0x00030007, 0x00000001, 0x00000000, 0x002E0003, 0x00000002, 0x000001C2, 0x00000001, 0x4F202F2F, 0x646F4D70, 0x50656C75, 
0x65636F72, 0x64657373, 0x746E6520, 0x702D7972, 0x746E696F, 0x69616D20, 0x2F2F0A6E, 0x4D704F20, 0x6C75646F, 0x6F725065, 0x73736563, 0x63206465, 
0x6E65696C, 0x75762074, 0x6E616B6C, 0x0A303031, 0x4F202F2F, 0x646F4D70, 0x50656C75, 0x65636F72, 0x64657373, 0x72617420, 0x2D746567, 0x20766E65, 
0x6B6C7576, 0x2E316E61, 0x2F2F0A30, 0x4D704F20, 0x6C75646F, 0x6F725065, 0x73736563, 0x65206465, 0x7972746E, 0x696F702D, 0x6D20746E, 0x0A6E6961, 
0x6E696C23, 0x0A312065, 0x00000000, 0x00070004, 0x415F4C47, 0x675F4252, 0x735F7570, 0x65646168, 0x6E695F72, 0x00343674, 0x00090004, 0x415F4C47, 
0x735F4252, 0x72617065, 0x5F657461, 0x64616873, 0x6F5F7265, 0x63656A62, 0x00007374, 0x00040005, 0x00000005, 0x6E69616D, 0x00000000, 0x00050005, 
0x0000000C, 0x68736148, 0x76283232, 0x003B3266, 0x00030005, 0x0000000B, 0x00000070, 0x00050005, 0x00000010, 0x68736148, 0x76283132, 0x003B3266, 
0x00030005, 0x0000000F, 0x00000070, 0x00050005, 0x00000015, 0x68736148, 0x66283231, 0x00003B31, 0x00030005, 0x00000014, 0x00000066, 0x00050005, 
0x00000019, 0x68736148, 0x66283131, 0x00003B31, 0x00030005, 0x00000018, 0x00000061, 0x00060005, 0x0000001E, 0x6F726F76, 0x28696F6E, 0x3B326676, 
0x00000000, 0x00030005, 0x0000001D, 0x00000078, 0x00060005, 0x00000024, 0x74565348, 0x4247526F, 0x33667628, 0x0000003B, 0x00030005, 0x00000023, 
0x00767368, 0x00060005, 0x00000029, 0x6E696152, 0x28776F62, 0x663B3166, 0x00003B31, 0x00040005, 0x00000027, 0x6F6C6F63, 0x00000072, 0x00040005, 
0x00000028, 0x74736964, 0x00000000, 0x00080005, 0x0000002E, 0x6F726F56, 0x46696F6E, 0x61746361, 0x6676286C, 0x31663B32, 0x0000003B, 0x00040005, 
0x0000002C, 0x726F6F63, 0x00000064, 0x00040005, 0x0000002D, 0x656D6974, 0x00000000, 0x00070005, 0x00000034, 0x6E69616D, 0x67616D49, 0x66762865, 
0x66763B34, 0x00003B32, 0x00050005, 0x00000032, 0x67617266, 0x6F6C6F43, 0x00000072, 0x00050005, 0x00000033, 0x67617266, 0x726F6F43, 0x00000064, 
0x00040005, 0x00000036, 0x726F6F63, 0x00000064, 0x00060005, 0x00000038, 0x465F6C67, 0x43676172, 0x64726F6F, 0x00000000, 0x00050005, 0x00000041, 
0x64616853, 0x6F747265, 0x00425579, 0x00060006, 0x00000041, 0x00000000, 0x73655269, 0x74756C6F, 0x006E6F69, 0x00050006, 0x00000041, 0x00000001, 
0x6D695469, 0x00000065, 0x00060006, 0x00000041, 0x00000002, 0x6D695469, 0x6C654465, 0x00006174, 0x00050006, 0x00000041, 0x00000003, 0x61724669, 
0x0000656D, 0x00060006, 0x00000041, 0x00000004, 0x6461705F, 0x676E6964, 0x00000030, 0x00070006, 0x00000041, 0x00000005, 0x61684369, 0x6C656E6E, 
0x656D6954, 0x00000000, 0x00080006, 0x00000041, 0x00000006, 0x61684369, 0x6C656E6E, 0x6F736552, 0x6974756C, 0x00006E6F, 0x00050006, 0x00000041, 
0x00000007, 0x756F4D69, 0x00006573, 0x00050006, 0x00000041, 0x00000008, 0x74614469, 0x00000065, 0x00060006, 0x00000041, 0x00000009, 0x6D615369, 
0x52656C70, 0x00657461, 0x00060006, 0x00000041, 0x0000000A, 0x6461705F, 0x676E6964, 0x00000031, 0x00060006, 0x00000041, 0x0000000B, 0x6461705F, 
0x676E6964, 0x00000032, 0x00060006, 0x00000041, 0x0000000C, 0x6461705F, 0x676E6964, 0x00000033, 0x00070006, 0x00000041, 0x0000000D, 0x6D614369, 
0x46617265, 0x74737572, 0x00006D75, 0x00060006, 0x00000041, 0x0000000E, 0x6D614369, 0x50617265, 0x0000736F, 0x00030005, 0x00000043, 0x00000000, 
0x00050005, 0x0000004E, 0x5F74756F, 0x6F6C6F43, 0x00003072, 0x00040005, 0x0000004F, 0x61726170, 0x0000006D, 0x00040005, 0x00000050, 0x61726170, 
0x0000006D, 0x00030005, 0x00000054, 0x00000071, 0x00040005, 0x00000087, 0x61726170, 0x0000006D, 0x00030005, 0x0000008B, 0x0000006E, 0x00030005, 
0x0000008E, 0x00000066, 0x00030005, 0x00000091, 0x0000676D, 0x00030005, 0x00000094, 0x0000726D, 0x00030005, 0x00000095, 0x0000646D, 0x00030005, 
0x00000098, 0x0000006A, 0x00030005, 0x000000A3, 0x00000069, 0x00030005, 0x000000AB, 0x00000067, 0x00030005, 0x000000B1, 0x0000006F, 0x00040005, 
0x000000B5, 0x61726170, 0x0000006D, 0x00030005, 0x000000C4, 0x00000072, 0x00030005, 0x000000CA, 0x00000064, 0x00030005, 0x000000DA, 0x0000006A, 
0x00030005, 0x000000E4, 0x00000069, 0x00030005, 0x000000EC, 0x00000067, 0x00030005, 0x000000F4, 0x0000006F, 0x00040005, 0x000000F8, 0x61726170, 
0x0000006D, 0x00030005, 0x00000105, 0x00000072, 0x00040005, 0x00000130, 0x61726170, 0x0000006D, 0x00030005, 0x00000137, 0x006C6F63, 0x00040005, 
0x00000163, 0x61726170, 0x0000006D, 0x00030005, 0x0000016B, 0x00007675, 0x00040005, 0x0000016E, 0x6F6C6F63, 0x00000072, 0x00040005, 0x0000016F, 
0x68706C61, 0x00000061, 0x00040005, 0x00000170, 0x756C6176, 0x00000065, 0x00030005, 0x00000171, 0x00000069, 0x00030005, 0x0000017A, 0x00000076, 
0x00040005, 0x0000017B, 0x61726170, 0x0000006D, 0x00040005, 0x00000184, 0x61726170, 0x0000006D, 0x00030005, 0x0000018A, 0x00000066, 0x00030005, 
0x00000191, 0x00000061, 0x00030005, 0x00000199, 0x00000063, 0x00040005, 0x000001A2, 0x61726170, 0x0000006D, 0x00040005, 0x000001A8, 0x61726170, 
0x0000006D, 0x00040005, 0x000001A9, 0x61726170, 0x0000006D, 0x00040005, 0x000001BC, 0x61726170, 0x0000006D, 0x00040005, 0x000001BD, 0x61726170, 
0x0000006D, 0x00040005, 0x000001C3, 0x6F6C6F63, 0x00000072, 0x00040005, 0x000001CA, 0x61726170, 0x0000006D, 0x00040005, 0x000001CB, 0x61726170, 
0x0000006D, 0x00040047, 0x00000038, 0x0000000B, 0x0000000F, 0x00040047, 0x0000003E, 0x00000006, 0x00000010, 0x00040047, 0x0000003F, 0x00000006, 
0x00000010, 0x00040047, 0x00000040, 0x00000006, 0x00000010, 0x00050048, 0x00000041, 0x00000000, 0x00000023, 0x00000000, 0x00050048, 0x00000041, 
0x00000001, 0x00000023, 0x00000010, 0x00050048, 0x00000041, 0x00000002, 0x00000023, 0x00000014, 0x00050048, 0x00000041, 0x00000003, 0x00000023, 
0x00000018, 0x00050048, 0x00000041, 0x00000004, 0x00000023, 0x0000001C, 0x00050048, 0x00000041, 0x00000005, 0x00000023, 0x00000020, 0x00050048, 
0x00000041, 0x00000006, 0x00000023, 0x00000060, 0x00050048, 0x00000041, 0x00000007, 0x00000023, 0x000000A0, 0x00050048, 0x00000041, 0x00000008, 
0x00000023, 0x000000B0, 0x00050048, 0x00000041, 0x00000009, 0x00000023, 0x000000C0, 0x00050048, 0x00000041, 0x0000000A, 0x00000023, 0x000000C4, 
0x00050048, 0x00000041, 0x0000000B, 0x00000023, 0x000000C8, 0x00050048, 0x00000041, 0x0000000C, 0x00000023, 0x000000CC, 0x00050048, 0x00000041, 
0x0000000D, 0x00000023, 0x000000D0, 0x00050048, 0x00000041, 0x0000000E, 0x00000023, 0x00000110, 0x00030047, 0x00000041, 0x00000002, 0x00040047, 
0x00000043, 0x00000022, 0x00000000, 0x00040047, 0x00000043, 0x00000021, 0x00000000, 0x00040047, 0x0000004E, 0x0000001E, 0x00000000, 0x00020013, 
0x00000003, 0x00030021, 0x00000004, 0x00000003, 0x00030016, 0x00000007, 0x00000020, 0x00040017, 0x00000008, 0x00000007, 0x00000002, 0x00040020, 
0x00000009, 0x00000007, 0x00000008, 0x00040021, 0x0000000A, 0x00000008, 0x00000009, 0x00040021, 0x0000000E, 0x00000007, 0x00000009, 0x00040020, 
0x00000012, 0x00000007, 0x00000007, 0x00040021, 0x00000013, 0x00000008, 0x00000012, 0x00040021, 0x00000017, 0x00000007, 0x00000012, 0x00040017, 
0x0000001B, 0x00000007, 0x00000004, 0x00040021, 0x0000001C, 0x0000001B, 0x00000009, 0x00040017, 0x00000020, 0x00000007, 0x00000003, 0x00040020, 
0x00000021, 0x00000007, 0x00000020, 0x00040021, 0x00000022, 0x00000020, 0x00000021, 0x00050021, 0x00000026, 0x00000020, 0x00000012, 0x00000012, 
0x00050021, 0x0000002B, 0x00000020, 0x00000009, 0x00000012, 0x00040020, 0x00000030, 0x00000007, 0x0000001B, 0x00050021, 0x00000031, 0x00000003, 
0x00000030, 0x00000009, 0x00040020, 0x00000037, 0x00000001, 0x0000001B, 0x0004003B, 0x00000037, 0x00000038, 0x00000001, 0x00040015, 0x0000003B, 
0x00000020, 0x00000001, 0x00040015, 0x0000003C, 0x00000020, 0x00000000, 0x0004002B, 0x0000003C, 0x0000003D, 0x00000004, 0x0004001C, 0x0000003E, 
0x0000001B, 0x0000003D, 0x0004001C, 0x0000003F, 0x0000001B, 0x0000003D, 0x0004001C, 0x00000040, 0x0000001B, 0x0000003D, 0x0011001E, 0x00000041, 
0x0000001B, 0x00000007, 0x00000007, 0x0000003B, 0x00000007, 0x0000003E, 0x0000003F, 0x0000001B, 0x0000001B, 0x00000007, 0x00000007, 0x00000007, 
0x00000007, 0x00000040, 0x0000001B, 0x00040020, 0x00000042, 0x00000002, 0x00000041, 0x0004003B, 0x00000042, 0x00000043, 0x00000002, 0x0004002B, 
0x0000003B, 0x00000044, 0x00000000, 0x0004002B, 0x0000003C, 0x00000045, 0x00000001, 0x00040020, 0x00000046, 0x00000002, 0x00000007, 0x00040020, 
0x0000004D, 0x00000003, 0x0000001B, 0x0004003B, 0x0000004D, 0x0000004E, 0x00000003, 0x0004002B, 0x00000007, 0x00000056, 0x42FE3333, 0x0004002B, 
0x00000007, 0x00000057, 0x439BD99A, 0x0005002C, 0x00000008, 0x00000058, 0x00000056, 0x00000057, 0x0004002B, 0x00000007, 0x0000005B, 0x4386C000, 
0x0004002B, 0x00000007, 0x0000005C, 0x43374CCD, 0x0005002C, 0x00000008, 0x0000005D, 0x0000005B, 0x0000005C, 0x0004002B, 0x00000007, 0x00000062, 
0x472AEE8C, 0x0004002B, 0x0000003C, 0x00000067, 0x00000000, 0x0004002B, 0x00000007, 0x0000006C, 0x42800000, 0x0004002B, 0x00000007, 0x00000070, 
0x47CB21F3, 0x0004002B, 0x00000007, 0x00000077, 0x461C4E51, 0x0004002B, 0x00000007, 0x00000078, 0x4710B9B3, 0x0005002C, 0x00000008, 0x00000079, 
0x00000077, 0x00000078, 0x0004002B, 0x00000007, 0x0000007F, 0x40000000, 0x0004002B, 0x00000007, 0x00000083, 0x40800000, 0x0004002B, 0x00000007, 
0x00000092, 0x00000000, 0x0005002C, 0x00000008, 0x00000093, 0x00000092, 0x00000092, 0x0004002B, 0x00000007, 0x00000096, 0x41000000, 0x00040020, 
0x00000097, 0x00000007, 0x0000003B, 0x0004002B, 0x0000003B, 0x00000099, 0xFFFFFFFF, 0x0004002B, 0x0000003B, 0x000000A0, 0x00000001, 0x00020014, 
0x000000A1, 0x0004002B, 0x00000007, 0x000000B7, 0x3F000000, 0x0004002B, 0x00000007, 0x000000BB, 0x40C90F28, 0x0004002B, 0x0000003B, 0x000000DB, 
0xFFFFFFFE, 0x0004002B, 0x0000003B, 0x000000E2, 0x00000002, 0x0004002B, 0x00000007, 0x00000112, 0x3727C5AC, 0x0004002B, 0x00000007, 0x0000013A, 
0x40C00000, 0x0004002B, 0x00000007, 0x0000013C, 0x40400000, 0x0004002B, 0x00000007, 0x0000013F, 0x3F800000, 0x0006002C, 0x00000020, 0x0000014F, 
0x00000092, 0x00000092, 0x00000092, 0x0006002C, 0x00000020, 0x00000150, 0x0000013F, 0x0000013F, 0x0000013F, 0x0004002B, 0x0000003C, 0x00000159, 
0x00000002, 0x0004002B, 0x0000003B, 0x00000178, 0x00000004, 0x0004002B, 0x0000003C, 0x00000185, 0x00000003, 0x0004002B, 0x00000007, 0x0000018B, 
0x3C23D70A, 0x0004002B, 0x00000007, 0x00000192, 0x3DA3D70A, 0x0004002B, 0x00000007, 0x0000019F, 0x3FABA5E3, 0x0004002B, 0x00000007, 0x000001BB, 
0x3D75C28F, 0x00040020, 0x000001C5, 0x00000002, 0x0000001B, 0x00050036, 0x00000003, 0x00000005, 0x00000000, 0x00000004, 0x000200F8, 0x00000006, 
0x0004003B, 0x00000009, 0x00000036, 0x00000007, 0x0004003B, 0x00000030, 0x0000004F, 0x00000007, 0x0004003B, 0x00000009, 0x00000050, 0x00000007, 
0x00040008, 0x00000001, 0x00000076, 0x00000000, 0x0004003D, 0x0000001B, 0x00000039, 0x00000038, 0x0007004F, 0x00000008, 0x0000003A, 0x00000039, 
0x00000039, 0x00000000, 0x00000001, 0x0003003E, 0x00000036, 0x0000003A, 0x00040008, 0x00000001, 0x00000077, 0x00000000, 0x00060041, 0x00000046, 
0x00000047, 0x00000043, 0x00000044, 0x00000045, 0x0004003D, 0x00000007, 0x00000048, 0x00000047, 0x00050041, 0x00000012, 0x00000049, 0x00000036, 
0x00000045, 0x0004003D, 0x00000007, 0x0000004A, 0x00000049, 0x00050083, 0x00000007, 0x0000004B, 0x00000048, 0x0000004A, 0x00050041, 0x00000012, 
0x0000004C, 0x00000036, 0x00000045, 0x0003003E, 0x0000004C, 0x0000004B, 0x00040008, 0x00000001, 0x00000078, 0x00000000, 0x0004003D, 0x00000008, 
0x00000051, 0x00000036, 0x0003003E, 0x00000050, 0x00000051, 0x00060039, 0x00000003, 0x00000052, 0x00000034, 0x0000004F, 0x00000050, 0x0004003D, 
0x0000001B, 0x00000053, 0x0000004F, 0x0003003E, 0x0000004E, 0x00000053, 0x000100FD, 0x00010038, 0x00050036, 0x00000008, 0x0000000C, 0x00000000, 
0x0000000A, 0x00030037, 0x00000009, 0x0000000B, 0x000200F8, 0x0000000D, 0x0004003B, 0x00000009, 0x00000054, 0x00000007, 0x00040008, 0x00000001, 
0x0000007F, 0x00000000, 0x0004003D, 0x00000008, 0x00000055, 0x0000000B, 0x00050094, 0x00000007, 0x00000059, 0x00000055, 0x00000058, 0x0004003D, 
0x00000008, 0x0000005A, 0x0000000B, 0x00050094, 0x00000007, 0x0000005E, 0x0000005A, 0x0000005D, 0x00050050, 0x00000008, 0x0000005F, 0x00000059, 
0x0000005E, 0x0003003E, 0x00000054, 0x0000005F, 0x00040008, 0x00000001, 0x00000080, 0x00000000, 0x0004003D, 0x00000008, 0x00000060, 0x00000054, 
0x0006000C, 0x00000008, 0x00000061, 0x00000002, 0x0000000D, 0x00000060, 0x0005008E, 0x00000008, 0x00000063, 0x00000061, 0x00000062, 0x0006000C, 
0x00000008, 0x00000064, 0x00000002, 0x0000000A, 0x00000063, 0x000200FE, 0x00000064, 0x00010038, 0x00050036, 0x00000007, 0x00000010, 0x00000000, 
0x0000000E, 0x00030037, 0x00000009, 0x0000000F, 0x000200F8, 0x00000011, 0x00040008, 0x00000001, 0x00000086, 0x00000000, 0x00050041, 0x00000012, 
0x00000068, 0x0000000F, 0x00000067, 0x0004003D, 0x00000007, 0x00000069, 0x00000068, 0x00050041, 0x00000012, 0x0000006A, 0x0000000F, 0x00000045, 
0x0004003D, 0x00000007, 0x0000006B, 0x0000006A, 0x00050085, 0x00000007, 0x0000006D, 0x0000006B, 0x0000006C, 0x00050081, 0x00000007, 0x0000006E, 
0x00000069, 0x0000006D, 0x0006000C, 0x00000007, 0x0000006F, 0x00000002, 0x0000000D, 0x0000006E, 0x00050085, 0x00000007, 0x00000071, 0x0000006F, 
0x00000070, 0x0006000C, 0x00000007, 0x00000072, 0x00000002, 0x0000000A, 0x00000071, 0x000200FE, 0x00000072, 0x00010038, 0x00050036, 0x00000008, 
0x00000015, 0x00000000, 0x00000013, 0x00030037, 0x00000012, 0x00000014, 0x000200F8, 0x00000016, 0x00040008, 0x00000001, 0x0000008C, 0x00000000, 
0x0004003D, 0x00000007, 0x00000075, 0x00000014, 0x0006000C, 0x00000007, 0x00000076, 0x00000002, 0x0000000E, 0x00000075, 0x0005008E, 0x00000008, 
0x0000007A, 0x00000079, 0x00000076, 0x0006000C, 0x00000008, 0x0000007B, 0x00000002, 0x0000000A, 0x0000007A, 0x000200FE, 0x0000007B, 0x00010038, 
0x00050036, 0x00000007, 0x00000019, 0x00000000, 0x00000017, 0x00030037, 0x00000012, 0x00000018, 0x000200F8, 0x0000001A, 0x0004003B, 0x00000009, 
0x00000087, 0x00000007, 0x00040008, 0x00000001, 0x00000092, 0x00000000, 0x0004003D, 0x00000007, 0x0000007E, 0x00000018, 0x00050085, 0x00000007, 
0x00000080, 0x0000007E, 0x0000007F, 0x0006000C, 0x00000007, 0x00000081, 0x00000002, 0x0000000A, 0x00000080, 0x0004003D, 0x00000007, 0x00000082, 
0x00000018, 0x00050085, 0x00000007, 0x00000084, 0x00000082, 0x00000083, 0x0006000C, 0x00000007, 0x00000085, 0x00000002, 0x0000000A, 0x00000084, 
0x00050050, 0x00000008, 0x00000086, 0x00000081, 0x00000085, 0x0003003E, 0x00000087, 0x00000086, 0x00050039, 0x00000007, 0x00000088, 0x00000010, 
0x00000087, 0x000200FE, 0x00000088, 0x00010038, 0x00050036, 0x0000001B, 0x0000001E, 0x00000000, 0x0000001C, 0x00030037, 0x00000009, 0x0000001D, 
0x000200F8, 0x0000001F, 0x0004003B, 0x00000009, 0x0000008B, 0x00000007, 0x0004003B, 0x00000009, 0x0000008E, 0x00000007, 0x0004003B, 0x00000009, 
0x00000091, 0x00000007, 0x0004003B, 0x00000009, 0x00000094, 0x00000007, 0x0004003B, 0x00000012, 0x00000095, 0x00000007, 0x0004003B, 0x00000097, 
0x00000098, 0x00000007, 0x0004003B, 0x00000097, 0x000000A3, 0x00000007, 0x0004003B, 0x00000009, 0x000000AB, 0x00000007, 0x0004003B, 0x00000009, 
0x000000B1, 0x00000007, 0x0004003B, 0x00000009, 0x000000B5, 0x00000007, 0x0004003B, 0x00000009, 0x000000C4, 0x00000007, 0x0004003B, 0x00000012, 
0x000000CA, 0x00000007, 0x0004003B, 0x00000097, 0x000000DA, 0x00000007, 0x0004003B, 0x00000097, 0x000000E4, 0x00000007, 0x0004003B, 0x00000009, 
0x000000EC, 0x00000007, 0x0004003B, 0x00000009, 0x000000F4, 0x00000007, 0x0004003B, 0x00000009, 0x000000F8, 0x00000007, 0x0004003B, 0x00000009, 
0x00000105, 0x00000007, 0x0004003B, 0x00000009, 0x00000130, 0x00000007, 0x00040008, 0x00000001, 0x00000099, 0x00000000, 0x0004003D, 0x00000008, 
0x0000008C, 0x0000001D, 0x0006000C, 0x00000008, 0x0000008D, 0x00000002, 0x00000008, 0x0000008C, 0x0003003E, 0x0000008B, 0x0000008D, 0x00040008, 
0x00000001, 0x0000009B, 0x00000000, 0x0004003D, 0x00000008, 0x0000008F, 0x0000001D, 0x0006000C, 0x00000008, 0x00000090, 0x00000002, 0x0000000A, 
0x0000008F, 0x0003003E, 0x0000008E, 0x00000090, 0x00040008, 0x00000001, 0x0000009D, 0x00000000, 0x0003003E, 0x00000091, 0x00000093, 0x00040008, 
0x00000001, 0x0000009F, 0x00000000, 0x0003003E, 0x00000094, 0x00000093, 0x00040008, 0x00000001, 0x000000A1, 0x00000000, 0x0003003E, 0x00000095, 
0x00000096, 0x00040008, 0x00000001, 0x000000A4, 0x00000000, 0x0003003E, 0x00000098, 0x00000099, 0x000200F9, 0x0000009A, 0x00040008, 0x00000001, 
0x000000A5, 0x00000000, 0x000200F8, 0x0000009A, 0x000400F6, 0x0000009C, 0x0000009D, 0x00000000, 0x000200F9, 0x0000009E, 0x000200F8, 0x0000009E, 
0x0004003D, 0x0000003B, 0x0000009F, 0x00000098, 0x000500B3, 0x000000A1, 0x000000A2, 0x0000009F, 0x000000A0, 0x000400FA, 0x000000A2, 0x0000009B, 
0x0000009C, 0x000200F8, 0x0000009B, 0x00040008, 0x00000001, 0x000000A9, 0x00000000, 0x0003003E, 0x000000A3, 0x00000099, 0x000200F9, 0x000000A4, 
0x00040008, 0x00000001, 0x000000AA, 0x00000000, 0x000200F8, 0x000000A4, 0x000400F6, 0x000000A6, 0x000000A7, 0x00000000, 0x000200F9, 0x000000A8, 
0x000200F8, 0x000000A8, 0x0004003D, 0x0000003B, 0x000000A9, 0x000000A3, 0x000500B3, 0x000000A1, 0x000000AA, 0x000000A9, 0x000000A0, 0x000400FA, 
0x000000AA, 0x000000A5, 0x000000A6, 0x000200F8, 0x000000A5, 0x00040008, 0x00000001, 0x000000AD, 0x00000000, 0x0004003D, 0x0000003B, 0x000000AC, 
0x000000A3, 0x0004006F, 0x00000007, 0x000000AD, 0x000000AC, 0x0004003D, 0x0000003B, 0x000000AE, 0x00000098, 0x0004006F, 0x00000007, 0x000000AF, 
0x000000AE, 0x00050050, 0x00000008, 0x000000B0, 0x000000AD, 0x000000AF, 0x0003003E, 0x000000AB, 0x000000B0, 0x00040008, 0x00000001, 0x000000AF, 
0x00000000, 0x0004003D, 0x00000008, 0x000000B2, 0x0000008B, 0x0004003D, 0x00000008, 0x000000B3, 0x000000AB, 0x00050081, 0x00000008, 0x000000B4, 
0x000000B2, 0x000000B3, 0x0003003E, 0x000000B5, 0x000000B4, 0x00050039, 0x00000008, 0x000000B6, 0x0000000C, 0x000000B5, 0x0003003E, 0x000000B1, 
0x000000B6, 0x00040008, 0x00000001, 0x000000B0, 0x00000000, 0x00050041, 0x00000046, 0x000000B8, 0x00000043, 0x000000A0, 0x0004003D, 0x00000007, 
0x000000B9, 0x000000B8, 0x00050085, 0x00000007, 0x000000BA, 0x000000B9, 0x000000B7, 0x0004003D, 0x00000008, 0x000000BC, 0x000000B1, 0x0005008E, 
0x00000008, 0x000000BD, 0x000000BC, 0x000000BB, 0x00050050, 0x00000008, 0x000000BE, 0x000000BA, 0x000000BA, 0x00050081, 0x00000008, 0x000000BF, 
0x000000BE, 0x000000BD, 0x0006000C, 0x00000008, 0x000000C0, 0x00000002, 0x0000000D, 0x000000BF, 0x0005008E, 0x00000008, 0x000000C1, 0x000000C0, 
0x000000B7, 0x00050050, 0x00000008, 0x000000C2, 0x000000B7, 0x000000B7, 0x00050081, 0x00000008, 0x000000C3, 0x000000C2, 0x000000C1, 0x0003003E, 
0x000000B1, 0x000000C3, 0x00040008, 0x00000001, 0x000000B2, 0x00000000, 0x0004003D, 0x00000008, 0x000000C5, 0x000000AB, 0x0004003D, 0x00000008, 
0x000000C6, 0x000000B1, 0x00050081, 0x00000008, 0x000000C7, 0x000000C5, 0x000000C6, 0x0004003D, 0x00000008, 0x000000C8, 0x0000008E, 0x00050083, 
0x00000008, 0x000000C9, 0x000000C7, 0x000000C8, 0x0003003E, 0x000000C4, 0x000000C9, 0x00040008, 0x00000001, 0x000000B4, 0x00000000, 0x0004003D, 
0x00000008, 0x000000CB, 0x000000C4, 0x0004003D, 0x00000008, 0x000000CC, 0x000000C4, 0x00050094, 0x00000007, 0x000000CD, 0x000000CB, 0x000000CC, 
0x0003003E, 0x000000CA, 0x000000CD, 0x00040008, 0x00000001, 0x000000B5, 0x00000000, 0x0004003D, 0x00000007, 0x000000CE, 0x000000CA, 0x0004003D, 
0x00000007, 0x000000CF, 0x00000095, 0x000500B8, 0x000000A1, 0x000000D0, 0x000000CE, 0x000000CF, 0x000300F7, 0x000000D2, 0x00000000, 0x000400FA, 
0x000000D0, 0x000000D1, 0x000000D2, 0x000200F8, 0x000000D1, 0x00040008, 0x00000001, 0x000000B7, 0x00000000, 0x0004003D, 0x00000007, 0x000000D3, 
0x000000CA, 0x0003003E, 0x00000095, 0x000000D3, 0x00040008, 0x00000001, 0x000000B8, 0x00000000, 0x0004003D, 0x00000008, 0x000000D4, 0x000000C4, 
0x0003003E, 0x00000094, 0x000000D4, 0x00040008, 0x00000001, 0x000000B9, 0x00000000, 0x0004003D, 0x00000008, 0x000000D5, 0x000000AB, 0x0003003E, 
0x00000091, 0x000000D5, 0x000200F9, 0x000000D2, 0x000200F8, 0x000000D2, 0x000200F9, 0x000000A7, 0x000200F8, 0x000000A7, 0x00040008, 0x00000001, 
0x000000AA, 0x00000000, 0x0004003D, 0x0000003B, 0x000000D6, 0x000000A3, 0x00050080, 0x0000003B, 0x000000D7, 0x000000D6, 0x000000A0, 0x0003003E, 
0x000000A3, 0x000000D7, 0x000200F9, 0x000000A4, 0x000200F8, 0x000000A6, 0x000200F9, 0x0000009D, 0x000200F8, 0x0000009D, 0x00040008, 0x00000001, 
0x000000A5, 0x00000000, 0x0004003D, 0x0000003B, 0x000000D8, 0x00000098, 0x00050080, 0x0000003B, 0x000000D9, 0x000000D8, 0x000000A0, 0x0003003E, 
0x00000098, 0x000000D9, 0x000200F9, 0x0000009A, 0x000200F8, 0x0000009C, 0x00040008, 0x00000001, 0x000000C2, 0x00000000, 0x0003003E, 0x00000095, 
0x00000096, 0x00040008, 0x00000001, 0x000000C5, 0x00000000, 0x0003003E, 0x000000DA, 0x000000DB, 0x000200F9, 0x000000DC, 0x00040008, 0x00000001, 
0x000000C6, 0x00000000, 0x000200F8, 0x000000DC, 0x000400F6, 0x000000DE, 0x000000DF, 0x00000000, 0x000200F9, 0x000000E0, 0x000200F8, 0x000000E0, 
0x0004003D, 0x0000003B, 0x000000E1, 0x000000DA, 0x000500B3, 0x000000A1, 0x000000E3, 0x000000E1, 0x000000E2, 0x000400FA, 0x000000E3, 0x000000DD, 
0x000000DE, 0x000200F8, 0x000000DD, 0x00040008, 0x00000001, 0x000000CA, 0x00000000, 0x0003003E, 0x000000E4, 0x000000DB, 0x000200F9, 0x000000E5, 
0x00040008, 0x00000001, 0x000000CB, 0x00000000, 0x000200F8, 0x000000E5, 0x000400F6, 0x000000E7, 0x000000E8, 0x00000000, 0x000200F9, 0x000000E9, 
0x000200F8, 0x000000E9, 0x0004003D, 0x0000003B, 0x000000EA, 0x000000E4, 0x000500B3, 0x000000A1, 0x000000EB, 0x000000EA, 0x000000E2, 0x000400FA, 
0x000000EB, 0x000000E6, 0x000000E7, 0x000200F8, 0x000000E6, 0x00040008, 0x00000001, 0x000000CE, 0x00000000, 0x0004003D, 0x00000008, 0x000000ED, 
0x00000091, 0x0004003D, 0x0000003B, 0x000000EE, 0x000000E4, 0x0004006F, 0x00000007, 0x000000EF, 0x000000EE, 0x0004003D, 0x0000003B, 0x000000F0, 
0x000000DA, 0x0004006F, 0x00000007, 0x000000F1, 0x000000F0, 0x00050050, 0x00000008, 0x000000F2, 0x000000EF, 0x000000F1, 0x00050081, 0x00000008, 
0x000000F3, 0x000000ED, 0x000000F2, 0x0003003E, 0x000000EC, 0x000000F3, 0x00040008, 0x00000001, 0x000000D0, 0x00000000, 0x0004003D, 0x00000008, 
0x000000F5, 0x0000008B, 0x0004003D, 0x00000008, 0x000000F6, 0x000000EC, 0x00050081, 0x00000008, 0x000000F7, 0x000000F5, 0x000000F6, 0x0003003E, 
0x000000F8, 0x000000F7, 0x00050039, 0x00000008, 0x000000F9, 0x0000000C, 0x000000F8, 0x0003003E, 0x000000F4, 0x000000F9, 0x00040008, 0x00000001, 
0x000000D1, 0x00000000, 0x00050041, 0x00000046, 0x000000FA, 0x00000043, 0x000000A0, 0x0004003D, 0x00000007, 0x000000FB, 0x000000FA, 0x00050085, 
0x00000007, 0x000000FC, 0x000000FB, 0x000000B7, 0x0004003D, 0x00000008, 0x000000FD, 0x000000F4, 0x0005008E, 0x00000008, 0x000000FE, 0x000000FD, 
0x000000BB, 0x00050050, 0x00000008, 0x000000FF, 0x000000FC, 0x000000FC, 0x00050081, 0x00000008, 0x00000100, 0x000000FF, 0x000000FE, 0x0006000C, 
0x00000008, 0x00000101, 0x00000002, 0x0000000D, 0x00000100, 0x0005008E, 0x00000008, 0x00000102, 0x00000101, 0x000000B7, 0x00050050, 0x00000008, 
0x00000103, 0x000000B7, 0x000000B7, 0x00050081, 0x00000008, 0x00000104, 0x00000103, 0x00000102, 0x0003003E, 0x000000F4, 0x00000104, 0x00040008, 
0x00000001, 0x000000D3, 0x00000000, 0x0004003D, 0x00000008, 0x00000106, 0x000000EC, 0x0004003D, 0x00000008, 0x00000107, 0x000000F4, 0x00050081, 
0x00000008, 0x00000108, 0x00000106, 0x00000107, 0x0004003D, 0x00000008, 0x00000109, 0x0000008E, 0x00050083, 0x00000008, 0x0000010A, 0x00000108, 
0x00000109, 0x0003003E, 0x00000105, 0x0000010A, 0x00040008, 0x00000001, 0x000000D4, 0x00000000, 0x0004003D, 0x00000008, 0x0000010B, 0x00000094, 
0x0004003D, 0x00000008, 0x0000010C, 0x00000105, 0x00050083, 0x00000008, 0x0000010D, 0x0000010B, 0x0000010C, 0x0004003D, 0x00000008, 0x0000010E, 
0x00000094, 0x0004003D, 0x00000008, 0x0000010F, 0x00000105, 0x00050083, 0x00000008, 0x00000110, 0x0000010E, 0x0000010F, 0x00050094, 0x00000007, 
0x00000111, 0x0000010D, 0x00000110, 0x000500BA, 0x000000A1, 0x00000113, 0x00000111, 0x00000112, 0x000300F7, 0x00000115, 0x00000000, 0x000400FA, 
0x00000113, 0x00000114, 0x00000115, 0x000200F8, 0x00000114, 0x00040008, 0x00000001, 0x000000D6, 0x00000000, 0x0004003D, 0x00000007, 0x00000116, 
0x00000095, 0x0004003D, 0x00000008, 0x00000117, 0x00000094, 0x0004003D, 0x00000008, 0x00000118, 0x00000105, 0x00050081, 0x00000008, 0x00000119, 
0x00000117, 0x00000118, 0x0005008E, 0x00000008, 0x0000011A, 0x00000119, 0x000000B7, 0x0004003D, 0x00000008, 0x0000011B, 0x00000105, 0x0004003D, 
0x00000008, 0x0000011C, 0x00000094, 0x00050083, 0x00000008, 0x0000011D, 0x0000011B, 0x0000011C, 0x0006000C, 0x00000008, 0x0000011E, 0x00000002, 
0x00000045, 0x0000011D, 0x00050094, 0x00000007, 0x0000011F, 0x0000011A, 0x0000011E, 0x0007000C, 0x00000007, 0x00000120, 0x00000002, 0x00000025, 
0x00000116, 0x0000011F, 0x0003003E, 0x00000095, 0x00000120, 0x000200F9, 0x00000115, 0x000200F8, 0x00000115, 0x000200F9, 0x000000E8, 0x000200F8, 
0x000000E8, 0x00040008, 0x00000001, 0x000000CB, 0x00000000, 0x0004003D, 0x0000003B, 0x00000121, 0x000000E4, 0x00050080, 0x0000003B, 0x00000122, 
0x00000121, 0x000000A0, 0x0003003E, 0x000000E4, 0x00000122, 0x000200F9, 0x000000E5, 0x000200F8, 0x000000E7, 0x000200F9, 0x000000DF, 0x000200F8, 
0x000000DF, 0x00040008, 0x00000001, 0x000000C6, 0x00000000, 0x0004003D, 0x0000003B, 0x00000123, 0x000000DA, 0x00050080, 0x0000003B, 0x00000124, 
0x00000123, 0x000000A0, 0x0003003E, 0x000000DA, 0x00000124, 0x000200F9, 0x000000DC, 0x000200F8, 0x000000DE, 0x00040008, 0x00000001, 0x000000DE, 
0x00000000, 0x0004003D, 0x00000008, 0x00000125, 0x0000001D, 0x0004003D, 0x00000008, 0x00000126, 0x0000008B, 0x0004003D, 0x00000008, 0x00000127, 
0x00000094, 0x00050081, 0x00000008, 0x00000128, 0x00000126, 0x00000127, 0x0004003D, 0x00000008, 0x00000129, 0x0000008E, 0x00050081, 0x00000008, 
0x0000012A, 0x00000128, 0x00000129, 0x00050083, 0x00000008, 0x0000012B, 0x00000125, 0x0000012A, 0x0004003D, 0x00000007, 0x0000012C, 0x00000095, 
0x0004003D, 0x00000008, 0x0000012D, 0x00000091, 0x0004003D, 0x00000008, 0x0000012E, 0x0000008B, 0x00050081, 0x00000008, 0x0000012F, 0x0000012D, 
0x0000012E, 0x0003003E, 0x00000130, 0x0000012F, 0x00050039, 0x00000007, 0x00000131, 0x00000010, 0x00000130, 0x00050051, 0x00000007, 0x00000132, 
0x0000012B, 0x00000000, 0x00050051, 0x00000007, 0x00000133, 0x0000012B, 0x00000001, 0x00070050, 0x0000001B, 0x00000134, 0x00000132, 0x00000133, 
0x0000012C, 0x00000131, 0x000200FE, 0x00000134, 0x00010038, 0x00050036, 0x00000020, 0x00000024, 0x00000000, 0x00000022, 0x00030037, 0x00000021, 
0x00000023, 0x000200F8, 0x00000025, 0x0004003B, 0x00000021, 0x00000137, 0x00000007, 0x00040008, 0x00000001, 0x000000E5, 0x00000000, 0x00050041, 
0x00000012, 0x00000138, 0x00000023, 0x00000067, 0x0004003D, 0x00000007, 0x00000139, 0x00000138, 0x00050085, 0x00000007, 0x0000013B, 0x00000139, 
0x0000013A, 0x00050083, 0x00000007, 0x0000013D, 0x0000013B, 0x0000013C, 0x0006000C, 0x00000007, 0x0000013E, 0x00000002, 0x00000004, 0x0000013D, 
0x00050083, 0x00000007, 0x00000140, 0x0000013E, 0x0000013F, 0x00050041, 0x00000012, 0x00000141, 0x00000023, 0x00000067, 0x0004003D, 0x00000007, 
0x00000142, 0x00000141, 0x00050085, 0x00000007, 0x00000143, 0x00000142, 0x0000013A, 0x00050083, 0x00000007, 0x00000144, 0x00000143, 0x0000007F, 
0x0006000C, 0x00000007, 0x00000145, 0x00000002, 0x00000004, 0x00000144, 0x00050083, 0x00000007, 0x00000146, 0x0000007F, 0x00000145, 0x00050041, 
0x00000012, 0x00000147, 0x00000023, 0x00000067, 0x0004003D, 0x00000007, 0x00000148, 0x00000147, 0x00050085, 0x00000007, 0x00000149, 0x00000148, 
0x0000013A, 0x00050083, 0x00000007, 0x0000014A, 0x00000149, 0x00000083, 0x0006000C, 0x00000007, 0x0000014B, 0x00000002, 0x00000004, 0x0000014A, 
0x00050083, 0x00000007, 0x0000014C, 0x0000007F, 0x0000014B, 0x00060050, 0x00000020, 0x0000014D, 0x00000140, 0x00000146, 0x0000014C, 0x0003003E, 
0x00000137, 0x0000014D, 0x00040008, 0x00000001, 0x000000E6, 0x00000000, 0x0004003D, 0x00000020, 0x0000014E, 0x00000137, 0x0008000C, 0x00000020, 
0x00000151, 0x00000002, 0x0000002B, 0x0000014E, 0x0000014F, 0x00000150, 0x00060050, 0x00000020, 0x00000152, 0x0000013F, 0x0000013F, 0x0000013F, 
0x00050083, 0x00000020, 0x00000153, 0x00000151, 0x00000152, 0x00050041, 0x00000012, 0x00000154, 0x00000023, 0x00000045, 0x0004003D, 0x00000007, 
0x00000155, 0x00000154, 0x0005008E, 0x00000020, 0x00000156, 0x00000153, 0x00000155, 0x00060050, 0x00000020, 0x00000157, 0x0000013F, 0x0000013F, 
0x0000013F, 0x00050081, 0x00000020, 0x00000158, 0x00000156, 0x00000157, 0x00050041, 0x00000012, 0x0000015A, 0x00000023, 0x00000159, 0x0004003D, 
0x00000007, 0x0000015B, 0x0000015A, 0x0005008E, 0x00000020, 0x0000015C, 0x00000158, 0x0000015B, 0x000200FE, 0x0000015C, 0x00010038, 0x00050036, 
0x00000020, 0x00000029, 0x00000000, 0x00000026, 0x00030037, 0x00000012, 0x00000027, 0x00030037, 0x00000012, 0x00000028, 0x000200F8, 0x0000002A, 
0x0004003B, 0x00000021, 0x00000163, 0x00000007, 0x00040008, 0x00000001, 0x000000EC, 0x00000000, 0x0004003D, 0x00000007, 0x0000015F, 0x00000028, 
0x0007000C, 0x00000007, 0x00000160, 0x00000002, 0x0000001A, 0x0000015F, 0x00000096, 0x0003003E, 0x00000028, 0x00000160, 0x00040008, 0x00000001, 
0x000000ED, 0x00000000, 0x0004003D, 0x00000007, 0x00000161, 0x00000027, 0x00060050, 0x00000020, 0x00000162, 0x00000161, 0x0000013F, 0x0000013F, 
0x0003003E, 0x00000163, 0x00000162, 0x00050039, 0x00000020, 0x00000164, 0x00000024, 0x00000163, 0x0004003D, 0x00000007, 0x00000165, 0x00000028, 
0x00050083, 0x00000007, 0x00000166, 0x0000013F, 0x00000165, 0x00060050, 0x00000020, 0x00000167, 0x00000166, 0x00000166, 0x00000166, 0x0008000C, 
0x00000020, 0x00000168, 0x00000002, 0x0000002E, 0x00000150, 0x00000164, 0x00000167, 0x000200FE, 0x00000168, 0x00010038, 0x00050036, 0x00000020, 
0x0000002E, 0x00000000, 0x0000002B, 0x00030037, 0x00000009, 0x0000002C, 0x00030037, 0x00000012, 0x0000002D, 0x000200F8, 0x0000002F, 0x0004003B, 
0x00000009, 0x0000016B, 0x00000007, 0x0004003B, 0x00000021, 0x0000016E, 0x00000007, 0x0004003B, 0x00000012, 0x0000016F, 0x00000007, 0x0004003B, 
0x00000012, 0x00000170, 0x00000007, 0x0004003B, 0x00000097, 0x00000171, 0x00000007, 0x0004003B, 0x00000030, 0x0000017A, 0x00000007, 0x0004003B, 
0x00000009, 0x0000017B, 0x00000007, 0x0004003B, 0x00000012, 0x00000184, 0x00000007, 0x0004003B, 0x00000012, 0x0000018A, 0x00000007, 0x0004003B, 
0x00000012, 0x00000191, 0x00000007, 0x0004003B, 0x00000021, 0x00000199, 0x00000007, 0x0004003B, 0x00000012, 0x000001A2, 0x00000007, 0x0004003B, 
0x00000012, 0x000001A8, 0x00000007, 0x0004003B, 0x00000012, 0x000001A9, 0x00000007, 0x0004003B, 0x00000012, 0x000001BC, 0x00000007, 0x0004003B, 
0x00000012, 0x000001BD, 0x00000007, 0x00040008, 0x00000001, 0x000000F4, 0x00000000, 0x0004003D, 0x00000008, 0x0000016C, 0x0000002C, 0x0005008E, 
0x00000008, 0x0000016D, 0x0000016C, 0x00000083, 0x0003003E, 0x0000016B, 0x0000016D, 0x00040008, 0x00000001, 0x000000F6, 0x00000000, 0x0003003E, 
0x0000016E, 0x0000014F, 0x00040008, 0x00000001, 0x000000F8, 0x00000000, 0x0003003E, 0x0000016F, 0x00000092, 0x00040008, 0x00000001, 0x000000FA, 
0x00000000, 0x0003003E, 0x00000170, 0x00000092, 0x00040008, 0x00000001, 0x000000FD, 0x00000000, 0x0003003E, 0x00000171, 0x00000044, 0x000200F9, 
0x00000172, 0x00040008, 0x00000001, 0x000000FE, 0x00000000, 0x000200F8, 0x00000172, 0x000400F6, 0x00000174, 0x00000175, 0x00000000, 0x000200F9, 
0x00000176, 0x000200F8, 0x00000176, 0x0004003D, 0x0000003B, 0x00000177, 0x00000171, 0x000500B1, 0x000000A1, 0x00000179, 0x00000177, 0x00000178, 
0x000400FA, 0x00000179, 0x00000173, 0x00000174, 0x000200F8, 0x00000173, 0x00040008, 0x00000001, 0x00000101, 0x00000000, 0x0004003D, 0x00000008, 
0x0000017C, 0x0000016B, 0x0003003E, 0x0000017B, 0x0000017C, 0x00050039, 0x0000001B, 0x0000017D, 0x0000001E, 0x0000017B, 0x0003003E, 0x0000017A, 
0x0000017D, 0x00040008, 0x00000001, 0x00000102, 0x00000000, 0x0004003D, 0x0000001B, 0x0000017E, 0x0000017A, 0x0007004F, 0x00000008, 0x0000017F, 
0x0000017E, 0x0000017E, 0x00000000, 0x00000001, 0x0005008E, 0x00000008, 0x00000180, 0x0000017F, 0x000000B7, 0x00050050, 0x00000008, 0x00000181, 
0x000000B7, 0x000000B7, 0x00050081, 0x00000008, 0x00000182, 0x00000180, 0x00000181, 0x0005008E, 0x00000008, 0x00000183, 0x00000182, 0x0000013A, 
0x00050041, 0x00000012, 0x00000186, 0x0000017A, 0x00000185, 0x0004003D, 0x00000007, 0x00000187, 0x00000186, 0x0003003E, 0x00000184, 0x00000187, 
0x00050039, 0x00000008, 0x00000188, 0x00000015, 0x00000184, 0x00050081, 0x00000008, 0x00000189, 0x00000183, 0x00000188, 0x0003003E, 0x0000016B, 
0x00000189, 0x00040008, 0x00000001, 0x00000104, 0x00000000, 0x0004003D, 0x0000003B, 0x0000018C, 0x00000171, 0x00050082, 0x0000003B, 0x0000018D, 
0x00000178, 0x0000018C, 0x0004006F, 0x00000007, 0x0000018E, 0x0000018D, 0x00050085, 0x00000007, 0x0000018F, 0x0000018B, 0x0000018E, 0x0007000C, 
0x00000007, 0x00000190, 0x00000002, 0x0000001A, 0x0000018F, 0x0000013C, 0x0003003E, 0x0000018A, 0x00000190, 0x00040008, 0x00000001, 0x00000106, 
0x00000000, 0x0004003D, 0x00000007, 0x00000193, 0x0000018A, 0x00050081, 0x00000007, 0x00000194, 0x00000192, 0x00000193, 0x00050041, 0x00000012, 
0x00000195, 0x0000017A, 0x00000159, 0x0004003D, 0x00000007, 0x00000196, 0x00000195, 0x0008000C, 0x00000007, 0x00000197, 0x00000002, 0x00000031, 
0x00000092, 0x00000194, 0x00000196, 0x00050083, 0x00000007, 0x00000198, 0x0000013F, 0x00000197, 0x0003003E, 0x00000191, 0x00000198, 0x00040008, 
0x00000001, 0x00000108, 0x00000000, 0x0004003D, 0x0000003B, 0x0000019A, 0x00000171, 0x00050080, 0x0000003B, 0x0000019B, 0x0000019A, 0x000000A0, 
0x0004006F, 0x00000007, 0x0000019C, 0x0000019B, 0x00050088, 0x00000007, 0x0000019D, 0x0000019C, 0x00000083, 0x0004003D, 0x00000007, 0x0000019E, 
0x00000170, 0x00050085, 0x00000007, 0x000001A0, 0x0000019E, 0x0000019F, 0x00050081, 0x00000007, 0x000001A1, 0x0000019D, 0x000001A0, 0x0003003E, 
0x000001A2, 0x000001A1, 0x00050039, 0x00000007, 0x000001A3, 0x00000019, 0x000001A2, 0x0004003D, 0x0000003B, 0x000001A4, 0x00000171, 0x000500AD, 
0x000000A1, 0x000001A5, 0x000001A4, 0x000000A0, 0x0004003D, 0x00000007, 0x000001A6, 0x00000191, 0x000600A9, 0x00000007, 0x000001A7, 0x000001A5, 
0x00000092, 0x000001A6, 0x0003003E, 0x000001A8, 0x000001A3, 0x0003003E, 0x000001A9, 0x000001A7, 0x00060039, 0x00000020, 0x000001AA, 0x00000029, 
0x000001A8, 0x000001A9, 0x0003003E, 0x00000199, 0x000001AA, 0x00040008, 0x00000001, 0x00000109, 0x00000000, 0x0004003D, 0x00000020, 0x000001AB, 
0x0000016E, 0x0004003D, 0x00000007, 0x000001AC, 0x0000016F, 0x0005008E, 0x00000020, 0x000001AD, 0x000001AB, 0x000001AC, 0x0004003D, 0x00000020, 
0x000001AE, 0x00000199, 0x0004003D, 0x00000007, 0x000001AF, 0x00000191, 0x0005008E, 0x00000020, 0x000001B0, 0x000001AE, 0x000001AF, 0x00050081, 
0x00000020, 0x000001B1, 0x000001AD, 0x000001B0, 0x0003003E, 0x0000016E, 0x000001B1, 0x00040008, 0x00000001, 0x0000010A, 0x00000000, 0x0004003D, 
0x00000007, 0x000001B2, 0x0000016F, 0x0004003D, 0x00000007, 0x000001B3, 0x00000191, 0x0007000C, 0x00000007, 0x000001B4, 0x00000002, 0x00000028, 
0x000001B2, 0x000001B3, 0x0003003E, 0x0000016F, 0x000001B4, 0x00040008, 0x00000001, 0x0000010B, 0x00000000, 0x00050041, 0x00000012, 0x000001B5, 
0x0000017A, 0x00000185, 0x0004003D, 0x00000007, 0x000001B6, 0x000001B5, 0x0003003E, 0x00000170, 0x000001B6, 0x000200F9, 0x00000175, 0x000200F8, 
0x00000175, 0x00040008, 0x00000001, 0x000000FE, 0x00000000, 0x0004003D, 0x0000003B, 0x000001B7, 0x00000171, 0x00050080, 0x0000003B, 0x000001B8, 
0x000001B7, 0x000000A0, 0x0003003E, 0x00000171, 0x000001B8, 0x000200F9, 0x00000172, 0x000200F8, 0x00000174, 0x00040008, 0x00000001, 0x0000010F, 
0x00000000, 0x0004003D, 0x00000007, 0x000001B9, 0x0000016F, 0x00060050, 0x00000020, 0x000001BA, 0x000001B9, 0x000001B9, 0x000001B9, 0x0003003E, 
0x000001BC, 0x000001BB, 0x0004003D, 0x00000007, 0x000001BE, 0x0000016F, 0x0003003E, 0x000001BD, 0x000001BE, 0x00060039, 0x00000020, 0x000001BF, 
0x00000029, 0x000001BC, 0x000001BD, 0x00050085, 0x00000020, 0x000001C0, 0x000001BA, 0x000001BF, 0x000200FE, 0x000001C0, 0x00010038, 0x00050036, 
0x00000003, 0x00000034, 0x00000000, 0x00000031, 0x00030037, 0x00000030, 0x00000032, 0x00030037, 0x00000009, 0x00000033, 0x000200F8, 0x00000035, 
0x0004003B, 0x00000021, 0x000001C3, 0x00000007, 0x0004003B, 0x00000009, 0x000001CA, 0x00000007, 0x0004003B, 0x00000012, 0x000001CB, 0x00000007, 
0x00040008, 0x00000001, 0x00000116, 0x00000000, 0x0004003D, 0x00000008, 0x000001C4, 0x00000033, 0x00050041, 0x000001C5, 0x000001C6, 0x00000043, 
0x00000044, 0x0004003D, 0x0000001B, 0x000001C7, 0x000001C6, 0x0007004F, 0x00000008, 0x000001C8, 0x000001C7, 0x000001C7, 0x00000000, 0x00000000, 
0x00050088, 0x00000008, 0x000001C9, 0x000001C4, 0x000001C8, 0x0003003E, 0x000001CA, 0x000001C9, 0x00050041, 0x00000046, 0x000001CC, 0x00000043, 
0x000000A0, 0x0004003D, 0x00000007, 0x000001CD, 0x000001CC, 0x0003003E, 0x000001CB, 0x000001CD, 0x00060039, 0x00000020, 0x000001CE, 0x0000002E, 
0x000001CA, 0x000001CB, 0x0003003E, 0x000001C3, 0x000001CE, 0x00040008, 0x00000001, 0x00000117, 0x00000000, 0x0004003D, 0x00000020, 0x000001CF, 
0x000001C3, 0x00050051, 0x00000007, 0x000001D0, 0x000001CF, 0x00000000, 0x00050051, 0x00000007, 0x000001D1, 0x000001CF, 0x00000001, 0x00050051, 
0x00000007, 0x000001D2, 0x000001CF, 0x00000002, 0x00070050, 0x0000001B, 0x000001D3, 0x000001D0, 0x000001D1, 0x000001D2, 0x0000013F, 0x0003003E, 
0x00000032, 0x000001D3, 0x000100FD, 0x00010038 });
	descr.Fragment().StringSpirvAsm( 
R"#(// Module Version 10000
// Generated by (magic number): 80002
// Id's are bound by 468

                              Capability Shader
               2:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 5  "main" 56 78
                              ExecutionMode 5 OriginUpperLeft
               1:             String  ""
                              Source GLSL 450 1  "// OpModuleProcessed entry-point main
// OpModuleProcessed client vulkan100
// OpModuleProcessed target-env vulkan1.0
// OpModuleProcessed entry-point main
#line 1
"
                              SourceExtension  "GL_ARB_gpu_shader_int64"
                              SourceExtension  "GL_ARB_separate_shader_objects"
                              Name 5  "main"
                              Name 12  "Hash22(vf2;"
                              Name 11  "p"
                              Name 16  "Hash21(vf2;"
                              Name 15  "p"
                              Name 21  "Hash12(f1;"
                              Name 20  "f"
                              Name 25  "Hash11(f1;"
                              Name 24  "a"
                              Name 30  "voronoi(vf2;"
                              Name 29  "x"
                              Name 36  "HSVtoRGB(vf3;"
                              Name 35  "hsv"
                              Name 41  "Rainbow(f1;f1;"
                              Name 39  "color"
                              Name 40  "dist"
                              Name 46  "VoronoiFactal(vf2;f1;"
                              Name 44  "coord"
                              Name 45  "time"
                              Name 52  "mainImage(vf4;vf2;"
                              Name 50  "fragColor"
                              Name 51  "fragCoord"
                              Name 54  "coord"
                              Name 56  "gl_FragCoord"
                              Name 65  "ShadertoyUB"
                              MemberName 65(ShadertoyUB) 0  "iResolution"
                              MemberName 65(ShadertoyUB) 1  "iTime"
                              MemberName 65(ShadertoyUB) 2  "iTimeDelta"
                              MemberName 65(ShadertoyUB) 3  "iFrame"
                              MemberName 65(ShadertoyUB) 4  "_padding0"
                              MemberName 65(ShadertoyUB) 5  "iChannelTime"
                              MemberName 65(ShadertoyUB) 6  "iChannelResolution"
                              MemberName 65(ShadertoyUB) 7  "iMouse"
                              MemberName 65(ShadertoyUB) 8  "iDate"
                              MemberName 65(ShadertoyUB) 9  "iSampleRate"
                              MemberName 65(ShadertoyUB) 10  "_padding1"
                              MemberName 65(ShadertoyUB) 11  "_padding2"
                              MemberName 65(ShadertoyUB) 12  "_padding3"
                              MemberName 65(ShadertoyUB) 13  "iCameraFrustum"
                              MemberName 65(ShadertoyUB) 14  "iCameraPos"
                              Name 67  ""
                              Name 78  "out_Color0"
                              Name 79  "param"
                              Name 80  "param"
                              Name 84  "q"
                              Name 135  "param"
                              Name 139  "n"
                              Name 142  "f"
                              Name 145  "mg"
                              Name 148  "mr"
                              Name 149  "md"
                              Name 152  "j"
                              Name 163  "i"
                              Name 171  "g"
                              Name 177  "o"
                              Name 181  "param"
                              Name 196  "r"
                              Name 202  "d"
                              Name 218  "j"
                              Name 228  "i"
                              Name 236  "g"
                              Name 244  "o"
                              Name 248  "param"
                              Name 261  "r"
                              Name 304  "param"
                              Name 311  "col"
                              Name 355  "param"
                              Name 363  "uv"
                              Name 366  "color"
                              Name 367  "alpha"
                              Name 368  "value"
                              Name 369  "i"
                              Name 378  "v"
                              Name 379  "param"
                              Name 388  "param"
                              Name 394  "f"
                              Name 401  "a"
                              Name 409  "c"
                              Name 418  "param"
                              Name 424  "param"
                              Name 425  "param"
                              Name 444  "param"
                              Name 445  "param"
                              Name 451  "color"
                              Name 458  "param"
                              Name 459  "param"
                              Decorate 56(gl_FragCoord) BuiltIn FragCoord
                              Decorate 62 ArrayStride 16
                              Decorate 63 ArrayStride 16
                              Decorate 64 ArrayStride 16
                              MemberDecorate 65(ShadertoyUB) 0 Offset 0
                              MemberDecorate 65(ShadertoyUB) 1 Offset 16
                              MemberDecorate 65(ShadertoyUB) 2 Offset 20
                              MemberDecorate 65(ShadertoyUB) 3 Offset 24
                              MemberDecorate 65(ShadertoyUB) 4 Offset 28
                              MemberDecorate 65(ShadertoyUB) 5 Offset 32
                              MemberDecorate 65(ShadertoyUB) 6 Offset 96
                              MemberDecorate 65(ShadertoyUB) 7 Offset 160
                              MemberDecorate 65(ShadertoyUB) 8 Offset 176
                              MemberDecorate 65(ShadertoyUB) 9 Offset 192
                              MemberDecorate 65(ShadertoyUB) 10 Offset 196
                              MemberDecorate 65(ShadertoyUB) 11 Offset 200
                              MemberDecorate 65(ShadertoyUB) 12 Offset 204
                              MemberDecorate 65(ShadertoyUB) 13 Offset 208
                              MemberDecorate 65(ShadertoyUB) 14 Offset 272
                              Decorate 65(ShadertoyUB) Block
                              Decorate 67 DescriptorSet 0
                              Decorate 67 Binding 0
                              Decorate 78(out_Color0) Location 0
               3:             TypeVoid
               4:             TypeFunction 3
               7:             TypeFloat 32
               8:             TypeVector 7(float) 2
               9:             TypePointer Function 8(fvec2)
              10:             TypeFunction 8(fvec2) 9(ptr)
              14:             TypeFunction 7(float) 9(ptr)
              18:             TypePointer Function 7(float)
              19:             TypeFunction 8(fvec2) 18(ptr)
              23:             TypeFunction 7(float) 18(ptr)
              27:             TypeVector 7(float) 4
              28:             TypeFunction 27(fvec4) 9(ptr)
              32:             TypeVector 7(float) 3
              33:             TypePointer Function 32(fvec3)
              34:             TypeFunction 32(fvec3) 33(ptr)
              38:             TypeFunction 32(fvec3) 18(ptr) 18(ptr)
              43:             TypeFunction 32(fvec3) 9(ptr) 18(ptr)
              48:             TypePointer Function 27(fvec4)
              49:             TypeFunction 3 48(ptr) 9(ptr)
              55:             TypePointer Input 27(fvec4)
56(gl_FragCoord):     55(ptr) Variable Input
              59:             TypeInt 32 1
              60:             TypeInt 32 0
              61:     60(int) Constant 4
              62:             TypeArray 27(fvec4) 61
              63:             TypeArray 27(fvec4) 61
              64:             TypeArray 27(fvec4) 61
 65(ShadertoyUB):             TypeStruct 27(fvec4) 7(float) 7(float) 59(int) 7(float) 62 63 27(fvec4) 27(fvec4) 7(float) 7(float) 7(float) 7(float) 64 27(fvec4)
              66:             TypePointer Uniform 65(ShadertoyUB)
              67:     66(ptr) Variable Uniform
              68:     59(int) Constant 0
              69:     60(int) Constant 1
              70:             TypePointer Uniform 7(float)
              77:             TypePointer Output 27(fvec4)
  78(out_Color0):     77(ptr) Variable Output
              86:    7(float) Constant 1123955507
              87:    7(float) Constant 1134287258
              88:    8(fvec2) ConstantComposite 86 87
              91:    7(float) Constant 1132904448
              92:    7(float) Constant 1127697613
              93:    8(fvec2) ConstantComposite 91 92
              98:    7(float) Constant 1193995916
             103:     60(int) Constant 0
             108:    7(float) Constant 1115684864
             112:    7(float) Constant 1204494835
             119:    7(float) Constant 1176260177
             120:    7(float) Constant 1192278451
             121:    8(fvec2) ConstantComposite 119 120
             127:    7(float) Constant 1073741824
             131:    7(float) Constant 1082130432
             146:    7(float) Constant 0
             147:    8(fvec2) ConstantComposite 146 146
             150:    7(float) Constant 1090519040
             151:             TypePointer Function 59(int)
             153:     59(int) Constant 4294967295
             160:     59(int) Constant 1
             161:             TypeBool
             183:    7(float) Constant 1056964608
             187:    7(float) Constant 1086918440
             219:     59(int) Constant 4294967294
             226:     59(int) Constant 2
             274:    7(float) Constant 925353388
             314:    7(float) Constant 1086324736
             316:    7(float) Constant 1077936128
             319:    7(float) Constant 1065353216
             335:   32(fvec3) ConstantComposite 146 146 146
             336:   32(fvec3) ConstantComposite 319 319 319
             345:     60(int) Constant 2
             376:     59(int) Constant 4
             389:     60(int) Constant 3
             395:    7(float) Constant 1008981770
             402:    7(float) Constant 1034147594
             415:    7(float) Constant 1068213731
             443:    7(float) Constant 1031127695
             453:             TypePointer Uniform 27(fvec4)
         5(main):           3 Function None 4
               6:             Label
       54(coord):      9(ptr) Variable Function
       79(param):     48(ptr) Variable Function
       80(param):      9(ptr) Variable Function
                              Line 1 118 0
              57:   27(fvec4) Load 56(gl_FragCoord)
              58:    8(fvec2) VectorShuffle 57 57 0 1
                              Store 54(coord) 58
                              Line 1 119 0
              71:     70(ptr) AccessChain 67 68 69
              72:    7(float) Load 71
              73:     18(ptr) AccessChain 54(coord) 69
              74:    7(float) Load 73
              75:    7(float) FSub 72 74
              76:     18(ptr) AccessChain 54(coord) 69
                              Store 76 75
                              Line 1 120 0
              81:    8(fvec2) Load 54(coord)
                              Store 80(param) 81
              82:           3 FunctionCall 52(mainImage(vf4;vf2;) 79(param) 80(param)
              83:   27(fvec4) Load 79(param)
                              Store 78(out_Color0) 83
                              Return
                              FunctionEnd
 12(Hash22(vf2;):    8(fvec2) Function None 10
           11(p):      9(ptr) FunctionParameter
              13:             Label
           84(q):      9(ptr) Variable Function
                              Line 1 127 0
              85:    8(fvec2) Load 11(p)
              89:    7(float) Dot 85 88
              90:    8(fvec2) Load 11(p)
              94:    7(float) Dot 90 93
              95:    8(fvec2) CompositeConstruct 89 94
                              Store 84(q) 95
                              Line 1 128 0
              96:    8(fvec2) Load 84(q)
              97:    8(fvec2) ExtInst 2(GLSL.std.450) 13(Sin) 96
              99:    8(fvec2) VectorTimesScalar 97 98
             100:    8(fvec2) ExtInst 2(GLSL.std.450) 10(Fract) 99
                              ReturnValue 100
                              FunctionEnd
 16(Hash21(vf2;):    7(float) Function None 14
           15(p):      9(ptr) FunctionParameter
              17:             Label
                              Line 1 134 0
             104:     18(ptr) AccessChain 15(p) 103
             105:    7(float) Load 104
             106:     18(ptr) AccessChain 15(p) 69
             107:    7(float) Load 106
             109:    7(float) FMul 107 108
             110:    7(float) FAdd 105 109
             111:    7(float) ExtInst 2(GLSL.std.450) 13(Sin) 110
             113:    7(float) FMul 111 112
             114:    7(float) ExtInst 2(GLSL.std.450) 10(Fract) 113
                              ReturnValue 114
                              FunctionEnd
  21(Hash12(f1;):    8(fvec2) Function None 19
           20(f):     18(ptr) FunctionParameter
              22:             Label
                              Line 1 140 0
             117:    7(float) Load 20(f)
             118:    7(float) ExtInst 2(GLSL.std.450) 14(Cos) 117
             122:    8(fvec2) VectorTimesScalar 121 118
             123:    8(fvec2) ExtInst 2(GLSL.std.450) 10(Fract) 122
                              ReturnValue 123
                              FunctionEnd
  25(Hash11(f1;):    7(float) Function None 23
           24(a):     18(ptr) FunctionParameter
              26:             Label
      135(param):      9(ptr) Variable Function
                              Line 1 146 0
             126:    7(float) Load 24(a)
             128:    7(float) FMul 126 127
             129:    7(float) ExtInst 2(GLSL.std.450) 10(Fract) 128
             130:    7(float) Load 24(a)
             132:    7(float) FMul 130 131
             133:    7(float) ExtInst 2(GLSL.std.450) 10(Fract) 132
             134:    8(fvec2) CompositeConstruct 129 133
                              Store 135(param) 134
             136:    7(float) FunctionCall 16(Hash21(vf2;) 135(param)
                              ReturnValue 136
                              FunctionEnd
30(voronoi(vf2;):   27(fvec4) Function None 28
           29(x):      9(ptr) FunctionParameter
              31:             Label
          139(n):      9(ptr) Variable Function
          142(f):      9(ptr) Variable Function
         145(mg):      9(ptr) Variable Function
         148(mr):      9(ptr) Variable Function
         149(md):     18(ptr) Variable Function
          152(j):    151(ptr) Variable Function
          163(i):    151(ptr) Variable Function
          171(g):      9(ptr) Variable Function
          177(o):      9(ptr) Variable Function
      181(param):      9(ptr) Variable Function
          196(r):      9(ptr) Variable Function
          202(d):     18(ptr) Variable Function
          218(j):    151(ptr) Variable Function
          228(i):    151(ptr) Variable Function
          236(g):      9(ptr) Variable Function
          244(o):      9(ptr) Variable Function
      248(param):      9(ptr) Variable Function
          261(r):      9(ptr) Variable Function
      304(param):      9(ptr) Variable Function
                              Line 1 153 0
             140:    8(fvec2) Load 29(x))#"_str
+
R"#(
             141:    8(fvec2) ExtInst 2(GLSL.std.450) 8(Floor) 140
                              Store 139(n) 141
                              Line 1 155 0
             143:    8(fvec2) Load 29(x)
             144:    8(fvec2) ExtInst 2(GLSL.std.450) 10(Fract) 143
                              Store 142(f) 144
                              Line 1 157 0
                              Store 145(mg) 147
                              Line 1 159 0
                              Store 148(mr) 147
                              Line 1 161 0
                              Store 149(md) 150
                              Line 1 164 0
                              Store 152(j) 153
                              Branch 154
                              Line 1 165 0
             154:             Label
                              LoopMerge 156 157 None
                              Branch 158
             158:             Label
             159:     59(int) Load 152(j)
             162:   161(bool) SLessThanEqual 159 160
                              BranchConditional 162 155 156
             155:               Label
                                Line 1 169 0
                                Store 163(i) 153
                                Branch 164
                                Line 1 170 0
             164:               Label
                                LoopMerge 166 167 None
                                Branch 168
             168:               Label
             169:     59(int)   Load 163(i)
             170:   161(bool)   SLessThanEqual 169 160
                                BranchConditional 170 165 166
             165:                 Label
                                  Line 1 173 0
             172:     59(int)     Load 163(i)
             173:    7(float)     ConvertSToF 172
             174:     59(int)     Load 152(j)
             175:    7(float)     ConvertSToF 174
             176:    8(fvec2)     CompositeConstruct 173 175
                                  Store 171(g) 176
                                  Line 1 175 0
             178:    8(fvec2)     Load 139(n)
             179:    8(fvec2)     Load 171(g)
             180:    8(fvec2)     FAdd 178 179
                                  Store 181(param) 180
             182:    8(fvec2)     FunctionCall 12(Hash22(vf2;) 181(param)
                                  Store 177(o) 182
                                  Line 1 176 0
             184:     70(ptr)     AccessChain 67 160
             185:    7(float)     Load 184
             186:    7(float)     FMul 185 183
             188:    8(fvec2)     Load 177(o)
             189:    8(fvec2)     VectorTimesScalar 188 187
             190:    8(fvec2)     CompositeConstruct 186 186
             191:    8(fvec2)     FAdd 190 189
             192:    8(fvec2)     ExtInst 2(GLSL.std.450) 13(Sin) 191
             193:    8(fvec2)     VectorTimesScalar 192 183
             194:    8(fvec2)     CompositeConstruct 183 183
             195:    8(fvec2)     FAdd 194 193
                                  Store 177(o) 195
                                  Line 1 178 0
             197:    8(fvec2)     Load 171(g)
             198:    8(fvec2)     Load 177(o)
             199:    8(fvec2)     FAdd 197 198
             200:    8(fvec2)     Load 142(f)
             201:    8(fvec2)     FSub 199 200
                                  Store 196(r) 201
                                  Line 1 180 0
             203:    8(fvec2)     Load 196(r)
             204:    8(fvec2)     Load 196(r)
             205:    7(float)     Dot 203 204
                                  Store 202(d) 205
                                  Line 1 181 0
             206:    7(float)     Load 202(d)
             207:    7(float)     Load 149(md)
             208:   161(bool)     FOrdLessThan 206 207
                                  SelectionMerge 210 None
                                  BranchConditional 208 209 210
             209:                   Label
                                    Line 1 183 0
             211:    7(float)       Load 202(d)
                                    Store 149(md) 211
                                    Line 1 184 0
             212:    8(fvec2)       Load 196(r)
                                    Store 148(mr) 212
                                    Line 1 185 0
             213:    8(fvec2)       Load 171(g)
                                    Store 145(mg) 213
                                    Branch 210
             210:                 Label
                                  Branch 167
             167:                 Label
                                  Line 1 170 0
             214:     59(int)     Load 163(i)
             215:     59(int)     IAdd 214 160
                                  Store 163(i) 215
                                  Branch 164
             166:               Label
                                Branch 157
             157:               Label
                                Line 1 165 0
             216:     59(int)   Load 152(j)
             217:     59(int)   IAdd 216 160
                                Store 152(j) 217
                                Branch 154
             156:             Label
                              Line 1 194 0
                              Store 149(md) 150
                              Line 1 197 0
                              Store 218(j) 219
                              Branch 220
                              Line 1 198 0
             220:             Label
                              LoopMerge 222 223 None
                              Branch 224
             224:             Label
             225:     59(int) Load 218(j)
             227:   161(bool) SLessThanEqual 225 226
                              BranchConditional 227 221 222
             221:               Label
                                Line 1 202 0
                                Store 228(i) 219
                                Branch 229
                                Line 1 203 0
             229:               Label
                                LoopMerge 231 232 None
                                Branch 233
             233:               Label
             234:     59(int)   Load 228(i)
             235:   161(bool)   SLessThanEqual 234 226
                                BranchConditional 235 230 231
             230:                 Label
                                  Line 1 206 0
             237:    8(fvec2)     Load 145(mg)
             238:     59(int)     Load 228(i)
             239:    7(float)     ConvertSToF 238
             240:     59(int)     Load 218(j)
             241:    7(float)     ConvertSToF 240
             242:    8(fvec2)     CompositeConstruct 239 241
             243:    8(fvec2)     FAdd 237 242
                                  Store 236(g) 243
                                  Line 1 208 0
             245:    8(fvec2)     Load 139(n)
             246:    8(fvec2)     Load 236(g)
             247:    8(fvec2)     FAdd 245 246
                                  Store 248(param) 247
             249:    8(fvec2)     FunctionCall 12(Hash22(vf2;) 248(param)
                                  Store 244(o) 249
                                  Line 1 209 0
             250:     70(ptr)     AccessChain 67 160
             251:    7(float)     Load 250
             252:    7(float)     FMul 251 183
             253:    8(fvec2)     Load 244(o)
             254:    8(fvec2)     VectorTimesScalar 253 187
             255:    8(fvec2)     CompositeConstruct 252 252
             256:    8(fvec2)     FAdd 255 254
             257:    8(fvec2)     ExtInst 2(GLSL.std.450) 13(Sin) 256
             258:    8(fvec2)     VectorTimesScalar 257 183
             259:    8(fvec2)     CompositeConstruct 183 183
             260:    8(fvec2)     FAdd 259 258
                                  Store 244(o) 260
                                  Line 1 211 0
             262:    8(fvec2)     Load 236(g)
             263:    8(fvec2)     Load 244(o)
             264:    8(fvec2)     FAdd 262 263
             265:    8(fvec2)     Load 142(f)
             266:    8(fvec2)     FSub 264 265
                                  Store 261(r) 266
                                  Line 1 212 0
             267:    8(fvec2)     Load 148(mr)
             268:    8(fvec2)     Load 261(r)
             269:    8(fvec2)     FSub 267 268
             270:    8(fvec2)     Load 148(mr)
             271:    8(fvec2)     Load 261(r)
             272:    8(fvec2)     FSub 270 271
             273:    7(float)     Dot 269 272
             275:   161(bool)     FOrdGreaterThan 273 274
                                  SelectionMerge 277 None
                                  BranchConditional 275 276 277
             276:                   Label
                                    Line 1 214 0
             278:    7(float)       Load 149(md)
             279:    8(fvec2)       Load 148(mr)
             280:    8(fvec2)       Load 261(r)
             281:    8(fvec2)       FAdd 279 280
             282:    8(fvec2)       VectorTimesScalar 281 183
             283:    8(fvec2)       Load 261(r)
             284:    8(fvec2)       Load 148(mr)
             285:    8(fvec2)       FSub 283 284
             286:    8(fvec2)       ExtInst 2(GLSL.std.450) 69(Normalize) 285
             287:    7(float)       Dot 282 286
             288:    7(float)       ExtInst 2(GLSL.std.450) 37(FMin) 278 287
                                    Store 149(md) 288
                                    Branch 277
             277:                 Label
                                  Branch 232
             232:                 Label
                                  Line 1 203 0
             289:     59(int)     Load 228(i)
             290:     59(int)     IAdd 289 160
                                  Store 228(i) 290
                                  Branch 229
             231:               Label
                                Branch 223
             223:               Label
                                Line 1 198 0
             291:     59(int)   Load 218(j)
             292:     59(int)   IAdd 291 160
                                Store 218(j) 292
                                Branch 220
             222:             Label
                              Line 1 222 0
             293:    8(fvec2) Load 29(x)
             294:    8(fvec2) Load 139(n)
             295:    8(fvec2) Load 148(mr)
             296:    8(fvec2) FAdd 294 295
             297:    8(fvec2) Load 142(f)
             298:    8(fvec2) FAdd 296 297
             299:    8(fvec2) FSub 293 298
             300:    7(float) Load 149(md)
             301:    8(fvec2) Load 145(mg)
             302:    8(fvec2) Load 139(n)
             303:    8(fvec2) FAdd 301 302
                              Store 304(param) 303
             305:    7(float) FunctionCall 16(Hash21(vf2;) 304(param)
             306:    7(float) CompositeExtract 299 0
             307:    7(float) CompositeExtract 299 1
             308:   27(fvec4) CompositeConstruct 306 307 300 305
                              ReturnValue 308
                              FunctionEnd
36(HSVtoRGB(vf3;):   32(fvec3) Function None 34
         35(hsv):     33(ptr) FunctionParameter
              37:             Label
        311(col):     33(ptr) Variable Function
                              Line 1 229 0
             312:     18(ptr) AccessChain 35(hsv) 103
             313:    7(float) Load 312
             315:    7(float) FMul 313 314
             317:    7(float) FSub 315 316
             318:    7(float) ExtInst 2(GLSL.std.450) 4(FAbs) 317
             320:    7(float) FSub 318 319
             321:     18(ptr) AccessChain 35(hsv) 103
             322:    7(float) Load 321
             323:    7(float) FMul 322 314
             324:    7(float) FSub 323 127
             325:    7(float) ExtInst 2(GLSL.std.450) 4(FAbs) 324
             326:    7(float) FSub 127 325
             327:     18(ptr) AccessChain 35(hsv) 103
             328:    7(float) Load 327
             329:    7(float) FMul 328 314
             330:    7(float) FSub 329 131
             331:    7(float) ExtInst 2(GLSL.std.450) 4(FAbs) 330
             332:    7(float) FSub 127 331
             333:   32(fvec3) CompositeConstruct 320 326 332
                              Store 311(col) 333
                              Line 1 230 0
             334:   32(fvec3) Load 311(col)
             337:   32(fvec3) ExtInst 2(GLSL.std.450) 43(FClamp) 334 335 336
             338:   32(fvec3) CompositeConstruct 319 319 319
             339:   32(fvec3) FSub 337 338
             340:     18(ptr) AccessChain 35(hsv) 69
             341:    7(float) Load 340
             342:   32(fvec3) VectorTimesScalar 339 341
             343:   32(fvec3) CompositeConstruct 319 319 319
             344:   32(fvec3) FAdd 342 343
             346:     18(ptr) AccessChain 35(hsv) 345
             347:    7(float) Load 346
             348:   32(fvec3) VectorTimesScalar 344 347
                              ReturnValue 348
                              FunctionEnd
41(Rainbow(f1;f1;):   32(fvec3) Function None 38
       39(color):     18(ptr) FunctionParameter
        40(dist):     18(ptr) FunctionParameter
              42:             Label
      355(param):     33(ptr) Variable Function
                              Line 1 236 0
             351:    7(float) Load 40(dist)
             352:    7(float) ExtInst 2(GLSL.std.450) 26(Pow) 351 150
                              Store 40(dist) 352
                              Line 1 237 0
             353:    7(float) Load 39(color)
             354:   32(fvec3) CompositeConstruct 353 319 319
                              Store 355(param) 354
             356:   32(fvec3) FunctionCall 36(HSVtoRGB(vf3;) 355(param)
             357:    7(float) Load 40(dist)
             358:    7(float) FSub 319 357
             359:   32(fvec3) CompositeConstruct 358 358 358
             360:   32(fvec3) ExtInst 2(GLSL.std.450) 46(FMix) 336 356 359
                              ReturnValue 360
                              FunctionEnd
46(VoronoiFactal(vf2;f1;):   32(fvec3) Function None 43
       44(coord):      9(ptr) FunctionParameter
        45(time):     18(ptr) FunctionParameter
              47:             Label
         363(uv):      9(ptr) Variable Function
      366(color):     33(ptr) Variable Function
      367(alpha):     18(ptr) Variable Function
      368(value):     18(ptr) Variable Function
          369(i):    151(ptr) Variable Function
          378(v):     48(ptr) Variable Function
      379(param):      9(ptr) Variable Function
      388(param):     18(ptr) Variable Function
          394(f):     18(ptr) Variable Function
          401(a):     18(ptr) Variable Function
          409(c):     33(ptr) Variable Function
      418(param):     18(ptr) Variable Function
      424(param):     18(ptr) Variable Function
      425(param):     18(ptr) Variable Function
      444(param):     18(ptr) Variable Function
      445(param):     18(ptr) Variable Function
                              Line 1 244 0
             364:    8(fvec2) Load 44(coord)
             365:    8(fvec2) VectorTimesScalar 364 131
                              Store 363(uv) 365
                              Line 1 246 0
                              Store 366(color) 335
                              Line 1 248 0
                              Store 367(alpha) 146
                              Line 1 250 0
                              Store 368(value) 146
                              Line 1 253 0
                              Store 369(i) 68
                              Branch 370
                              Line 1 254 0
             370:             Label
                              LoopMerge 372 373 None
                              Branch 374
             374:             Label)#"_str
+
R"#(
             375:     59(int) Load 369(i)
             377:   161(bool) SLessThan 375 376
                              BranchConditional 377 371 372
             371:               Label
                                Line 1 257 0
             380:    8(fvec2)   Load 363(uv)
                                Store 379(param) 380
             381:   27(fvec4)   FunctionCall 30(voronoi(vf2;) 379(param)
                                Store 378(v) 381
                                Line 1 258 0
             382:   27(fvec4)   Load 378(v)
             383:    8(fvec2)   VectorShuffle 382 382 0 1
             384:    8(fvec2)   VectorTimesScalar 383 183
             385:    8(fvec2)   CompositeConstruct 183 183
             386:    8(fvec2)   FAdd 384 385
             387:    8(fvec2)   VectorTimesScalar 386 314
             390:     18(ptr)   AccessChain 378(v) 389
             391:    7(float)   Load 390
                                Store 388(param) 391
             392:    8(fvec2)   FunctionCall 21(Hash12(f1;) 388(param)
             393:    8(fvec2)   FAdd 387 392
                                Store 363(uv) 393
                                Line 1 260 0
             396:     59(int)   Load 369(i)
             397:     59(int)   ISub 376 396
             398:    7(float)   ConvertSToF 397
             399:    7(float)   FMul 395 398
             400:    7(float)   ExtInst 2(GLSL.std.450) 26(Pow) 399 316
                                Store 394(f) 400
                                Line 1 262 0
             403:    7(float)   Load 394(f)
             404:    7(float)   FAdd 402 403
             405:     18(ptr)   AccessChain 378(v) 345
             406:    7(float)   Load 405
             407:    7(float)   ExtInst 2(GLSL.std.450) 49(SmoothStep) 146 404 406
             408:    7(float)   FSub 319 407
                                Store 401(a) 408
                                Line 1 264 0
             410:     59(int)   Load 369(i)
             411:     59(int)   IAdd 410 160
             412:    7(float)   ConvertSToF 411
             413:    7(float)   FDiv 412 131
             414:    7(float)   Load 368(value)
             416:    7(float)   FMul 414 415
             417:    7(float)   FAdd 413 416
                                Store 418(param) 417
             419:    7(float)   FunctionCall 25(Hash11(f1;) 418(param)
             420:     59(int)   Load 369(i)
             421:   161(bool)   SGreaterThan 420 160
             422:    7(float)   Load 401(a)
             423:    7(float)   Select 421 146 422
                                Store 424(param) 419
                                Store 425(param) 423
             426:   32(fvec3)   FunctionCall 41(Rainbow(f1;f1;) 424(param) 425(param)
                                Store 409(c) 426
                                Line 1 265 0
             427:   32(fvec3)   Load 366(color)
             428:    7(float)   Load 367(alpha)
             429:   32(fvec3)   VectorTimesScalar 427 428
             430:   32(fvec3)   Load 409(c)
             431:    7(float)   Load 401(a)
             432:   32(fvec3)   VectorTimesScalar 430 431
             433:   32(fvec3)   FAdd 429 432
                                Store 366(color) 433
                                Line 1 266 0
             434:    7(float)   Load 367(alpha)
             435:    7(float)   Load 401(a)
             436:    7(float)   ExtInst 2(GLSL.std.450) 40(FMax) 434 435
                                Store 367(alpha) 436
                                Line 1 267 0
             437:     18(ptr)   AccessChain 378(v) 389
             438:    7(float)   Load 437
                                Store 368(value) 438
                                Branch 373
             373:               Label
                                Line 1 254 0
             439:     59(int)   Load 369(i)
             440:     59(int)   IAdd 439 160
                                Store 369(i) 440
                                Branch 370
             372:             Label
                              Line 1 271 0
             441:    7(float) Load 367(alpha)
             442:   32(fvec3) CompositeConstruct 441 441 441
                              Store 444(param) 443
             446:    7(float) Load 367(alpha)
                              Store 445(param) 446
             447:   32(fvec3) FunctionCall 41(Rainbow(f1;f1;) 444(param) 445(param)
             448:   32(fvec3) FMul 442 447
                              ReturnValue 448
                              FunctionEnd
52(mainImage(vf4;vf2;):           3 Function None 49
   50(fragColor):     48(ptr) FunctionParameter
   51(fragCoord):      9(ptr) FunctionParameter
              53:             Label
      451(color):     33(ptr) Variable Function
      458(param):      9(ptr) Variable Function
      459(param):     18(ptr) Variable Function
                              Line 1 278 0
             452:    8(fvec2) Load 51(fragCoord)
             454:    453(ptr) AccessChain 67 68
             455:   27(fvec4) Load 454
             456:    8(fvec2) VectorShuffle 455 455 0 0
             457:    8(fvec2) FDiv 452 456
                              Store 458(param) 457
             460:     70(ptr) AccessChain 67 160
             461:    7(float) Load 460
                              Store 459(param) 461
             462:   32(fvec3) FunctionCall 46(VoronoiFactal(vf2;f1;) 458(param) 459(param)
                              Store 451(color) 462
                              Line 1 279 0
             463:   32(fvec3) Load 451(color)
             464:    7(float) CompositeExtract 463 0
             465:    7(float) CompositeExtract 463 1
             466:    7(float) CompositeExtract 463 2
             467:   27(fvec4) CompositeConstruct 464 465 466 319
                              Store 50(fragColor) 467
                              Return
                              FunctionEnd
)#"_str );

};
};
